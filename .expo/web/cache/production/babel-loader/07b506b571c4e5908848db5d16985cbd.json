{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import React from\"react\";import Text from\"react-native-web/dist/exports/Text\";import ToastAndroid from\"react-native-web/dist/exports/ToastAndroid\";import View from\"react-native-web/dist/exports/View\";import{styles}from\"./styles\";import AsyncStorage from'@react-native-async-storage/async-storage';import{timeoutPromise,refreshToken,getRaceList}from\"./tools\";export var SplashScreen=function(_React$Component){_inherits(SplashScreen,_React$Component);var _super=_createSuper(SplashScreen);function SplashScreen(props){_classCallCheck(this,SplashScreen);return _super.call(this,props);}_createClass(SplashScreen,[{key:\"checkLogin\",value:function checkLogin(){var accesstoken,refreshtoken;return _regeneratorRuntime.async(function checkLogin$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(AsyncStorage.getItem('accesstoken'));case 2:accesstoken=_context.sent;_context.next=5;return _regeneratorRuntime.awrap(AsyncStorage.getItem('refreshtoken'));case 5:refreshtoken=_context.sent;if(accesstoken==null){this.props.navigation.replace('Login');}else{this.props.navigation.replace('MainNav');}case 7:case\"end\":return _context.stop();}}},null,this,null,Promise);}},{key:\"componentDidMount\",value:function componentDidMount(){var _this=this;return _regeneratorRuntime.async(function componentDidMount$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:try{this.focusListener=this.props.navigation.addListener('didFocus',function(){_this.checkLogin();});}catch(e){ToastAndroid.show(e,ToastAndroid.SHORT);}case 1:case\"end\":return _context2.stop();}}},null,this,null,Promise);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.focusListener.remove();}},{key:\"render\",value:function render(){return React.createElement(View,{style:styles.viewStyles},React.createElement(Text,{style:styles.textStyles},\"Reifenmanagement\"));}}]);return SplashScreen;}(React.Component);","map":{"version":3,"sources":["/home/toni/PycharmProjects/PropraSource/frontend/SplashScreen.js"],"names":["React","styles","AsyncStorage","timeoutPromise","refreshToken","getRaceList","SplashScreen","props","getItem","accesstoken","refreshtoken","navigation","replace","focusListener","addListener","checkLogin","e","ToastAndroid","show","SHORT","remove","viewStyles","textStyles","Component"],"mappings":"ikCAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,+KAEA,OAAQC,MAAR,gBACA,MAAOC,CAAAA,YAAP,KAAyB,2CAAzB,CACA,OAAQC,cAAR,CAAwBC,YAAxB,CAAqCC,WAArC,eAGA,UAAaC,CAAAA,YAAb,2GACI,sBAAYC,KAAZ,CAAmB,4DACTA,KADS,EAElB,CAHL,mDAKI,wNACkCL,YAAY,CAACM,OAAb,CAAqB,YAArB,CADlC,SACcC,WADd,gEAEmCP,YAAY,CAACM,OAAb,CAAqB,cAArB,CAFnC,SAEcE,YAFd,eAGQ,GAAID,WAAW,EAAI,IAAnB,CAAyB,CACrB,KAAKF,KAAL,CAAWI,UAAX,CAAsBC,OAAtB,CAA8B,OAA9B,EACH,CAFD,IAGK,CACD,KAAKL,KAAL,CAAWI,UAAX,CAAsBC,OAAtB,CAA8B,SAA9B,EACH,CART,qEALJ,iCAgBI,0KACI,GAAI,CACE,KAAKC,aAAL,CAAqB,KAAKN,KAAL,CAAWI,UAAX,CAAsBG,WAAtB,CAAkC,UAAlC,CAA8C,UAAM,CACnE,KAAI,CAACC,UAAL,GACP,CAFsB,CAArB,CAIL,CAAC,MAAOC,CAAP,CAAU,CACJC,YAAY,CAACC,IAAb,CAAkBF,CAAlB,CAAqBC,YAAY,CAACE,KAAlC,EACP,CARL,sEAhBJ,oCA2BI,+BAAwB,CACpB,KAAKN,aAAL,CAAmBO,MAAnB,GACH,CA7BL,sBA+BI,iBAAS,CACL,MACI,qBAAC,IAAD,EAAM,KAAK,CAAEnB,MAAM,CAACoB,UAApB,EACI,oBAAC,IAAD,EAAM,KAAK,CAAEpB,MAAM,CAACqB,UAApB,qBADJ,CADJ,CAOH,CAvCL,0BAAkCtB,KAAK,CAACuB,SAAxC","sourcesContent":["import React from \"react\";\r\nimport {Text, ToastAndroid, View} from \"react-native\";\r\nimport {styles} from \"./styles\"\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport {timeoutPromise, refreshToken,getRaceList} from \"./tools\";\r\n\r\n\r\nexport class SplashScreen extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    async checkLogin(){\r\n            const accesstoken = await AsyncStorage.getItem('accesstoken');\r\n            const refreshtoken = await AsyncStorage.getItem('refreshtoken');\r\n            if (accesstoken == null) {\r\n                this.props.navigation.replace('Login');\r\n            }\r\n            else {\r\n                this.props.navigation.replace('MainNav');\r\n            }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n              this.focusListener = this.props.navigation.addListener('didFocus', () => {\r\n                    this.checkLogin()\r\n            })\r\n\r\n        } catch (e) {\r\n                ToastAndroid.show(e, ToastAndroid.SHORT);\r\n        }\r\n\r\n    }\r\n    componentWillUnmount () {\r\n        this.focusListener.remove()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <View style={styles.viewStyles}>\r\n                <Text style={styles.textStyles}>\r\n                    Reifenmanagement\r\n                </Text>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}