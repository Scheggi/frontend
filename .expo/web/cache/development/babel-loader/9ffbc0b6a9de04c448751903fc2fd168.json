{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { styles } from \"./styles\";\nimport { getRaceList, timeoutPromise } from \"./tools\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport Button from \"react-native-web/dist/exports/Button\";\n\nvar IngenieurNav = function (_React$Component) {\n  _inherits(IngenieurNav, _React$Component);\n\n  var _super = _createSuper(IngenieurNav);\n\n  function IngenieurNav(props) {\n    var _this;\n\n    _classCallCheck(this, IngenieurNav);\n\n    _this = _super.call(this, props);\n\n    _this.changeLogout = function (event) {\n      event.preventDefault();\n\n      _this.props.navigation.push('Logout');\n    };\n\n    _this.changeFormel = function (event) {\n      event.preventDefault();\n\n      _this.props.navigation.push('Formel');\n    };\n\n    _this.changeIngenieur = function (event) {\n      event.preventDefault();\n\n      _this.props.navigation.push('Ingenieur');\n    };\n\n    _this.getRaceID = function (event) {\n      var id = event.target.value;\n      AsyncStorage.setItem(\"raceID\", event.target.value);\n\n      _this.saveRaceIDinState();\n    };\n\n    _this.state = {\n      dataRace: [],\n      dataWeather: [],\n      raceID: 0,\n      raceList: []\n    };\n    return _this;\n  }\n\n  _createClass(IngenieurNav, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var accesstoken;\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('accesstoken'));\n\n            case 2:\n              accesstoken = _context.sent;\n              getRaceList(accesstoken).then(function (racelistDropdown) {\n                console.log(racelistDropdown);\n\n                _this2.setState({\n                  raceList: racelistDropdown\n                });\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm() {\n      return this.state.raceID != 0;\n    }\n  }, {\n    key: \"saveRaceIDinState\",\n    value: function saveRaceIDinState() {\n      var id;\n      return _regeneratorRuntime.async(function saveRaceIDinState$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"raceID\"));\n\n            case 2:\n              id = _context2.sent;\n              this.setState({\n                raceID: id\n              });\n              console.log(this.state.raceID);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var optionTemplate = this.state.raceList.map(function (v) {\n        return React.createElement(\"option\", {\n          value: v.id,\n          key: v.id\n        }, v.name);\n      });\n      return React.createElement(View, {\n        style: styles.viewStyles\n      }, React.createElement(Text, {\n        style: styles.textStyles\n      }, \"24 Stunden Rennen\"), React.createElement(\"label\", null, \"W\\xE4hle das gew\\xFCnschte Rennen aus:\", React.createElement(\"select\", {\n        value: this.state.id,\n        onChange: this.getRaceID\n      }, optionTemplate)), React.createElement(Text, null), React.createElement(Button, {\n        title: \"Screen Formel\",\n        onPress: this.changeFormel\n      }), React.createElement(Text, null), React.createElement(Button, {\n        disabled: !this.validateForm(),\n        title: \"Screen \\xDCbersicht\",\n        onPress: this.changeIngenieur\n      }), React.createElement(Button, {\n        title: \"Logout\",\n        onPress: this.changeLogout\n      }));\n    }\n  }]);\n\n  return IngenieurNav;\n}(React.Component);\n\nexport { IngenieurNav as default };","map":{"version":3,"sources":["/home/toni/PycharmProjects/PropraSource/frontend/IngenieurNav.js"],"names":["React","styles","getRaceList","timeoutPromise","AsyncStorage","Icon","IngenieurNav","props","changeLogout","event","preventDefault","navigation","push","changeFormel","changeIngenieur","getRaceID","id","target","value","setItem","saveRaceIDinState","state","dataRace","dataWeather","raceID","raceList","getItem","accesstoken","then","racelistDropdown","console","log","setState","catch","error","optionTemplate","map","v","name","viewStyles","textStyles","validateForm","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n    View,\n    Text,\n    StyleSheet,\n    Image,\n    TextInput,\n    TouchableHighlight,\n    SectionList,\n    TouchableOpacity\n} from 'react-native';\nimport {styles} from \"./styles\"\nimport {getRaceList, timeoutPromise} from \"./tools\"\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport {Button} from \"react-native-web\";\n\nexport default class IngenieurNav extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dataRace: [],\n            dataWeather:[],\n            raceID : 0,\n            raceList:[],\n        }\n    }\n\n    async componentDidMount() {\n        const accesstoken = await AsyncStorage.getItem('accesstoken');\n        getRaceList(accesstoken).then(racelistDropdown => {\n            console.log(racelistDropdown);\n            this.setState({raceList: racelistDropdown});\n        }).catch(function (error) {\n            console.log(error);\n        })\n\n    }\n\n    changeLogout = event => {\n        event.preventDefault();\n        this.props.navigation.push('Logout');\n    }\n\n\n     changeFormel = event => {\n        event.preventDefault();\n        this.props.navigation.push('Formel');\n    }\n\n    changeIngenieur = event => {\n        event.preventDefault();\n        this.props.navigation.push('Ingenieur');\n    }\n\n\n    validateForm(){\n        return this.state.raceID != 0;\n    }\n\n\n    async saveRaceIDinState(){\n        const id = await AsyncStorage.getItem(\"raceID\");\n        this.setState({raceID : id} );\n        console.log(this.state.raceID);\n    }\n\n     getRaceID = event =>{\n        const id = event.target.value;\n        AsyncStorage.setItem(\"raceID\",event.target.value);\n        this.saveRaceIDinState();\n    }\n\n\n    render() {\n        let optionTemplate = this.state.raceList.map(v => (\n            <option value={v.id} key={v.id}>{v.name}</option>\n        ));\n        return (\n            <View style={styles.viewStyles}>\n                <Text style={styles.textStyles}>\n                    24 Stunden Rennen\n                </Text>\n\n                <label>\n                Wähle das gewünschte Rennen aus:\n                <select value={this.state.id} onChange={this.getRaceID}>\n                  {optionTemplate}\n                </select>\n\n                </label>\n\n\n                <Text >\n\n                </Text>\n\n\n\n                <Button\n                    title=\"Screen Formel\"\n                    onPress={this.changeFormel}\n                />\n\n                <Text >\n\n                </Text>\n\n                <Button\n                    disabled={!this.validateForm()}\n                    title=\"Screen Übersicht\"\n                    onPress={this.changeIngenieur}\n                />\n\n                <Button\n                    title=\"Logout\"\n                    onPress={this.changeLogout}\n                />\n\n            </View>\n        );\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}