{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nfunction changeWheelSet(id, variant, order_duration, description) {\n  return _regeneratorRuntime.async(function changeWheelSet$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          timeoutPromise(2000, fetch('https://api.race24.cloud/wheel_cont/changeSet', {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: id,\n              variant: variant,\n              order_duration: order_duration,\n              description: description\n            })\n          })).then(function (response) {\n            return response.json();\n          }).then(function (data) {\n            if (data[1] == 200) {\n              console.log(data[0]);\n            } else {\n              console.log(\"failed\");\n            }\n          }).catch(function (error) {\n            console.log(error);\n          });\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction createNewRaceRequest(accestoken, type, place, date) {\n  return _regeneratorRuntime.async(function createNewRaceRequest$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          console.log([accestoken, type, place, date]);\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(timeoutPromise(2000, fetch('https://api.race24.cloud/race/create', {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              acces_token: accestoken,\n              type: type,\n              place: place,\n              date: date\n            })\n          })).then(function (response) {\n            return response.json();\n          }).then(function (data) {\n            console.log(data);\n\n            if (\"msg\" in data) {\n              if (data[\"msg\"] === \"Token has expired\") {\n                refreshToken().then(function (token) {\n                  createNewRaceRequest(token, type, place, date);\n                }).catch(function (error) {\n                  console.log(\"Refresh failed\");\n                  console.log(error);\n                });\n                return [];\n              }\n            } else {\n              return data[0].id;\n            }\n\n            return [];\n          }).catch(function (error) {\n            console.log(error);\n            return [];\n          }));\n\n        case 3:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction sendNewWeatherRequest(id, temp_air, temp_ground, weather_des) {\n  return _regeneratorRuntime.async(function sendNewWeatherRequest$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          timeoutPromise(2000, fetch('https://api.race24.cloud/user/weather/create', {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              raceID: AsyncStorage.getItem(\"raceID\"),\n              temp_air: temp_air,\n              temp_ground: temp_ground,\n              weather_des: weather_des\n            })\n          })).then(function (response) {\n            return response.json();\n          }).then().catch(function (error) {\n            console.log(error);\n          });\n\n        case 1:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction timeoutPromise(ms, promise) {\n  return new Promise(function (resolve, reject) {\n    var timeoutId = setTimeout(function () {\n      reject(new Error(\"promise timeout\"));\n    }, ms);\n    promise.then(function (res) {\n      console.log('test-> ', res);\n      clearTimeout(timeoutId);\n      resolve(res);\n    }, function (err) {\n      console.log('test-> ', err);\n      clearTimeout(timeoutId);\n      reject(err);\n    });\n  });\n}\n\nfunction getRaceList(accesstoken) {\n  return timeoutPromise(2000, fetch(\"https://api.race24.cloud/user/race/get\", {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      access_token: accesstoken\n    })\n  })).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    console.log(data);\n\n    if (\"msg\" in data) {\n      if (data[\"msg\"] === \"Token has expired\") {\n        refreshToken().then(function (token) {\n          getRaceList(token);\n        }).catch(function (error) {\n          console.log(\"Refresh failed\");\n          console.log(error);\n        });\n        return [];\n      }\n    } else {\n      console.log(\"Return Data\");\n      console.log(data[0].data);\n      return data[0].data;\n    }\n\n    return [];\n  }).catch(function (error) {\n    console.log(error);\n    return [];\n  });\n}\n\nfunction getRaceDetails_by_ID(accesstoken, raceid) {\n  return timeoutPromise(2000, fetch(\"https://api.race24.cloud/user/raceDetails/get\", {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      access_token: accesstoken,\n      raceID: raceid\n    })\n  })).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    console.log(data);\n\n    if (\"msg\" in data) {\n      if (data[\"msg\"] === \"Token has expired\") {\n        refreshToken().then(function (token) {\n          getRaceDetails_by_ID(token, raceid);\n          console.log([token, raceid]);\n        }).catch(function (error) {\n          console.log(\"Refresh failed\");\n          console.log(error);\n        });\n        return [];\n      }\n    } else {\n      console.log(\"Return Data\");\n      console.log(data[0].data);\n      return data[0].data;\n    }\n\n    return [];\n  }).catch(function (error) {\n    console.log(error);\n    return [];\n  });\n}\n\nfunction getWeatherTab(accesstoken, raceID) {\n  console.log(raceID);\n  return timeoutPromise(2000, fetch(\"https://api.race24.cloud/user/weather/getlast10\", {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      access_token: accesstoken,\n      raceID: raceID\n    })\n  })).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    console.log(data);\n\n    if (\"msg\" in data) {\n      if (data[\"msg\"] === \"Token has expired\") {\n        refreshToken().then(function (token) {\n          getWeatherTab(token, raceID);\n        }).catch(function (error) {\n          console.log(\"Refresh failed\");\n          console.log(error);\n        });\n        return [];\n      }\n    } else {\n      console.log(\"Return Data\");\n      console.log(data[0].data);\n      return data[0].data;\n    }\n\n    return [];\n  }).catch(function (error) {\n    console.log(error);\n    return [];\n  });\n}\n\nfunction getWheelsList(accesstoken, raceID) {\n  console.log([raceID]);\n  return timeoutPromise(2000, fetch(\"https://api.race24.cloud/wheels_start/get\", {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      access_token: accesstoken,\n      raceID: parseInt(raceID)\n    })\n  })).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    console.log(data);\n\n    if (\"msg\" in data) {\n      if (data[\"msg\"] === \"Token has expired\") {\n        refreshToken().then(function (token) {\n          getWheelsList(token, raceID);\n        }).catch(function (error) {\n          console.log(\"Refresh failed\");\n          console.log(error);\n        });\n        return [];\n      }\n    } else {\n      console.log(\"Return Data\");\n      console.log(data[0].data);\n      return data[0].data;\n    }\n\n    return [];\n  }).catch(function (error) {\n    console.log(error);\n    return [];\n  });\n}\n\nfunction getFormelList(accesstoken) {\n  return timeoutPromise(2000, fetch(\"https://api.race24.cloud/formel/get\", {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      access_token: accesstoken\n    })\n  })).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    console.log(data);\n\n    if (\"msg\" in data) {\n      if (data[\"msg\"] === \"Token has expired\") {\n        refreshToken().then(function (token) {\n          getFormelList(token);\n        }).catch(function (error) {\n          console.log(\"Refresh failed\");\n          console.log(error);\n        });\n        return [];\n      }\n    } else {\n      console.log(\"Return Data\");\n      console.log(data[0].data);\n      return data[0].data;\n    }\n\n    return [];\n  }).catch(function (error) {\n    console.log(error);\n    return [];\n  });\n}\n\nfunction refreshToken() {\n  var accesstoken, refreshtoken;\n  return _regeneratorRuntime.async(function refreshToken$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('accesstoken'));\n\n        case 2:\n          accesstoken = _context4.sent;\n          _context4.next = 5;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('refreshtoken'));\n\n        case 5:\n          refreshtoken = _context4.sent;\n          _context4.next = 8;\n          return _regeneratorRuntime.awrap(timeoutPromise(2000, fetch('https://api.race24.cloud/user/auth/refresh', {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              access_token: accesstoken,\n              refresh_token: refreshtoken\n            })\n          })).then(function (response) {\n            return response.json();\n          }).then(function (data) {\n            AsyncStorage.setItem('accesstoken', String(data.access_token));\n          }));\n\n        case 8:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction TableNiklas(list) {\n  var colNames = ['Zeitstempel', 'Lufttemperatur', 'Streckentemperatur', 'Streckenverhältnis'];\n  var number = 920;\n  return React.createElement(\"div\", null, list.length > 0 && React.createElement(\"table\", {\n    cellSpacing: \"0\",\n    style: {\n      width: width,\n      height: \"auto\",\n      margin: 15,\n      borderWidth: 1\n    }\n  }, React.createElement(\"thead\", null, React.createElement(\"tr\", null, colNames.map(function (headerItem, index) {\n    return React.createElement(\"th\", {\n      style: {\n        borderStyle: 'solid',\n        borderWidth: 1\n      },\n      key: index\n    }, headerItem);\n  }))), React.createElement(\"tbody\", null, Object.values(list).map(function (obj, index) {\n    return React.createElement(\"tr\", {\n      key: index\n    }, Object.values(obj).map(function (value, index2) {\n      return React.createElement(\"td\", {\n        style: {\n          borderStyle: 'solid',\n          borderWidth: 1\n        },\n        key: index2\n      }, value);\n    }));\n  }))));\n}\n\nexport { createNewRaceRequest, getWeatherTab, timeoutPromise, refreshToken, getRaceList, getFormelList, TableNiklas, getWheelsList, getRaceDetails_by_ID, changeWheelSet };","map":{"version":3,"sources":["C:/Users/Niklas/Documents/RepoForMasterChanges/frontend/tools.js"],"names":["AsyncStorage","changeWheelSet","id","variant","order_duration","description","timeoutPromise","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","catch","error","createNewRaceRequest","accestoken","type","place","date","acces_token","refreshToken","token","sendNewWeatherRequest","temp_air","temp_ground","weather_des","raceID","getItem","ms","promise","Promise","resolve","reject","timeoutId","setTimeout","Error","res","clearTimeout","err","getRaceList","accesstoken","access_token","getRaceDetails_by_ID","raceid","getWeatherTab","getWheelsList","parseInt","getFormelList","refreshtoken","refresh_token","setItem","String","TableNiklas","list","colNames","number","length","width","height","margin","borderWidth","map","headerItem","index","borderStyle","Object","values","obj","value","index2"],"mappings":"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","sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\n// create new race and return raceID\r\n//wheel_cont/changeSet\r\nasync function changeWheelSet(id,variant,order_duration,description){\r\n    timeoutPromise(2000, fetch(\r\n            'https://api.race24.cloud/wheel_cont/changeSet', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    id:id,\r\n                    variant:variant,\r\n                    order_duration:order_duration,\r\n                    description:description,\r\n                })\r\n            })\r\n            ).then(response => response.json()).then(\r\n                data => {\r\n                if (data[1]==200) {\r\n                    console.log(data[0])\r\n                }\r\n                else {\r\n                    console.log(\"failed\")\r\n                }\r\n            }\r\n            ).catch(function (error) {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\n\r\n\r\nasync function createNewRaceRequest(accestoken,type,place,date) {\r\n    console.log([accestoken,type,place,date]);\r\n    return await timeoutPromise(2000, fetch(\r\n            'https://api.race24.cloud/race/create', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    acces_token:accestoken,\r\n                    type:type,\r\n                    place:place,\r\n                    date:date,\r\n                })\r\n            })\r\n            ).then(response => response.json()).then(data => {\r\n                console.log(data)\r\n                if (\"msg\" in data){\r\n                            if (data[\"msg\"] === \"Token has expired\"){\r\n                                refreshToken().then( token => {\r\n                                    createNewRaceRequest(token,type,place,date);\r\n                                    }\r\n                                ).catch( function (error) {\r\n                                        console.log(\"Refresh failed\");\r\n                                        console.log(error);\r\n                                    }\r\n                                );\r\n                                return [];\r\n                            }\r\n                        }\r\n              else{\r\n                  return data[0].id;\r\n              }\r\n              return [];\r\n      }).catch(function (error) {\r\n            console.log(error);\r\n            return [];\r\n        })\r\n}\r\n\r\n\r\n\r\nasync function sendNewWeatherRequest(id,temp_air,temp_ground,weather_des) {\r\n   timeoutPromise(2000, fetch(\r\n        'https://api.race24.cloud/user/weather/create', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                raceID: AsyncStorage.getItem(\"raceID\"),\r\n                temp_air:temp_air,\r\n                temp_ground:temp_ground,\r\n                weather_des:weather_des,\r\n            })\r\n        })\r\n        ).then(response => response.json()).then(\r\n            //timer von 30 min neu startem\r\n            ).catch(function (error) {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\n\r\n\r\nfunction timeoutPromise(ms, promise) {\r\n  return new Promise((resolve, reject) => {\r\n    const timeoutId = setTimeout(() => {\r\n      reject(new Error(\"promise timeout\"))\r\n    }, ms);\r\n    promise.then(\r\n      (res) => {\r\n        console.log('test-> ', res)\r\n        clearTimeout(timeoutId);\r\n        resolve(res);\r\n      },\r\n      (err) => {\r\n        console.log('test-> ', err)\r\n        clearTimeout(timeoutId);\r\n        reject(err);\r\n      }\r\n    );\r\n  })\r\n}\r\n\r\n//get Race List\r\nfunction getRaceList(accesstoken) {\r\n  //const accesstoken = AsyncStorage.getItem('accesstoken');\r\n  return timeoutPromise(2000, fetch(\"https://api.race24.cloud/user/race/get\", {\r\n      method: 'POST',\r\n      headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n          access_token: accesstoken,\r\n      })\r\n      })).then(response => response.json()).then(data => {\r\n              console.log(data);\r\n              if (\"msg\" in data){\r\n                            if (data[\"msg\"] === \"Token has expired\"){\r\n                                refreshToken().then( token => {\r\n                                        getRaceList(token);\r\n                                    }\r\n                                ).catch( function (error) {\r\n                                        console.log(\"Refresh failed\");\r\n                                        console.log(error);\r\n                                    }\r\n                                );\r\n                                return [];\r\n                            }\r\n                        }\r\n              else{\r\n                  console.log(\"Return Data\");\r\n                  console.log(data[0].data);\r\n                  return data[0].data;\r\n              }\r\n              return [];\r\n      }).catch(function (error) {\r\n            console.log(error);\r\n            return [];\r\n        })\r\n}\r\n\r\n// get RaceDetails od RaceID\r\nfunction getRaceDetails_by_ID(accesstoken,raceid) {\r\n  //const accesstoken = AsyncStorage.getItem('accesstoken');\r\n  return timeoutPromise(2000, fetch(\"https://api.race24.cloud/user/raceDetails/get\", {\r\n      method: 'POST',\r\n      headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n          access_token: accesstoken,\r\n          raceID:raceid,\r\n      })\r\n      })).then(response => response.json()).then(data => {\r\n              console.log(data);\r\n              if (\"msg\" in data){\r\n                            if (data[\"msg\"] === \"Token has expired\"){\r\n                                refreshToken().then( token => {\r\n                                        getRaceDetails_by_ID(token,raceid);\r\n                                        console.log([token,raceid])\r\n                                    }\r\n                                ).catch( function (error) {\r\n                                        console.log(\"Refresh failed\");\r\n                                        console.log(error);\r\n                                    }\r\n                                );\r\n                                return [];\r\n                            }\r\n                        }\r\n              else{\r\n                  console.log(\"Return Data\");\r\n                  console.log(data[0].data);\r\n                  return data[0].data;\r\n              }\r\n              return [];\r\n      }).catch(function (error) {\r\n            console.log(error);\r\n            return [];\r\n        })\r\n}\r\n\r\n\r\n\r\n\r\n///user/weather/getlast10\r\n//get Weather Tab\r\nfunction getWeatherTab(accesstoken,raceID) {\r\n    console.log(raceID)\r\n  return timeoutPromise(2000, fetch(\"https://api.race24.cloud/user/weather/getlast10\", {\r\n      method: 'POST',\r\n      headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n          access_token: accesstoken,\r\n          raceID : raceID,\r\n      })\r\n      })).then(response => response.json()).then(data => {\r\n              console.log(data);\r\n              if (\"msg\" in data){\r\n                            if (data[\"msg\"] === \"Token has expired\"){\r\n                                refreshToken().then( token => {\r\n                                        getWeatherTab(token,raceID);\r\n                                    }\r\n                                ).catch( function (error) {\r\n                                        console.log(\"Refresh failed\");\r\n                                        console.log(error);\r\n                                    }\r\n                                );\r\n                                return [];\r\n                            }\r\n                        }\r\n              else{\r\n                  console.log(\"Return Data\");\r\n                  console.log(data[0].data);\r\n                  return data[0].data;\r\n              }\r\n              return [];\r\n      }).catch(function (error) {\r\n            console.log(error);\r\n            return [];\r\n        })\r\n}\r\n\r\n\r\n//get Wheels\r\nfunction getWheelsList(accesstoken,raceID) {\r\n  //const accesstoken = AsyncStorage.getItem('accesstoken');\r\n    console.log([raceID])\r\n  return timeoutPromise(2000, fetch(\"https://api.race24.cloud/wheels_start/get\", {\r\n      method: 'POST',\r\n      headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n          access_token: accesstoken,\r\n          raceID: parseInt(raceID)\r\n      })\r\n      })).then(response => response.json()).then(data => {\r\n              console.log(data);\r\n              if (\"msg\" in data){\r\n                            if (data[\"msg\"] === \"Token has expired\"){\r\n                                refreshToken().then( token => {\r\n                                        getWheelsList(token,raceID);\r\n                                    }\r\n                                ).catch( function (error) {\r\n                                        console.log(\"Refresh failed\");\r\n                                        console.log(error);\r\n                                    }\r\n                                );\r\n                                return [];\r\n                            }\r\n                        }\r\n              else{\r\n                  console.log(\"Return Data\");\r\n                  console.log(data[0].data);\r\n                  return data[0].data;\r\n              }\r\n              return [];\r\n      }).catch(function (error) {\r\n            console.log(error);\r\n            return [];\r\n        })\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction getFormelList(accesstoken) {\r\n  //const accesstoken = AsyncStorage.getItem('accesstoken');\r\n  return timeoutPromise(2000, fetch(\"https://api.race24.cloud/formel/get\", {\r\n      method: 'POST',\r\n      headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n          access_token: accesstoken,\r\n      })\r\n      })).then(response => response.json()).then(data => {\r\n              console.log(data);\r\n              if (\"msg\" in data){\r\n                            if (data[\"msg\"] === \"Token has expired\"){\r\n                                refreshToken().then( token => {\r\n                                        getFormelList(token);\r\n                                    }\r\n                                ).catch( function (error) {\r\n                                        console.log(\"Refresh failed\");\r\n                                        console.log(error);\r\n                                    }\r\n                                );\r\n                                return [];\r\n                            }\r\n                        }\r\n              else{\r\n                  console.log(\"Return Data\");\r\n                  console.log(data[0].data);\r\n                  return data[0].data;\r\n              }\r\n              return [];\r\n      }).catch(function (error) {\r\n            console.log(error);\r\n            return [];\r\n        })\r\n}\r\n\r\n\r\n\r\nasync function refreshToken() {\r\n  let accesstoken = await AsyncStorage.getItem('accesstoken');\r\n  let refreshtoken = await AsyncStorage.getItem('refreshtoken');\r\n  await timeoutPromise(2000, fetch(\r\n      'https://api.race24.cloud/user/auth/refresh', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          access_token: accesstoken,\r\n          refresh_token: refreshtoken,\r\n        })\r\n      }\r\n  )).then(\r\n      response => response.json()\r\n  ).then(\r\n      data => {\r\n        AsyncStorage.setItem('accesstoken', String(data.access_token));\r\n      }\r\n  )\r\n}\r\n\r\nfunction TableNiklas(list) {\r\n    const colNames = ['Zeitstempel', 'Lufttemperatur', 'Streckentemperatur', 'Streckenverhältnis' ];\r\n    const number = 920 ;\r\n    return (\r\n        <div>\r\n          {list.length > 0 && (\r\n            <table\r\n              cellSpacing='0'\r\n              style={{\r\n              \twidth: width,\r\n              \theight: \"auto\",\r\n              \tmargin: 15,\r\n              \tborderWidth: 1,\r\n\r\n              }}>\r\n\r\n                <thead >\r\n                  <tr>\r\n                    {colNames.map((headerItem, index) => (\r\n                      <th style={{borderStyle: 'solid',  borderWidth: 1}} key={index}>{headerItem}</th>\r\n                    ))}\r\n                  </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                  {Object.values(list).map((obj, index) => (\r\n                    <tr key={index}>\r\n                      {Object.values(obj).map((value, index2) => (\r\n                        <td style={{borderStyle: 'solid',  borderWidth: 1}} key={index2}>{value}</td>\r\n                      ))}\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n            </table>\r\n          )}\r\n        </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\nexport {createNewRaceRequest,getWeatherTab,timeoutPromise, refreshToken,getRaceList,getFormelList,TableNiklas,getWheelsList,getRaceDetails_by_ID,changeWheelSet}\r\n\r\n"]},"metadata":{},"sourceType":"module"}