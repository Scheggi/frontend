{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/linux/code/frontend/FormelScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { styles } from \"./styles\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { timeoutPromise, refreshToken, syncData, getRaceList, getFormelList } from \"./tools\";\n\nvar FormelScreen = function (_React$Component) {\n  _inherits(FormelScreen, _React$Component);\n\n  var _super = _createSuper(FormelScreen);\n\n  function FormelScreen(props) {\n    var _this;\n\n    _classCallCheck(this, FormelScreen);\n\n    _this = _super.call(this, props);\n\n    _this.changeRace = function (event) {\n      event.preventDefault();\n\n      _this.props.navigation.goBack();\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      _this.sendNewFormelRequest(_this.state.formel);\n    };\n\n    _this.state = {\n      list_formel: [],\n      formel: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(FormelScreen, [{\n    key: \"validateForm\",\n    value: function validateForm() {\n      return this.state.formel.length > 0;\n    }\n  }, {\n    key: \"sendNewFormelRequest\",\n    value: function sendNewFormelRequest(formel) {\n      var _this2 = this;\n\n      return _regeneratorRuntime.async(function sendNewFormelRequest$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(formel);\n              timeoutPromise(2000, fetch('https://api.race24.cloud/formel/create', {\n                method: 'POST',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  formel: formel\n                })\n              })).then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                if (data[1] == 200) {\n                  _this2.getTabularData();\n                } else {\n                  console.log(\"failed\");\n                }\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"getTabularData\",\n    value: function getTabularData() {\n      var _this3 = this;\n\n      var accesstoken;\n      return _regeneratorRuntime.async(function getTabularData$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('accesstoken'));\n\n            case 2:\n              accesstoken = _context2.sent;\n              getFormelList(accesstoken).then(function (formellistTab) {\n                console.log(formellistTab);\n\n                _this3.setState({\n                  list_formel: formellistTab\n                });\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(this.getTabularData());\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"renderTableData\",\n    value: function renderTableData() {\n      var _this4 = this;\n\n      console.log(this.state.list_formel);\n      return this.state.list_formel.map(function (list_formel, index) {\n        var n = list_formel.n,\n            formel = list_formel.formel;\n        return React.createElement(\"tr\", {\n          bgcolor: \"#696969\",\n          style: {\n            textAlign: \"left\",\n            padding: '8px',\n            color: 'white',\n            fontFamily: 'arial'\n          },\n          key: n,\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }\n        }, React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          },\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 16\n          }\n        }, n), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 150,\n            padding: '8px'\n          },\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 16\n          }\n        }, formel));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      return React.createElement(View, {\n        style: viewStyles1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.textStyles,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }\n      }, \"Formel Reifendruck anlegen\"), React.createElement(Text, {\n        style: {\n          height: 30\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 18\n        }\n      }), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        style: {\n          fontfamily: 'arial',\n          height: 30,\n          width: 500,\n          textAlign: 'center',\n          backgroundColor: '#d3d3d3'\n        },\n        placeholder: \"Formel hier eingeben\",\n        onChangeText: function onChangeText(text) {\n          return _this5.setState({\n            formel: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }\n      }), React.createElement(Text, {\n        style: {\n          height: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }\n      }, React.createElement(Button, {\n        disabled: !this.validateForm(),\n        title: \"Formel anlegen\",\n        onPress: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }\n      }), React.createElement(Text, {\n        style: {\n          height: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }\n      })), React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }\n      }, React.createElement(\"h1\", {\n        style: {\n          fontsize: 30,\n          fontFamily: 'arial'\n        },\n        id: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }\n      }, \"Angelegte Formeln\"), React.createElement(\"table\", {\n        id: \"list_formel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }\n      }, React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 20\n        }\n      }, this.renderTableData()))), React.createElement(View, {\n        style: {\n          width: 200\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          height: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 18\n        }\n      }), React.createElement(Button, {\n        title: \"zur\\xFCck\",\n        onPress: this.changeRace,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }\n      })));\n    }\n  }]);\n\n  return FormelScreen;\n}(React.Component);\n\nexport { FormelScreen as default };\nvar viewStyles1 = {\n  flex: 1,\n  alignItems: 'center',\n  justifyContent: 'center',\n  fontFamily: 'arial',\n  overflowY: 'scroll'\n};","map":{"version":3,"sources":["/home/linux/code/frontend/FormelScreen.js"],"names":["React","styles","AsyncStorage","timeoutPromise","refreshToken","syncData","getRaceList","getFormelList","FormelScreen","props","changeRace","event","preventDefault","navigation","goBack","handleSubmit","sendNewFormelRequest","state","formel","list_formel","length","console","log","fetch","method","headers","body","JSON","stringify","then","response","json","data","getTabularData","catch","error","getItem","accesstoken","formellistTab","setState","map","index","n","textAlign","padding","color","fontFamily","border","borderColor","height","width","viewStyles1","textStyles","fontfamily","backgroundColor","text","validateForm","fontsize","renderTableData","Component","flex","alignItems","justifyContent","overflowY"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Button, Text, TextInput, ToastAndroid, View} from \"react-native\";\nimport {styles} from \"./styles\"\n//import { AsyncStorage } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport {timeoutPromise, refreshToken, syncData, getRaceList,getFormelList} from \"./tools\";\n\nexport default class FormelScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            list_formel:[],\n            formel:\"\",\n        }\n    }\n\n    changeRace = event => {\n        event.preventDefault();\n        this.props.navigation.goBack();\n    }\n\n    validateForm() {\n        return this.state.formel.length > 0 ;\n    }\n    handleSubmit = event => {\n        event.preventDefault();\n        this.sendNewFormelRequest(this.state.formel);\n    }\n\n    async sendNewFormelRequest(formel) {\n        console.log(formel)\n       timeoutPromise(2000, fetch(\n            'https://api.race24.cloud/formel/create', {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    formel:formel,\n                })\n            })\n            ).then(response => response.json()).then(data => {\n                if (data[1]==200) {\n                    this.getTabularData()\n                }\n                else {\n                    console.log(\"failed\")\n                }\n            }).catch(function (error) {\n                console.log(error);\n            })\n    }\n\n    async getTabularData(){\n        const accesstoken = await AsyncStorage.getItem('accesstoken');\n        getFormelList(accesstoken).then(formellistTab => {\n            console.log(formellistTab);\n            this.setState({list_formel: formellistTab});\n        }).catch(function (error) {\n            console.log(error);\n        })\n    }\n\n    async componentDidMount() {\n        await this.getTabularData()\n    }\n\n    /*\n    async componentDidMount() {\n      const accesstoken = await AsyncStorage.getItem('accesstoken');\n      timeoutPromise(2000, fetch(\"https://api.race24.cloud/formel/get\", {\n          method: 'POST',\n          headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n              access_token: accesstoken,\n          })\n          })).then(response => response.json()).then(data => {\n              console.log(data);\n              this.setState({list_formel: data[0].data})\n          })\n    }\n\n     */\n\n    renderTableData() {\n        console.log(this.state.list_formel)\n        return this.state.list_formel.map((list_formel, index) => {\n            const { n, formel } =list_formel //destructuring\n            return (\n            <tr bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', color: 'white', fontFamily: 'arial'}} key={n}>\n               <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}} >{n}</td>\n               <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}} >{formel}</td>\n            </tr>\n         )\n      })\n   }\n\n    render() {\n        return (\n            <View style={viewStyles1}>\n                <Text style={styles.textStyles}>\n                    Formel Reifendruck anlegen\n                </Text>\n                 <Text style={{height:30}}>\n                </Text>\n                <View>\n                    <TextInput\n                        style={{fontfamily: 'arial', height: 30, width: 500, textAlign: 'center', backgroundColor: '#d3d3d3'}}\n                        placeholder=\"Formel hier eingeben\"\n                        onChangeText={(text) => this.setState({formel:text})}\n                    />\n                    <Text style={{height: 20}}></Text>\n                </View>\n                <View>\n                    <Button\n                        disabled={!this.validateForm()}\n                        title=\"Formel anlegen\"\n                        onPress={this.handleSubmit}\n                    />\n                    <Text style={{height: 20}}></Text>\n                </View>\n                <div>\n                <h1 style={{fontsize: 30, fontFamily: 'arial'}} id='title'>Angelegte Formeln</h1>\n                <table  id='list_formel'>\n                   <tbody>\n                      {this.renderTableData()}\n                   </tbody>\n                </table>\n                </div>\n                <View  style={{width: 200}}>\n                 <Text style={{height: 20}}></Text>\n                <Button\n                        title=\"zurück\"\n                        onPress={this.changeRace}\n                />\n                </View>\n            </View>\n        );\n    }\n}\n\nconst viewStyles1= {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontFamily: 'arial',\n        overflowY: 'scroll',\n    };"]},"metadata":{},"sourceType":"module"}