{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { styles } from \"./styles\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { timeoutPromise, refreshToken, getRaceList, changeWheelSet } from \"./tools\";\nimport { get_Dict_WheelOrder, getDropdown } from \"./tools_get_wheels\";\n\nvar NewOrderScreen = function (_React$Component) {\n  _inherits(NewOrderScreen, _React$Component);\n\n  var _super = _createSuper(NewOrderScreen);\n\n  function NewOrderScreen(props) {\n    var _this;\n\n    _classCallCheck(this, NewOrderScreen);\n\n    _this = _super.call(this, props);\n\n    _this.getRaceID = function (event) {\n      var id = event.target.value;\n      AsyncStorage.setItem(\"raceIDHelper\", event.target.value);\n\n      _this.saveRaceIDinState();\n    };\n\n    _this.changeRace = function (event) {\n      event.preventDefault();\n\n      _this.props.navigation.replace('Race');\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n      changeWheelSet();\n\n      _this.saveOrderWheel();\n    };\n\n    _this.handleSubmitButton1 = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        tyretype: \"Slicks\"\n      });\n\n      _this.setState({\n        tyremix: \"Cold\"\n      });\n    };\n\n    _this.handleSubmitButton1 = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        tyretype: \"Slicks\"\n      });\n\n      _this.setState({\n        tyremix: \"Cold\"\n      });\n    };\n\n    _this.handleSubmitButton2 = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        tyretype: \"Slicks\"\n      });\n\n      _this.setState({\n        tyremix: \"Medium\"\n      });\n    };\n\n    _this.handleSubmitButton3 = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        tyretype: \"Slicks\"\n      });\n\n      _this.setState({\n        tyremix: \"Hot\"\n      });\n    };\n\n    _this.handleSubmitButton4 = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        tyretype: \"Inters\"\n      });\n\n      _this.setState({\n        tyremix: \"Intermediate\"\n      });\n    };\n\n    _this.handleSubmitButton5 = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        tyretype: \"Rain\"\n      });\n\n      _this.setState({\n        tyremix: \"Dry Wet\"\n      });\n    };\n\n    _this.handleSubmitButton6 = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        tyretype: \"Rain\"\n      });\n\n      _this.setState({\n        tyremix: \"Heavy Wet\"\n      });\n    };\n\n    _this.handleAirPressureChange = function (event) {\n      timeoutPromise(2000, fetch('https://api.race24.cloud/wheel_cont/change_air_pressWheel', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: event.target.id,\n          air_press: event.target.value\n        })\n      })).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        if (data[1] == 200) {\n          console.log(\"Pressure Changed\");\n\n          _this.getWheelData().then(function () {\n            return;\n          });\n        } else {\n          console.log(\"failed\");\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.handleWheelIDChange = function (event) {\n      timeoutPromise(2000, fetch('https://api.race24.cloud/wheel/set_id_tag', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          wheel_id: event.target.id,\n          wheel_id_tag: event.target.value\n        })\n      })).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        if (data[1] == 200) {\n          console.log(\"ID Changed\");\n\n          _this.getWheelData().then(function () {\n            return;\n          });\n        } else {\n          console.log(\"failed\");\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.handleWheelEditChange = function (event) {\n      timeoutPromise(2000, fetch('https://api.race24.cloud/wheel/set_edit', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          wheel_id: event.target.id,\n          wheel_edit: event.target.value\n        })\n      })).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        if (data[1] == 200) {\n          console.log(\"Edit Changed\");\n\n          _this.getWheelData().then(function () {\n            return;\n          });\n        } else {\n          console.log(\"failed\");\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.state = {\n      raceid: 0,\n      tyretype: '',\n      tyremix: '',\n      term: '',\n      variant: '',\n      tyretype1: '',\n      tyremix1: '',\n      variant1: '',\n      number: '',\n      orderdate: '',\n      ordertime: '',\n      ordertime1: '',\n      pickuptime: '',\n      raceList: [],\n      time: {},\n      seconds: 1800,\n      timervalue: \"\",\n      wheels: [],\n      listDropdown1: [],\n      listDropdown2: [],\n      listDropdown3: [],\n      dictButtons: [],\n      ButtonSlicks_Cold: 'Slicks Cold',\n      ButtonSlicks_Medium: 'Slicks Medium',\n      ButtonSlicks_Hot: 'Slicks Hot',\n      ButtonInter: 'Inters Intermediate',\n      ButtonRainDryWet: 'Rain DryWet',\n      ButtonRainHeavy: 'Rain HeavyWet'\n    };\n    _this.timer = 0;\n    _this.startTimer = _this.startTimer.bind(_assertThisInitialized(_this));\n    _this.countDown = _this.countDown.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(NewOrderScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var accesstoken, raceID;\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('accesstoken'));\n\n            case 2:\n              accesstoken = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('raceID'));\n\n            case 5:\n              raceID = _context.sent;\n              getDropdown(accesstoken, raceID).then(function (racelistDropdown) {\n                console.log(racelistDropdown);\n\n                _this2.setState({\n                  listDropdown1: racelistDropdown[0]\n                });\n\n                _this2.setState({\n                  listDropdown2: racelistDropdown[1]\n                });\n\n                _this2.setState({\n                  listDropdown3: racelistDropdown[2]\n                });\n              }).catch(function (error) {\n                console.log(error);\n              });\n              console.log(2);\n              _context.next = 10;\n              return _regeneratorRuntime.awrap(this.getWheelDict());\n\n            case 10:\n              _context.next = 12;\n              return _regeneratorRuntime.awrap(this.getDropdownList());\n\n            case 12:\n              if (this.state.dictButtons.length == 6) {\n                this.setState({});\n              }\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getWheelDict\",\n    value: function getWheelDict() {\n      var _this3 = this;\n\n      var accesstoken, raceID;\n      return _regeneratorRuntime.async(function getWheelDict$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('accesstoken'));\n\n            case 2:\n              accesstoken = _context2.sent;\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('raceID'));\n\n            case 5:\n              raceID = _context2.sent;\n              console.log(raceID);\n              _context2.next = 9;\n              return _regeneratorRuntime.awrap(get_Dict_WheelOrder(accesstoken, raceID).then(function (DataTabular) {\n                console.log(DataTabular);\n\n                _this3.setState({\n                  dictButtons: DataTabular\n                });\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 9:\n              console.log(this.state.dictButtons);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getDropdownList\",\n    value: function getDropdownList() {\n      var _this4 = this;\n\n      var accesstoken, raceID;\n      return _regeneratorRuntime.async(function getDropdownList$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('accesstoken'));\n\n            case 2:\n              accesstoken = _context3.sent;\n              _context3.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('raceID'));\n\n            case 5:\n              raceID = _context3.sent;\n              console.log(raceID);\n              _context3.next = 9;\n              return _regeneratorRuntime.awrap(getDropdown(accesstoken, raceID).then(function (DataTabular) {\n                console.log(DataTabular);\n\n                _this4.setState({\n                  listDropdown: DataTabular\n                });\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 9:\n              console.log(this.state.listDropdown);\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getSetID\",\n    value: function getSetID(event) {\n      var setid;\n      return _regeneratorRuntime.async(function getSetID$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              AsyncStorage.setItem(\"SetID\", event.target.value);\n              _context4.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"SetID\"));\n\n            case 3:\n              setid = _context4.sent;\n              console.log(setid);\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"saveOrderWheel\",\n    value: function saveOrderWheel() {\n      var IdWheel;\n      return _regeneratorRuntime.async(function saveOrderWheel$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('OrderWheelID'));\n\n            case 2:\n              IdWheel = _context5.sent;\n              changeWheelSet(IdWheel, this.state.ordertime, this.state.variant);\n\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"sendNewRaceRequest\",\n    value: function sendNewRaceRequest(type, place, date) {\n      var _this5 = this;\n\n      return _regeneratorRuntime.async(function sendNewRaceRequest$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              timeoutPromise(2000, fetch('https://api.race24.cloud/race/create', {\n                method: 'POST',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  type: type,\n                  place: place,\n                  date: date\n                })\n              })).then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                if (data[1] == 200) {\n                  AsyncStorage.setItem(\"raceIDNewRace\", data[0].id);\n                  console.log(\"changeNav\");\n\n                  _this5.props.navigation.replace(\"Race\");\n\n                  return parseInt(data[0].id);\n                } else {\n                  console.log(\"failed\");\n                }\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 1:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"secondsToTime\",\n    value: function secondsToTime(secs) {\n      var hours = Math.floor(secs / (60 * 60));\n      var divisor_for_minutes = secs % (60 * 60);\n      var minutes = Math.floor(divisor_for_minutes / 60);\n      var divisor_for_seconds = divisor_for_minutes % 60;\n      var seconds = Math.ceil(divisor_for_seconds);\n      var obj = {\n        \"h\": hours,\n        \"m\": minutes,\n        \"s\": seconds\n      };\n      return obj;\n    }\n  }, {\n    key: \"startTimer\",\n    value: function startTimer() {\n      var hour = 0;\n      var minute = 0;\n      var second = 0;\n      var atime = this.state.timervalue.split(':');\n\n      if (atime[0].length > 0) {\n        hour = parseInt(atime[0]);\n      }\n\n      if (atime[1].length > 0) {\n        minute = parseInt(atime[1]);\n      }\n\n      if (atime[2].length > 0) {\n        second = parseInt(atime[2]);\n      }\n\n      this.state.seconds = stunde * 3600 + minute * 60 + sekunde;\n\n      if (this.state.seconds > 0) {\n        this.timer = setInterval(this.countDown, this.state.seconds);\n      }\n    }\n  }, {\n    key: \"countDown\",\n    value: function countDown() {\n      var seconds = this.state.seconds - 1;\n      this.setState({\n        time: this.secondsToTime(seconds),\n        seconds: seconds\n      });\n\n      if (seconds == 0) {\n        clearInterval(this.timer);\n      }\n    }\n  }, {\n    key: \"getTime\",\n    value: function getTime() {\n      var today = new Date();\n      var h = today.getHours();\n      var m = today.getMinutes();\n      return h + \":\" + m;\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm() {\n      return this.state.tyretype.length > 0 && this.state.tyremix.length > 0 && this.state.number.length > 0 && this.state.orderdate.length > 0 && this.state.ordertime.length > 0 && this.state.pickuptime.length > 0;\n    }\n  }, {\n    key: \"validateForm1\",\n    value: function validateForm1() {\n      return this.state.timervalue.length > 0;\n    }\n  }, {\n    key: \"getWheelData\",\n    value: function getWheelData() {\n      return _regeneratorRuntime.async(function getWheelData$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              this.setState({\n                wheels: []\n              });\n              this.state.wheels.push({\n                setid: setid,\n                status: status,\n                cat: cat,\n                subcat: subcat,\n                fl_id: fl_id,\n                fl_pressure: fl_pressure,\n                fl_wheel_id: fl_wheel_id,\n                fl_wheel_edit: fl_wheel_edit,\n                fr_id: fr_id,\n                fr_pressure: fr_pressure,\n                fr_wheel_id: fr_wheel_id,\n                fr_wheel_edit: fr_wheel_edit,\n                bl_id: bl_id,\n                bl_pressure: bl_pressure,\n                bl_wheel_id: bl_wheel_id,\n                bl_wheel_edit: bl_wheel_edit,\n                br_id: br_id,\n                br_pressure: br_pressure,\n                br_wheel_id: br_wheel_id,\n                br_wheel_edit: br_wheel_edit\n              });\n\n            case 2:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"renderWheelTable\",\n    value: function renderWheelTable() {\n      var _this6 = this;\n\n      return this.state.wheels.map(function (wheel) {\n        return React.createElement(\"tr\", null, React.createElement(\"td\", null, wheel.setid), React.createElement(\"td\", null, wheel.status), React.createElement(\"td\", null, wheel.cat), React.createElement(\"td\", null, wheel.subcat), React.createElement(\"td\", null, React.createElement(\"input\", {\n          id: wheel.fl_id,\n          onChange: _this6.handleAirPressureChange\n        }, _this6.wheel.fl_pressure), React.createElement(\"input\", {\n          id: wheel.fr_id,\n          onChange: _this6.handleAirPressureChange\n        }, _this6.wheel.fr_pressure), React.createElement(\"input\", {\n          id: wheel.bl_id,\n          onChange: _this6.handleAirPressureChange\n        }, _this6.wheel.bl_pressure), React.createElement(\"input\", {\n          id: wheel.br_id,\n          onChange: _this6.handleAirPressureChange\n        }, _this6.wheel.br_pressure)), React.createElement(\"td\", null, React.createElement(\"input\", {\n          id: wheel.fl_id,\n          onChange: _this6.handleWheelIDChange\n        }, _this6.wheel.fl_wheel_id), React.createElement(\"input\", {\n          id: wheel.fr_id,\n          onChange: _this6.handleWheelIDChange\n        }, _this6.wheel.fr_wheel_id), React.createElement(\"input\", {\n          id: wheel.bl_id,\n          onChange: _this6.handleWheelIDChange\n        }, _this6.wheel.bl_wheel_id), React.createElement(\"input\", {\n          id: wheel.br_id,\n          onChange: _this6.handleWheelIDChange\n        }, _this6.wheel.br_wheel_id)), React.createElement(\"td\", null, React.createElement(\"input\", {\n          id: wheel.fl_id,\n          onChange: _this6.handleWheelEditChange\n        }, _this6.wheel.fl_wheel_edit), React.createElement(\"input\", {\n          id: wheel.fr_id,\n          onChange: _this6.handleWheelEditChange\n        }, _this6.wheel.fr_wheel_edit), React.createElement(\"input\", {\n          id: wheel.bl_id,\n          onChange: _this6.handleWheelEditChange\n        }, _this6.wheel.bl_wheel_edit), React.createElement(\"input\", {\n          id: wheel.br_id,\n          onChange: _this6.handleWheelEditChange\n        }, _this6.wheel.br_wheel_edit)));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n\n      var optionTemplate = this.state.raceList.map(function (v) {\n        return React.createElement(\"option\", {\n          value: v.id,\n          key: v.id\n        }, v.name);\n      });\n      return React.createElement(View, {\n        style: container2\n      }, React.createElement(View, {\n        style: container3\n      }, React.createElement(View, {\n        style: container5\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 40,\n          fontWeight: 'bold',\n          textAlign: 'center'\n        }\n      }, \"Neue Reifenbestellung anlegen\")), React.createElement(View, {\n        style: container4\n      }, React.createElement(Button, {\n        title: \"Slicks Cold\",\n        onPress: this.handleSubmitButton1\n      }), React.createElement(Button, {\n        title: \"Slicks Medium\",\n        onPress: this.handleSubmitButton2\n      }), React.createElement(Button, {\n        title: \"Slicks Hot\",\n        onPress: this.handleSubmitButton3\n      }), React.createElement(Button, {\n        title: \"Inters Intermediate\",\n        onPress: this.handleSubmitButton4\n      }), React.createElement(Button, {\n        title: \"Rain Dry Wet\",\n        onPress: this.handleSubmitButton5\n      }), React.createElement(Button, {\n        title: \"Rain Heavy Wet\",\n        onPress: this.handleSubmitButton6\n      }))), React.createElement(View, {\n        style: container1\n      }, React.createElement(View, {\n        style: {\n          justifyContent: 'flex-start'\n        }\n      }, React.createElement(Text, {\n        style: {\n          height: 10\n        }\n      }, \" \"), React.createElement(\"table\", null, React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Reifenart: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, React.createElement(TextInput, {\n        value: this.state.tyretype,\n        onChangeText: function onChangeText(text) {\n          return _this7.setState({\n            tyretype: text\n          });\n        }\n      }))), React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Mischung: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, \" \", React.createElement(TextInput, {\n        value: this.state.tyremix,\n        onChangeText: function onChangeText(text) {\n          return _this7.setState({\n            tyremix: text\n          });\n        }\n      }))), React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Bezeichnung: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, React.createElement(TextInput, {\n        value: this.state.term,\n        onChangeText: function onChangeText(text) {\n          return _this7.setState({\n            term: text\n          });\n        }\n      }))), React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Bearbeitungsvariante: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, React.createElement(TextInput, {\n        value: this.state.variant,\n        onChangeText: function onChangeText(text) {\n          return _this7.setState({\n            variant: text\n          });\n        }\n      }))), React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Bestelldatum: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, \" \", React.createElement(TextInput, {\n        value: this.state.orderdate,\n        placeholder: \"TT.MM.JJJJ\",\n        onChangeText: function onChangeText(date) {\n          return _this7.setState({\n            orderdate: date\n          });\n        }\n      }))), React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Bestellzeit: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, \" \", React.createElement(TextInput, {\n        value: this.state.ordertime,\n        placeholder: \"SS:MM\",\n        onChangeText: function onChangeText(time) {\n          return _this7.setState({\n            ordertime: time\n          });\n        }\n      })))), React.createElement(Text, null, \" \"), React.createElement(Button, {\n        disabled: !this.validateForm(),\n        title: \"Reifenbestellung best\\xE4tigen\",\n        onPress: this.handleSubmit\n      }), React.createElement(Text, null, \" \"), React.createElement(Button, {\n        title: \"zur\\xFCck\",\n        onPress: this.changeRace\n      })), React.createElement(View, {\n        style: {\n          justifyContent: 'flex-start'\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 30,\n          fontWeight: 'bold',\n          textAlign: 'center'\n        }\n      }, \"Reifensatz aktuell in Bearbeitung\"), React.createElement(\"table\", null, React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Reifenart: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, this.state.tyretype1)), React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Mischung: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, this.state.tyremix1)), React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Bearbeitungsvariante: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, this.state.variant1)), React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Bestellzeit: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, this.state.ordertime1))), React.createElement(Text, {\n        style: {\n          height: '10'\n        }\n      }), React.createElement(Text, {\n        style: bigStyle\n      }, \"Timer\"), React.createElement(Text, {\n        style: orderHeaderStyle\n      }, \" Reifenbestellung abholbereit in: \"), React.createElement(TextInput, {\n        style: orderTextStyle,\n        placeholder: \" SS:MM:SS\",\n        onChangeText: function onChangeText(time) {\n          return _this7.setState({\n            timervalue: time\n          });\n        }\n      }), React.createElement(\"button\", {\n        style: {\n          width: 300\n        },\n        disabled: !this.validateForm1(),\n        onClick: this.startTimer\n      }, \"Start\"), React.createElement(Text, {\n        style: orderFeedbackStyle\n      }, \"Stunden: \", this.state.time.h, \" Minuten: \", this.state.time.m, \" Sekunden: \", this.state.time.s, \" \"))), React.createElement(View, null, React.createElement(\"table\", null, React.createElement(\"tbody\", null, React.createElement(\"tr\", null, React.createElement(\"td\", null, \"Setnumber\"), React.createElement(\"td\", null, \"Status\"), React.createElement(\"td\", null, \"Cat\"), React.createElement(\"td\", null, \"SubCat\"), React.createElement(\"td\", null, \"Air Pressure\"), React.createElement(\"td\", null, \"Wheel ID\"), React.createElement(\"td\", null, \"Wheel Edit\")), this.renderWheelTable()))));\n    }\n  }]);\n\n  return NewOrderScreen;\n}(React.Component);\n\nexport { NewOrderScreen as default };\nvar bigStyle = {\n  color: 'black',\n  fontSize: 30,\n  fontWeight: 'bold'\n};\nvar subStyle = {\n  fontSize: 20,\n  height: 40\n};\nvar emptylineStyle = {\n  height: 20\n};\nvar orderHeaderStyle = {\n  height: 40,\n  width: 300,\n  margin: 3,\n  borderWidth: 1,\n  padding: 10,\n  backgroundColor: '#696969',\n  color: '#ffffff',\n  fontweight: 'bold',\n  fontSize: 16,\n  lineHeight: 16,\n  fontfamily: 'arial'\n};\nvar orderTextStyle = {\n  height: 30,\n  width: 300,\n  margin: 3,\n  borderWidth: 1,\n  padding: 10,\n  backgroundColor: '#d3d3d3',\n  fontSize: 14,\n  fontfamily: 'arial'\n};\nvar orderFeedbackStyle = {\n  height: 40,\n  width: 300,\n  margin: 3,\n  textAlign: 'center',\n  borderWidth: 1,\n  padding: 10,\n  backgroundColor: '#d3d3d3',\n  fontSize: 14\n};\nvar container1 = {\n  padding: '50px',\n  flexDirection: 'row',\n  justifyContent: 'space-around'\n};\nvar container2 = {};\nvar container3 = {};\nvar container4 = {\n  flexDirection: 'row',\n  justifyContent: 'space-evenly'\n};\nvar container5 = {\n  textAlign: 'center',\n  padding: '20px'\n};","map":{"version":3,"sources":["/home/toni/PycharmProjects/PropraSource/frontend/NewOrder.js"],"names":["React","styles","AsyncStorage","timeoutPromise","refreshToken","getRaceList","changeWheelSet","get_Dict_WheelOrder","getDropdown","NewOrderScreen","props","getRaceID","event","id","target","value","setItem","saveRaceIDinState","changeRace","preventDefault","navigation","replace","handleSubmit","saveOrderWheel","handleSubmitButton1","setState","tyretype","tyremix","handleSubmitButton2","handleSubmitButton3","handleSubmitButton4","handleSubmitButton5","handleSubmitButton6","handleAirPressureChange","fetch","method","headers","body","JSON","stringify","air_press","then","response","json","data","console","log","getWheelData","catch","error","handleWheelIDChange","wheel_id","wheel_id_tag","handleWheelEditChange","wheel_edit","state","raceid","term","variant","tyretype1","tyremix1","variant1","number","orderdate","ordertime","ordertime1","pickuptime","raceList","time","seconds","timervalue","wheels","listDropdown1","listDropdown2","listDropdown3","dictButtons","ButtonSlicks_Cold","ButtonSlicks_Medium","ButtonSlicks_Hot","ButtonInter","ButtonRainDryWet","ButtonRainHeavy","timer","startTimer","bind","countDown","getItem","accesstoken","raceID","racelistDropdown","getWheelDict","getDropdownList","length","DataTabular","listDropdown","setid","IdWheel","type","place","date","parseInt","secs","hours","Math","floor","divisor_for_minutes","minutes","divisor_for_seconds","ceil","obj","hour","minute","second","atime","split","stunde","sekunde","setInterval","secondsToTime","clearInterval","today","Date","h","getHours","m","getMinutes","push","status","cat","subcat","fl_id","fl_pressure","fl_wheel_id","fl_wheel_edit","fr_id","fr_pressure","fr_wheel_id","fr_wheel_edit","bl_id","bl_pressure","bl_wheel_id","bl_wheel_edit","br_id","br_pressure","br_wheel_id","br_wheel_edit","map","wheel","optionTemplate","v","name","container2","container3","container5","fontSize","fontWeight","textAlign","container4","container1","justifyContent","height","padding","color","fontFamily","border","borderColor","width","text","validateForm","bigStyle","orderHeaderStyle","orderTextStyle","validateForm1","orderFeedbackStyle","s","renderWheelTable","Component","subStyle","emptylineStyle","margin","borderWidth","backgroundColor","fontweight","lineHeight","fontfamily","flexDirection"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAEA,SAAQC,MAAR;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,SAAQC,cAAR,EAAwBC,YAAxB,EAAqCC,WAArC,EAAiDC,cAAjD;AACA,SAAQC,mBAAR,EAA6BC,WAA7B;;IAGqBC,c;;;;;AAClB,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACd,8BAAMA,KAAN;;AADc,UAiGlBC,SAjGkB,GAiGN,UAAAC,KAAK,EAAI;AACjB,UAAMC,EAAE,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAxB;AACAb,MAAAA,YAAY,CAACc,OAAb,CAAqB,cAArB,EAAqCJ,KAAK,CAACE,MAAN,CAAaC,KAAlD;;AACA,YAAKE,iBAAL;AACH,KArGiB;;AAAA,UA4GlBC,UA5GkB,GA4GL,UAAAN,KAAK,EAAI;AAClBA,MAAAA,KAAK,CAACO,cAAN;;AACA,YAAKT,KAAL,CAAWU,UAAX,CAAsBC,OAAtB,CAA8B,MAA9B;AACH,KA/GiB;;AAAA,UAgHjBC,YAhHiB,GAgHF,UAAAV,KAAK,EAAI;AACrBA,MAAAA,KAAK,CAACO,cAAN;AACAb,MAAAA,cAAc;;AACd,YAAKiB,cAAL;AAGH,KAtHiB;;AAAA,UAuHjBC,mBAvHiB,GAuHK,UAAAZ,KAAK,EAAI;AAC5BA,MAAAA,KAAK,CAACO,cAAN;;AACA,YAAKM,QAAL,CAAc;AAACC,QAAAA,QAAQ,EAAE;AAAX,OAAd;;AACA,YAAKD,QAAL,CAAc;AAACE,QAAAA,OAAO,EAAE;AAAV,OAAd;AACH,KA3HiB;;AAAA,UA4HlBH,mBA5HkB,GA4HI,UAAAZ,KAAK,EAAI;AAC3BA,MAAAA,KAAK,CAACO,cAAN;;AACA,YAAKM,QAAL,CAAc;AAACC,QAAAA,QAAQ,EAAE;AAAX,OAAd;;AACA,YAAKD,QAAL,CAAc;AAACE,QAAAA,OAAO,EAAE;AAAV,OAAd;AACH,KAhIiB;;AAAA,UAiIlBC,mBAjIkB,GAiII,UAAAhB,KAAK,EAAI;AAC3BA,MAAAA,KAAK,CAACO,cAAN;;AACA,YAAKM,QAAL,CAAc;AAACC,QAAAA,QAAQ,EAAE;AAAX,OAAd;;AACA,YAAKD,QAAL,CAAc;AAACE,QAAAA,OAAO,EAAE;AAAV,OAAd;AACH,KArIiB;;AAAA,UAsIlBE,mBAtIkB,GAsII,UAAAjB,KAAK,EAAI;AAC3BA,MAAAA,KAAK,CAACO,cAAN;;AACA,YAAKM,QAAL,CAAc;AAACC,QAAAA,QAAQ,EAAE;AAAX,OAAd;;AACA,YAAKD,QAAL,CAAc;AAACE,QAAAA,OAAO,EAAE;AAAV,OAAd;AACH,KA1IiB;;AAAA,UA2IlBG,mBA3IkB,GA2II,UAAAlB,KAAK,EAAI;AAC3BA,MAAAA,KAAK,CAACO,cAAN;;AACA,YAAKM,QAAL,CAAc;AAACC,QAAAA,QAAQ,EAAE;AAAX,OAAd;;AACA,YAAKD,QAAL,CAAc;AAACE,QAAAA,OAAO,EAAE;AAAV,OAAd;AACH,KA/IiB;;AAAA,UAgJlBI,mBAhJkB,GAgJI,UAAAnB,KAAK,EAAI;AAC3BA,MAAAA,KAAK,CAACO,cAAN;;AACA,YAAKM,QAAL,CAAc;AAACC,QAAAA,QAAQ,EAAE;AAAX,OAAd;;AACA,YAAKD,QAAL,CAAc;AAACE,QAAAA,OAAO,EAAE;AAAV,OAAd;AACH,KApJiB;;AAAA,UAqJlBK,mBArJkB,GAqJI,UAAApB,KAAK,EAAI;AAC3BA,MAAAA,KAAK,CAACO,cAAN;;AACA,YAAKM,QAAL,CAAc;AAACC,QAAAA,QAAQ,EAAE;AAAX,OAAd;;AACA,YAAKD,QAAL,CAAc;AAACE,QAAAA,OAAO,EAAE;AAAV,OAAd;AACH,KAzJiB;;AAAA,UAuRdM,uBAvRc,GAuRY,UAAArB,KAAK,EAAI;AAC/BT,MAAAA,cAAc,CAAC,IAAD,EAAO+B,KAAK,CAC1B,2DAD0B,EACmC;AACzDC,QAAAA,MAAM,EAAE,MADiD;AAEzDC,QAAAA,OAAO,EAAE;AACL,oBAAU,kBADL;AAEL,0BAAgB;AAFX,SAFgD;AAMzDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB1B,UAAAA,EAAE,EAAED,KAAK,CAACE,MAAN,CAAaD,EADA;AAEjB2B,UAAAA,SAAS,EAAE5B,KAAK,CAACE,MAAN,CAAaC;AAFP,SAAf;AANmD,OADnC,CAAZ,CAAd,CAYE0B,IAZF,CAYO,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OAZf,EAYoCF,IAZpC,CAYyC,UAAAG,IAAI,EAAI;AAC7C,YAAIA,IAAI,CAAC,CAAD,CAAJ,IAAS,GAAb,EAAkB;AACdC,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;;AACA,gBAAKC,YAAL,GAAoBN,IAApB,CAAyB,YAAM;AAAC;AAAO,WAAvC;AACH,SAHD,MAIK;AACDI,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACH;AACJ,OApBD,EAoBGE,KApBH,CAoBS,UAAUC,KAAV,EAAiB;AACtBJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACH,OAtBD;AAuBH,KA/Sa;;AAAA,UAiTdC,mBAjTc,GAiTQ,UAAAtC,KAAK,EAAI;AAC3BT,MAAAA,cAAc,CAAC,IAAD,EAAO+B,KAAK,CAC1B,2CAD0B,EACmB;AACzCC,QAAAA,MAAM,EAAE,MADiC;AAEzCC,QAAAA,OAAO,EAAE;AACL,oBAAU,kBADL;AAEL,0BAAgB;AAFX,SAFgC;AAMzCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBY,UAAAA,QAAQ,EAAEvC,KAAK,CAACE,MAAN,CAAaD,EADN;AAEjBuC,UAAAA,YAAY,EAAExC,KAAK,CAACE,MAAN,CAAaC;AAFV,SAAf;AANmC,OADnB,CAAZ,CAAd,CAYE0B,IAZF,CAYO,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OAZf,EAYoCF,IAZpC,CAYyC,UAAAG,IAAI,EAAI;AAC7C,YAAIA,IAAI,CAAC,CAAD,CAAJ,IAAS,GAAb,EAAkB;AACdC,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;;AACA,gBAAKC,YAAL,GAAoBN,IAApB,CAAyB,YAAM;AAAC;AAAO,WAAvC;AACH,SAHD,MAIK;AACDI,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACH;AACJ,OApBD,EAoBGE,KApBH,CAoBS,UAAUC,KAAV,EAAiB;AACtBJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACH,OAtBD;AAuBH,KAzUa;;AAAA,UA2UdI,qBA3Uc,GA2UU,UAAAzC,KAAK,EAAI;AAC7BT,MAAAA,cAAc,CAAC,IAAD,EAAO+B,KAAK,CAC1B,yCAD0B,EACiB;AACvCC,QAAAA,MAAM,EAAE,MAD+B;AAEvCC,QAAAA,OAAO,EAAE;AACL,oBAAU,kBADL;AAEL,0BAAgB;AAFX,SAF8B;AAMvCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBY,UAAAA,QAAQ,EAAEvC,KAAK,CAACE,MAAN,CAAaD,EADN;AAEjByC,UAAAA,UAAU,EAAE1C,KAAK,CAACE,MAAN,CAAaC;AAFR,SAAf;AANiC,OADjB,CAAZ,CAAd,CAYE0B,IAZF,CAYO,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OAZf,EAYoCF,IAZpC,CAYyC,UAAAG,IAAI,EAAI;AAC7C,YAAIA,IAAI,CAAC,CAAD,CAAJ,IAAS,GAAb,EAAkB;AACdC,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;;AACA,gBAAKC,YAAL,GAAoBN,IAApB,CAAyB,YAAM;AAAC;AAAO,WAAvC;AACH,SAHD,MAIK;AACDI,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACH;AACJ,OApBD,EAoBGE,KApBH,CAoBS,UAAUC,KAAV,EAAiB;AACtBJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACH,OAtBD;AAuBH,KAnWa;;AAEd,UAAKM,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,CADC;AAET9B,MAAAA,QAAQ,EAAE,EAFD;AAGTC,MAAAA,OAAO,EAAE,EAHA;AAIT8B,MAAAA,IAAI,EAAE,EAJG;AAKTC,MAAAA,OAAO,EAAE,EALA;AAMTC,MAAAA,SAAS,EAAE,EANF;AAOTC,MAAAA,QAAQ,EAAE,EAPD;AAQTC,MAAAA,QAAQ,EAAE,EARD;AASTC,MAAAA,MAAM,EAAE,EATC;AAUTC,MAAAA,SAAS,EAAE,EAVF;AAWTC,MAAAA,SAAS,EAAE,EAXF;AAYTC,MAAAA,UAAU,EAAE,EAZH;AAaTC,MAAAA,UAAU,EAAE,EAbH;AAcTC,MAAAA,QAAQ,EAAE,EAdD;AAeTC,MAAAA,IAAI,EAAE,EAfG;AAgBTC,MAAAA,OAAO,EAAE,IAhBA;AAiBTC,MAAAA,UAAU,EAAE,EAjBH;AAkBTC,MAAAA,MAAM,EAAE,EAlBC;AAmBTC,MAAAA,aAAa,EAAC,EAnBL;AAoBTC,MAAAA,aAAa,EAAC,EApBL;AAqBTC,MAAAA,aAAa,EAAC,EArBL;AAsBTC,MAAAA,WAAW,EAAC,EAtBH;AAuBTC,MAAAA,iBAAiB,EAAC,aAvBT;AAwBTC,MAAAA,mBAAmB,EAAC,eAxBX;AAyBTC,MAAAA,gBAAgB,EAAC,YAzBR;AA0BTC,MAAAA,WAAW,EAAE,qBA1BJ;AA2BTC,MAAAA,gBAAgB,EAAC,aA3BR;AA4BTC,MAAAA,eAAe,EAAC;AA5BP,KAAb;AA8BA,UAAKC,KAAL,GAAa,CAAb;AACA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,+BAAlB;AACA,UAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeD,IAAf,+BAAjB;AAlCc;AAmCjB;;;;WAID;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAC8BlF,YAAY,CAACoF,OAAb,CAAqB,YAArB,CAD9B;;AAAA;AACUC,cAAAA,WADV;AAAA;AAAA,+CAEyBrF,YAAY,CAACoF,OAAb,CAAqB,QAArB,CAFzB;;AAAA;AAEUE,cAAAA,MAFV;AAGIhF,cAAAA,WAAW,CAAC+E,WAAD,EAAaC,MAAb,CAAX,CAAgC/C,IAAhC,CAAqC,UAAAgD,gBAAgB,EAAI;AACrD5C,gBAAAA,OAAO,CAACC,GAAR,CAAY2C,gBAAZ;;AACA,gBAAA,MAAI,CAAChE,QAAL,CAAc;AAAC+C,kBAAAA,aAAa,EAAEiB,gBAAgB,CAAC,CAAD;AAAhC,iBAAd;;AACA,gBAAA,MAAI,CAAChE,QAAL,CAAc;AAACgD,kBAAAA,aAAa,EAAEgB,gBAAgB,CAAC,CAAD;AAAhC,iBAAd;;AACA,gBAAA,MAAI,CAAChE,QAAL,CAAc;AAACiD,kBAAAA,aAAa,EAAEe,gBAAgB,CAAC,CAAD;AAAhC,iBAAd;AACH,eALD,EAKGzC,KALH,CAKS,UAAUC,KAAV,EAAiB;AACtBJ,gBAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACH,eAPD;AASDJ,cAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ;AAZH;AAAA,+CAaU,KAAK4C,YAAL,EAbV;;AAAA;AAAA;AAAA,+CAcU,KAAKC,eAAL,EAdV;;AAAA;AAeI,kBAAI,KAAKpC,KAAL,CAAWoB,WAAX,CAAuBiB,MAAvB,IAA+B,CAAnC,EAAqC;AACjC,qBAAKnE,QAAL,CAAc,EAAd;AACH;;AAjBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;WAqBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAC6BvB,YAAY,CAACoF,OAAb,CAAqB,YAArB,CAD7B;;AAAA;AACSC,cAAAA,WADT;AAAA;AAAA,+CAEwBrF,YAAY,CAACoF,OAAb,CAAqB,QAArB,CAFxB;;AAAA;AAESE,cAAAA,MAFT;AAIG3C,cAAAA,OAAO,CAACC,GAAR,CAAY0C,MAAZ;AAJH;AAAA,+CAKSjF,mBAAmB,CAACgF,WAAD,EAAcC,MAAd,CAAnB,CAAyC/C,IAAzC,CAA8C,UAAAoD,WAAW,EAAI;AAC1DhD,gBAAAA,OAAO,CAACC,GAAR,CAAY+C,WAAZ;;AACA,gBAAA,MAAI,CAACpE,QAAL,CAAc;AAACkD,kBAAAA,WAAW,EAAEkB;AAAd,iBAAd;AACH,eAHA,EAGE7C,KAHF,CAGQ,UAAUC,KAAV,EAAiB;AACtBJ,gBAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACH,eALA,CALT;;AAAA;AAWIJ,cAAAA,OAAO,CAACC,GAAR,CAAY,KAAKS,KAAL,CAAWoB,WAAvB;;AAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;WAcA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAC6BzE,YAAY,CAACoF,OAAb,CAAqB,YAArB,CAD7B;;AAAA;AACSC,cAAAA,WADT;AAAA;AAAA,+CAEwBrF,YAAY,CAACoF,OAAb,CAAqB,QAArB,CAFxB;;AAAA;AAESE,cAAAA,MAFT;AAIG3C,cAAAA,OAAO,CAACC,GAAR,CAAY0C,MAAZ;AAJH;AAAA,+CAKShF,WAAW,CAAC+E,WAAD,EAAcC,MAAd,CAAX,CAAiC/C,IAAjC,CAAsC,UAAAoD,WAAW,EAAI;AAClDhD,gBAAAA,OAAO,CAACC,GAAR,CAAY+C,WAAZ;;AACA,gBAAA,MAAI,CAACpE,QAAL,CAAc;AAACqE,kBAAAA,YAAY,EAAED;AAAf,iBAAd;AACH,eAHA,EAGE7C,KAHF,CAGQ,UAAUC,KAAV,EAAiB;AACtBJ,gBAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACH,eALA,CALT;;AAAA;AAWIJ,cAAAA,OAAO,CAACC,GAAR,CAAY,KAAKS,KAAL,CAAWuC,YAAvB;;AAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;WAcA,kBAAelF,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACIV,cAAAA,YAAY,CAACc,OAAb,CAAqB,OAArB,EAA6BJ,KAAK,CAACE,MAAN,CAAaC,KAA1C;AADJ;AAAA,+CAEwBb,YAAY,CAACoF,OAAb,CAAqB,OAArB,CAFxB;;AAAA;AAEUS,cAAAA,KAFV;AAGIlD,cAAAA,OAAO,CAACC,GAAR,CAAYiD,KAAZ;;AAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;WAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACyB7F,YAAY,CAACoF,OAAb,CAAqB,cAArB,CADzB;;AAAA;AACSU,cAAAA,OADT;AAEG1F,cAAAA,cAAc,CAAC0F,OAAD,EAAS,KAAKzC,KAAL,CAAWS,SAApB,EAA8B,KAAKT,KAAL,CAAWG,OAAzC,CAAd;;AAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;WAoDC,4BAAyBuC,IAAzB,EAA8BC,KAA9B,EAAoCC,IAApC;AAAA;;AAAA;AAAA;AAAA;AAAA;AACEhG,cAAAA,cAAc,CAAC,IAAD,EAAO+B,KAAK,CACrB,sCADqB,EACmB;AACpCC,gBAAAA,MAAM,EAAE,MAD4B;AAEpCC,gBAAAA,OAAO,EAAE;AACL,4BAAU,kBADL;AAEL,kCAAgB;AAFX,iBAF2B;AAMpCC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB0D,kBAAAA,IAAI,EAACA,IADY;AAEjBC,kBAAAA,KAAK,EAACA,KAFW;AAGjBC,kBAAAA,IAAI,EAACA;AAHY,iBAAf;AAN8B,eADnB,CAAZ,CAAd,CAaO1D,IAbP,CAaY,UAAAC,QAAQ;AAAA,uBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,eAbpB,EAayCF,IAbzC,CAa8C,UAAAG,IAAI,EAAI;AAC7C,oBAAIA,IAAI,CAAC,CAAD,CAAJ,IAAS,GAAb,EAAkB;AACd1C,kBAAAA,YAAY,CAACc,OAAb,CAAqB,eAArB,EAAqC4B,IAAI,CAAC,CAAD,CAAJ,CAAQ/B,EAA7C;AACAgC,kBAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;;AACA,kBAAA,MAAI,CAACpC,KAAL,CAAWU,UAAX,CAAsBC,OAAtB,CAA8B,MAA9B;;AACA,yBAAO+E,QAAQ,CAACxD,IAAI,CAAC,CAAD,CAAJ,CAAQ/B,EAAT,CAAf;AACH,iBALD,MAMK;AACDgC,kBAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACH;AACJ,eAvBN,EAuBQE,KAvBR,CAuBc,UAAUC,KAAV,EAAiB;AACtBJ,gBAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACH,eAzBN;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;WA4BG,uBAAcoD,IAAd,EACA;AACI,UAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAI,IAAI,KAAK,EAAT,CAAf,CAAZ;AACA,UAAII,mBAAmB,GAAGJ,IAAI,IAAI,KAAK,EAAT,CAA9B;AACA,UAAIK,OAAO,GAAGH,IAAI,CAACC,KAAL,CAAWC,mBAAmB,GAAG,EAAjC,CAAd;AACA,UAAIE,mBAAmB,GAAGF,mBAAmB,GAAG,EAAhD;AACA,UAAIpC,OAAO,GAAGkC,IAAI,CAACK,IAAL,CAAUD,mBAAV,CAAd;AACA,UAAIE,GAAG,GAAG;AACN,aAAKP,KADC;AAEN,aAAKI,OAFC;AAGN,aAAKrC;AAHC,OAAV;AAKA,aAAOwC,GAAP;AACH;;;WAED,sBACA;AACI,UAAIC,IAAI,GAAG,CAAX;AACA,UAAIC,MAAM,GAAG,CAAb;AACA,UAAIC,MAAM,GAAG,CAAb;AACA,UAAIC,KAAK,GAAG,KAAK1D,KAAL,CAAWe,UAAX,CAAsB4C,KAAtB,CAA4B,GAA5B,CAAZ;;AACA,UAAID,KAAK,CAAC,CAAD,CAAL,CAASrB,MAAT,GAAkB,CAAtB,EAAyB;AACrBkB,QAAAA,IAAI,GAAGV,QAAQ,CAACa,KAAK,CAAC,CAAD,CAAN,CAAf;AACH;;AACD,UAAIA,KAAK,CAAC,CAAD,CAAL,CAASrB,MAAT,GAAkB,CAAtB,EAAyB;AACrBmB,QAAAA,MAAM,GAAGX,QAAQ,CAACa,KAAK,CAAC,CAAD,CAAN,CAAjB;AACH;;AACD,UAAIA,KAAK,CAAC,CAAD,CAAL,CAASrB,MAAT,GAAkB,CAAtB,EAAyB;AACrBoB,QAAAA,MAAM,GAAGZ,QAAQ,CAACa,KAAK,CAAC,CAAD,CAAN,CAAjB;AACH;;AACD,WAAK1D,KAAL,CAAWc,OAAX,GAAqB8C,MAAM,GAAG,IAAT,GAAgBJ,MAAM,GAAG,EAAzB,GAA8BK,OAAnD;;AAEA,UAAI,KAAK7D,KAAL,CAAWc,OAAX,GAAqB,CAAzB,EAA4B;AACxB,aAAKa,KAAL,GAAamC,WAAW,CAAC,KAAKhC,SAAN,EAAiB,KAAK9B,KAAL,CAAWc,OAA5B,CAAxB;AACH;AACJ;;;WAED,qBACA;AACI,UAAIA,OAAO,GAAG,KAAKd,KAAL,CAAWc,OAAX,GAAqB,CAAnC;AACA,WAAK5C,QAAL,CAAc;AACV2C,QAAAA,IAAI,EAAE,KAAKkD,aAAL,CAAmBjD,OAAnB,CADI;AAEVA,QAAAA,OAAO,EAAEA;AAFC,OAAd;;AAKA,UAAIA,OAAO,IAAI,CAAf,EAAkB;AACdkD,QAAAA,aAAa,CAAC,KAAKrC,KAAN,CAAb;AACH;AACJ;;;WAED,mBACA;AACI,UAAIsC,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACA,UAAIC,CAAC,GAAGF,KAAK,CAACG,QAAN,EAAR;AACA,UAAIC,CAAC,GAAGJ,KAAK,CAACK,UAAN,EAAR;AACA,aAAOH,CAAC,GAAG,GAAJ,GAAUE,CAAjB;AACH;;;WAED,wBACA;AACI,aAAO,KAAKrE,KAAL,CAAW7B,QAAX,CAAoBkE,MAApB,GAA6B,CAA7B,IAAkC,KAAKrC,KAAL,CAAW5B,OAAX,CAAmBiE,MAAnB,GAA4B,CAA9D,IAAmE,KAAKrC,KAAL,CAAWO,MAAX,CAAkB8B,MAAlB,GAA2B,CAA9F,IAAmG,KAAKrC,KAAL,CAAWQ,SAAX,CAAqB6B,MAArB,GAA8B,CAAjI,IAAsI,KAAKrC,KAAL,CAAWS,SAAX,CAAqB4B,MAArB,GAA8B,CAApK,IAAyK,KAAKrC,KAAL,CAAWW,UAAX,CAAsB0B,MAAtB,GAA+B,CAA/M;AACH;;;WAGD,yBACA;AACI,aAAO,KAAKrC,KAAL,CAAWe,UAAX,CAAsBsB,MAAtB,GAA+B,CAAtC;AACH;;;WAED;AAAA;AAAA;AAAA;AAAA;AACI,mBAAKnE,QAAL,CAAc;AAAC8C,gBAAAA,MAAM,EAAE;AAAT,eAAd;AAEA,mBAAKhB,KAAL,CAAWgB,MAAX,CAAkBuD,IAAlB,CAAuB;AACnB/B,gBAAAA,KAAK,EAAEA,KADY;AAEnBgC,gBAAAA,MAAM,EAAEA,MAFW;AAGnBC,gBAAAA,GAAG,EAAEA,GAHc;AAInBC,gBAAAA,MAAM,EAAEA,MAJW;AAKnBC,gBAAAA,KAAK,EAAEA,KALY;AAMnBC,gBAAAA,WAAW,EAAXA,WANmB;AAOnBC,gBAAAA,WAAW,EAAXA,WAPmB;AAQnBC,gBAAAA,aAAa,EAAbA,aARmB;AASnBC,gBAAAA,KAAK,EAAEA,KATY;AAUnBC,gBAAAA,WAAW,EAAXA,WAVmB;AAWnBC,gBAAAA,WAAW,EAAXA,WAXmB;AAYnBC,gBAAAA,aAAa,EAAbA,aAZmB;AAanBC,gBAAAA,KAAK,EAAEA,KAbY;AAcnBC,gBAAAA,WAAW,EAAXA,WAdmB;AAenBC,gBAAAA,WAAW,EAAXA,WAfmB;AAgBnBC,gBAAAA,aAAa,EAAbA,aAhBmB;AAiBnBC,gBAAAA,KAAK,EAAEA,KAjBY;AAkBnBC,gBAAAA,WAAW,EAAXA,WAlBmB;AAmBnBC,gBAAAA,WAAW,EAAXA,WAnBmB;AAoBnBC,gBAAAA,aAAa,EAAbA;AApBmB,eAAvB;;AAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;WAyGA,4BAAkB;AAAA;;AACd,aAAO,KAAK1F,KAAL,CAAWgB,MAAX,CAAkB2E,GAAlB,CAAsB,UAACC,KAAD,EAAW;AACpC,eACI,gCACI,gCAAKA,KAAK,CAACpD,KAAX,CADJ,EAEI,gCAAKoD,KAAK,CAACpB,MAAX,CAFJ,EAGI,gCAAKoB,KAAK,CAACnB,GAAX,CAHJ,EAII,gCAAKmB,KAAK,CAAClB,MAAX,CAJJ,EAKI,gCAAI;AAAO,UAAA,EAAE,EAAEkB,KAAK,CAACjB,KAAjB;AAAwB,UAAA,QAAQ,EAAE,MAAI,CAACjG;AAAvC,WAAiE,MAAI,CAACkH,KAAL,CAAWhB,WAA5E,CAAJ,EAAoG;AAAO,UAAA,EAAE,EAAEgB,KAAK,CAACb,KAAjB;AAAwB,UAAA,QAAQ,EAAE,MAAI,CAACrG;AAAvC,WAAiE,MAAI,CAACkH,KAAL,CAAWZ,WAA5E,CAApG,EAAoM;AAAO,UAAA,EAAE,EAAEY,KAAK,CAACT,KAAjB;AAAwB,UAAA,QAAQ,EAAE,MAAI,CAACzG;AAAvC,WAAiE,MAAI,CAACkH,KAAL,CAAWR,WAA5E,CAApM,EAAoS;AAAO,UAAA,EAAE,EAAEQ,KAAK,CAACL,KAAjB;AAAwB,UAAA,QAAQ,EAAE,MAAI,CAAC7G;AAAvC,WAAiE,MAAI,CAACkH,KAAL,CAAWJ,WAA5E,CAApS,CALJ,EAMI,gCAAI;AAAO,UAAA,EAAE,EAAEI,KAAK,CAACjB,KAAjB;AAAwB,UAAA,QAAQ,EAAE,MAAI,CAAChF;AAAvC,WAA6D,MAAI,CAACiG,KAAL,CAAWf,WAAxE,CAAJ,EAAgG;AAAO,UAAA,EAAE,EAAEe,KAAK,CAACb,KAAjB;AAAwB,UAAA,QAAQ,EAAE,MAAI,CAACpF;AAAvC,WAA6D,MAAI,CAACiG,KAAL,CAAWX,WAAxE,CAAhG,EAA4L;AAAO,UAAA,EAAE,EAAEW,KAAK,CAACT,KAAjB;AAAwB,UAAA,QAAQ,EAAE,MAAI,CAACxF;AAAvC,WAA6D,MAAI,CAACiG,KAAL,CAAWP,WAAxE,CAA5L,EAAwR;AAAO,UAAA,EAAE,EAAEO,KAAK,CAACL,KAAjB;AAAwB,UAAA,QAAQ,EAAE,MAAI,CAAC5F;AAAvC,WAA6D,MAAI,CAACiG,KAAL,CAAWH,WAAxE,CAAxR,CANJ,EAOI,gCAAI;AAAO,UAAA,EAAE,EAAEG,KAAK,CAACjB,KAAjB;AAAwB,UAAA,QAAQ,EAAE,MAAI,CAAC7E;AAAvC,WAA+D,MAAI,CAAC8F,KAAL,CAAWd,aAA1E,CAAJ,EAAoG;AAAO,UAAA,EAAE,EAAEc,KAAK,CAACb,KAAjB;AAAwB,UAAA,QAAQ,EAAE,MAAI,CAACjF;AAAvC,WAA+D,MAAI,CAAC8F,KAAL,CAAWV,aAA1E,CAApG,EAAoM;AAAO,UAAA,EAAE,EAAEU,KAAK,CAACT,KAAjB;AAAwB,UAAA,QAAQ,EAAE,MAAI,CAACrF;AAAvC,WAA+D,MAAI,CAAC8F,KAAL,CAAWN,aAA1E,CAApM,EAAoS;AAAO,UAAA,EAAE,EAAEM,KAAK,CAACL,KAAjB;AAAwB,UAAA,QAAQ,EAAE,MAAI,CAACzF;AAAvC,WAA+D,MAAI,CAAC8F,KAAL,CAAWF,aAA1E,CAApS,CAPJ,CADJ;AAWH,OAZM,CAAP;AAaH;;;WAED,kBACA;AAAA;;AACI,UAAIG,cAAc,GAAG,KAAK7F,KAAL,CAAWY,QAAX,CAAoB+E,GAApB,CAAwB,UAAAG,CAAC;AAAA,eAC9C;AAAQ,UAAA,KAAK,EAAEA,CAAC,CAACxI,EAAjB;AAAqB,UAAA,GAAG,EAAEwI,CAAC,CAACxI;AAA5B,WAAiCwI,CAAC,CAACC,IAAnC,CAD8C;AAAA,OAAzB,CAArB;AAIA,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC;AAAb,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC;AAAb,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC;AAAb,SACA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,QAAQ,EAAE,EAAX;AAAeC,UAAAA,UAAU,EAAE,MAA3B;AAAmCC,UAAAA,SAAS,EAAE;AAA9C;AAAb,yCADA,CADJ,EAMI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC;AAAb,SACI,oBAAC,MAAD;AAEA,QAAA,KAAK,EAAC,aAFN;AAGA,QAAA,OAAO,EAAE,KAAKrI;AAHd,QADJ,EAMA,oBAAC,MAAD;AAEI,QAAA,KAAK,EAAC,eAFV;AAGI,QAAA,OAAO,EAAE,KAAKI;AAHlB,QANA,EAWA,oBAAC,MAAD;AAEI,QAAA,KAAK,EAAC,YAFV;AAGI,QAAA,OAAO,EAAE,KAAKC;AAHlB,QAXA,EAgBA,oBAAC,MAAD;AAEI,QAAA,KAAK,EAAC,qBAFV;AAGI,QAAA,OAAO,EAAE,KAAKC;AAHlB,QAhBA,EAqBA,oBAAC,MAAD;AAEI,QAAA,KAAK,EAAC,cAFV;AAGI,QAAA,OAAO,EAAE,KAAKC;AAHlB,QArBA,EA0BA,oBAAC,MAAD;AAEI,QAAA,KAAK,EAAC,gBAFV;AAGI,QAAA,OAAO,EAAE,KAAKC;AAHlB,QA1BA,CANJ,CADJ,EAyCA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE8H;AAAb,SACA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,cAAc,EAAE;AAAjB;AAAb,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,MAAM,EAAE;AAAT;AAAb,aADJ,EAEI,mCACA,gCACI;AAAI,QAAA,OAAO,EAAC,SAAZ;AAAsB,QAAA,KAAK,EAAE;AAACJ,UAAAA,SAAS,EAAE,MAAZ;AAAoBK,UAAAA,OAAO,EAAE,KAA7B;AAAoCN,UAAAA,UAAU,EAAE,MAAhD;AAAwDO,UAAAA,KAAK,EAAE,OAA/D;AAAwEC,UAAAA,UAAU,EAAE;AAApF;AAA7B,SAA2H,kDAA3H,CADJ,EAEI;AAAI,QAAA,KAAK,EAAE;AAACC,UAAAA,MAAM,EAAE,OAAT;AAAkBC,UAAAA,WAAW,EAAE,SAA/B;AAA0CL,UAAAA,MAAM,EAAE,EAAlD;AAAsDM,UAAAA,KAAK,EAAE,GAA7D;AAAkEL,UAAAA,OAAO,EAAE;AAA3E;AAAX,SAA8F,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE,KAAK1G,KAAL,CAAW7B,QAA7B;AACnF,QAAA,YAAY,EAAE,sBAAC6I,IAAD;AAAA,iBAAU,MAAI,CAAC9I,QAAL,CAAc;AAACC,YAAAA,QAAQ,EAAE6I;AAAX,WAAd,CAAV;AAAA;AADqE,QAA9F,CAFJ,CADA,EAMA,gCACI;AAAI,QAAA,OAAO,EAAC,SAAZ;AAAsB,QAAA,KAAK,EAAE;AAACX,UAAAA,SAAS,EAAE,MAAZ;AAAoBK,UAAAA,OAAO,EAAE,KAA7B;AAAoCN,UAAAA,UAAU,EAAE,MAAhD;AAAwDO,UAAAA,KAAK,EAAE,OAA/D;AAAwEC,UAAAA,UAAU,EAAE;AAApF;AAA7B,SAA2H,iDAA3H,CADJ,EAEI;AAAI,QAAA,KAAK,EAAE;AAACC,UAAAA,MAAM,EAAE,OAAT;AAAkBC,UAAAA,WAAW,EAAE,SAA/B;AAA0CL,UAAAA,MAAM,EAAE,EAAlD;AAAsDM,UAAAA,KAAK,EAAE,GAA7D;AAAkEL,UAAAA,OAAO,EAAE;AAA3E;AAAX,cAA+F,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE,KAAK1G,KAAL,CAAW5B,OAA7B;AACnF,QAAA,YAAY,EAAE,sBAAC4I,IAAD;AAAA,iBAAU,MAAI,CAAC9I,QAAL,CAAc;AAACE,YAAAA,OAAO,EAAE4I;AAAV,WAAd,CAAV;AAAA;AADqE,QAA/F,CAFJ,CANA,EAYA,gCACI;AAAI,QAAA,OAAO,EAAC,SAAZ;AAAsB,QAAA,KAAK,EAAE;AAACX,UAAAA,SAAS,EAAE,MAAZ;AAAoBK,UAAAA,OAAO,EAAE,KAA7B;AAAoCN,UAAAA,UAAU,EAAE,MAAhD;AAAwDO,UAAAA,KAAK,EAAE,OAA/D;AAAwEC,UAAAA,UAAU,EAAE;AAApF;AAA7B,SAA2H,oDAA3H,CADJ,EAEI;AAAI,QAAA,KAAK,EAAE;AAACC,UAAAA,MAAM,EAAE,OAAT;AAAkBC,UAAAA,WAAW,EAAE,SAA/B;AAA0CL,UAAAA,MAAM,EAAE,EAAlD;AAAsDM,UAAAA,KAAK,EAAE,GAA7D;AAAkEL,UAAAA,OAAO,EAAE;AAA3E;AAAX,SAA8F,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE,KAAK1G,KAAL,CAAWE,IAA7B;AACpF,QAAA,YAAY,EAAE,sBAAC8G,IAAD;AAAA,iBAAU,MAAI,CAAC9I,QAAL,CAAc;AAACgC,YAAAA,IAAI,EAAE8G;AAAP,WAAd,CAAV;AAAA;AADsE,QAA9F,CAFJ,CAZA,EAiBA,gCACI;AAAI,QAAA,OAAO,EAAC,SAAZ;AAAsB,QAAA,KAAK,EAAE;AAACX,UAAAA,SAAS,EAAE,MAAZ;AAAoBK,UAAAA,OAAO,EAAE,KAA7B;AAAoCN,UAAAA,UAAU,EAAE,MAAhD;AAAwDO,UAAAA,KAAK,EAAE,OAA/D;AAAwEC,UAAAA,UAAU,EAAE;AAApF;AAA7B,SAA2H,6DAA3H,CADJ,EAEI;AAAI,QAAA,KAAK,EAAE;AAACC,UAAAA,MAAM,EAAE,OAAT;AAAkBC,UAAAA,WAAW,EAAE,SAA/B;AAA0CL,UAAAA,MAAM,EAAE,EAAlD;AAAsDM,UAAAA,KAAK,EAAE,GAA7D;AAAkEL,UAAAA,OAAO,EAAE;AAA3E;AAAX,SAA8F,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE,KAAK1G,KAAL,CAAWG,OAA7B;AACnF,QAAA,YAAY,EAAE,sBAAC6G,IAAD;AAAA,iBAAU,MAAI,CAAC9I,QAAL,CAAc;AAACiC,YAAAA,OAAO,EAAE6G;AAAV,WAAd,CAAV;AAAA;AADqE,QAA9F,CAFJ,CAjBA,EAuBA,gCACI;AAAI,QAAA,OAAO,EAAC,SAAZ;AAAsB,QAAA,KAAK,EAAE;AAACX,UAAAA,SAAS,EAAE,MAAZ;AAAoBK,UAAAA,OAAO,EAAE,KAA7B;AAAoCN,UAAAA,UAAU,EAAE,MAAhD;AAAwDO,UAAAA,KAAK,EAAE,OAA/D;AAAwEC,UAAAA,UAAU,EAAE;AAApF;AAA7B,SAA2H,qDAA3H,CADJ,EAEI;AAAI,QAAA,KAAK,EAAE;AAACC,UAAAA,MAAM,EAAE,OAAT;AAAkBC,UAAAA,WAAW,EAAE,SAA/B;AAA0CL,UAAAA,MAAM,EAAE,EAAlD;AAAsDM,UAAAA,KAAK,EAAE,GAA7D;AAAkEL,UAAAA,OAAO,EAAE;AAA3E;AAAX,cAA+F,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE,KAAK1G,KAAL,CAAWQ,SAA7B;AACpF,QAAA,WAAW,EAAC,YADwE;AAC3D,QAAA,YAAY,EAAE,sBAACoC,IAAD;AAAA,iBAAU,MAAI,CAAC1E,QAAL,CAAc;AAACsC,YAAAA,SAAS,EAAEoC;AAAZ,WAAd,CAAV;AAAA;AAD6C,QAA/F,CAFJ,CAvBA,EA4BD,gCACK;AAAI,QAAA,OAAO,EAAC,SAAZ;AAAsB,QAAA,KAAK,EAAE;AAACyD,UAAAA,SAAS,EAAE,MAAZ;AAAoBK,UAAAA,OAAO,EAAE,KAA7B;AAAoCN,UAAAA,UAAU,EAAE,MAAhD;AAAwDO,UAAAA,KAAK,EAAE,OAA/D;AAAwEC,UAAAA,UAAU,EAAE;AAApF;AAA7B,SAA2H,oDAA3H,CADL,EAEK;AAAI,QAAA,KAAK,EAAE;AAACC,UAAAA,MAAM,EAAE,OAAT;AAAkBC,UAAAA,WAAW,EAAE,SAA/B;AAA0CL,UAAAA,MAAM,EAAE,EAAlD;AAAsDM,UAAAA,KAAK,EAAE,GAA7D;AAAkEL,UAAAA,OAAO,EAAE;AAA3E;AAAX,cAA+F,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE,KAAK1G,KAAL,CAAWS,SAA7B;AACpF,QAAA,WAAW,EAAC,OADwE;AAChE,QAAA,YAAY,EAAE,sBAACI,IAAD;AAAA,iBAAU,MAAI,CAAC3C,QAAL,CAAc;AAACuC,YAAAA,SAAS,EAAEI;AAAZ,WAAd,CAAV;AAAA;AADkD,QAA/F,CAFL,CA5BC,CAFJ,EAoCQ,oBAAC,IAAD,YApCR,EAqCQ,oBAAC,MAAD;AACI,QAAA,QAAQ,EAAE,CAAC,KAAKoG,YAAL,EADf;AAEI,QAAA,KAAK,EAAC,gCAFV;AAGI,QAAA,OAAO,EAAE,KAAKlJ;AAHlB,QArCR,EA0CQ,oBAAC,IAAD,YA1CR,EA2CQ,oBAAC,MAAD;AACI,QAAA,KAAK,EAAC,WADV;AAEI,QAAA,OAAO,EAAE,KAAKJ;AAFlB,QA3CR,CADA,EAiDA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAC6I,UAAAA,cAAc,EAAE;AAAjB;AAAb,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACL,UAAAA,QAAQ,EAAE,EAAX;AAAeC,UAAAA,UAAU,EAAE,MAA3B;AAAmCC,UAAAA,SAAS,EAAE;AAA9C;AAAb,6CADJ,EAIK,mCACD,gCACI;AAAI,QAAA,OAAO,EAAC,SAAZ;AAAsB,QAAA,KAAK,EAAE;AAACA,UAAAA,SAAS,EAAE,MAAZ;AAAoBK,UAAAA,OAAO,EAAE,KAA7B;AAAoCN,UAAAA,UAAU,EAAE,MAAhD;AAAwDO,UAAAA,KAAK,EAAE,OAA/D;AAAwEC,UAAAA,UAAU,EAAE;AAApF;AAA7B,SAA2H,kDAA3H,CADJ,EAEI;AAAI,QAAA,KAAK,EAAE;AAACC,UAAAA,MAAM,EAAE,OAAT;AAAkBC,UAAAA,WAAW,EAAE,SAA/B;AAA0CL,UAAAA,MAAM,EAAE,EAAlD;AAAsDM,UAAAA,KAAK,EAAE,GAA7D;AAAkEL,UAAAA,OAAO,EAAE;AAA3E;AAAX,SAA+F,KAAK1G,KAAL,CAAWI,SAA1G,CAFJ,CADC,EAKD,gCACI;AAAI,QAAA,OAAO,EAAC,SAAZ;AAAsB,QAAA,KAAK,EAAE;AAACiG,UAAAA,SAAS,EAAE,MAAZ;AAAoBK,UAAAA,OAAO,EAAE,KAA7B;AAAoCN,UAAAA,UAAU,EAAE,MAAhD;AAAwDO,UAAAA,KAAK,EAAE,OAA/D;AAAwEC,UAAAA,UAAU,EAAE;AAApF;AAA7B,SAA2H,iDAA3H,CADJ,EAEI;AAAI,QAAA,KAAK,EAAE;AAACC,UAAAA,MAAM,EAAE,OAAT;AAAkBC,UAAAA,WAAW,EAAE,SAA/B;AAA0CL,UAAAA,MAAM,EAAE,EAAlD;AAAsDM,UAAAA,KAAK,EAAE,GAA7D;AAAkEL,UAAAA,OAAO,EAAE;AAA3E;AAAX,SAA+F,KAAK1G,KAAL,CAAWK,QAA1G,CAFJ,CALC,EASD,gCACI;AAAI,QAAA,OAAO,EAAC,SAAZ;AAAsB,QAAA,KAAK,EAAE;AAACgG,UAAAA,SAAS,EAAE,MAAZ;AAAoBK,UAAAA,OAAO,EAAE,KAA7B;AAAoCN,UAAAA,UAAU,EAAE,MAAhD;AAAwDO,UAAAA,KAAK,EAAE,OAA/D;AAAwEC,UAAAA,UAAU,EAAE;AAApF;AAA7B,SAA2H,6DAA3H,CADJ,EAEI;AAAI,QAAA,KAAK,EAAE;AAACC,UAAAA,MAAM,EAAE,OAAT;AAAkBC,UAAAA,WAAW,EAAE,SAA/B;AAA0CL,UAAAA,MAAM,EAAE,EAAlD;AAAsDM,UAAAA,KAAK,EAAE,GAA7D;AAAkEL,UAAAA,OAAO,EAAE;AAA3E;AAAX,SAA+F,KAAK1G,KAAL,CAAWM,QAA1G,CAFJ,CATC,EAcD,gCACI;AAAI,QAAA,OAAO,EAAC,SAAZ;AAAsB,QAAA,KAAK,EAAE;AAAC+F,UAAAA,SAAS,EAAE,MAAZ;AAAoBK,UAAAA,OAAO,EAAE,KAA7B;AAAoCN,UAAAA,UAAU,EAAE,MAAhD;AAAwDO,UAAAA,KAAK,EAAE,OAA/D;AAAwEC,UAAAA,UAAU,EAAE;AAApF;AAA7B,SAA2H,oDAA3H,CADJ,EAEI;AAAI,QAAA,KAAK,EAAE;AAACC,UAAAA,MAAM,EAAE,OAAT;AAAkBC,UAAAA,WAAW,EAAE,SAA/B;AAA0CL,UAAAA,MAAM,EAAE,EAAlD;AAAsDM,UAAAA,KAAK,EAAE,GAA7D;AAAkEL,UAAAA,OAAO,EAAE;AAA3E;AAAX,SAA+F,KAAK1G,KAAL,CAAWU,UAA1G,CAFJ,CAdC,CAJL,EAwBI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAC+F,UAAAA,MAAM,EAAE;AAAT;AAAb,QAxBJ,EAyBI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAES;AAAb,iBAzBJ,EA4BQ,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC;AAAb,8CA5BR,EA6BQ,oBAAC,SAAD;AACI,QAAA,KAAK,EAAEC,cADX;AAEI,QAAA,WAAW,EAAC,WAFhB;AAGI,QAAA,YAAY,EAAE,sBAACvG,IAAD;AAAA,iBAAU,MAAI,CAAC3C,QAAL,CAAc;AAAC6C,YAAAA,UAAU,EAAEF;AAAb,WAAd,CAAV;AAAA;AAHlB,QA7BR,EAkCQ;AAAQ,QAAA,KAAK,EAAE;AAACkG,UAAAA,KAAK,EAAC;AAAP,SAAf;AAEI,QAAA,QAAQ,EAAE,CAAC,KAAKM,aAAL,EAFf;AAGI,QAAA,OAAO,EAAE,KAAKzF;AAHlB,iBAlCR,EAuCQ,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE0F;AAAb,sBACc,KAAKtH,KAAL,CAAWa,IAAX,CAAgBsD,CAD9B,gBAC2C,KAAKnE,KAAL,CAAWa,IAAX,CAAgBwD,CAD3D,iBACyE,KAAKrE,KAAL,CAAWa,IAAX,CAAgB0G,CADzF,MAvCR,CAjDA,CAzCA,EAqIJ,oBAAC,IAAD,QACI,mCACI,mCACI,gCACI,4CADJ,EAEI,yCAFJ,EAGI,sCAHJ,EAII,yCAJJ,EAKI,+CALJ,EAMI,2CANJ,EAOI,6CAPJ,CADJ,EAUK,KAAKC,gBAAL,EAVL,CADJ,CADJ,CArII,CADJ;AAwJH;;;;EAphBmC/K,KAAK,CAACgL,S;;SAA7BvK,c;AAwhBjB,IACAgK,QAAQ,GAAG;AACPP,EAAAA,KAAK,EAAE,OADA;AAEPR,EAAAA,QAAQ,EAAE,EAFH;AAGPC,EAAAA,UAAU,EAAE;AAHL,CADX;AAOA,IACAsB,QAAQ,GAAG;AACPvB,EAAAA,QAAQ,EAAE,EADH;AAEPM,EAAAA,MAAM,EAAE;AAFD,CADX;AAMA,IACAkB,cAAc,GAAG;AACblB,EAAAA,MAAM,EAAE;AADK,CADjB;AAKA,IACAU,gBAAgB,GAAG;AACfV,EAAAA,MAAM,EAAE,EADO;AAEfM,EAAAA,KAAK,EAAE,GAFQ;AAGfa,EAAAA,MAAM,EAAE,CAHO;AAIfC,EAAAA,WAAW,EAAE,CAJE;AAKfnB,EAAAA,OAAO,EAAE,EALM;AAMfoB,EAAAA,eAAe,EAAE,SANF;AAOfnB,EAAAA,KAAK,EAAE,SAPQ;AAQfoB,EAAAA,UAAU,EAAE,MARG;AASf5B,EAAAA,QAAQ,EAAE,EATK;AAUf6B,EAAAA,UAAU,EAAE,EAVG;AAWfC,EAAAA,UAAU,EAAE;AAXG,CADnB;AAeA,IACAb,cAAc,GAAG;AACbX,EAAAA,MAAM,EAAE,EADK;AAEbM,EAAAA,KAAK,EAAE,GAFM;AAGba,EAAAA,MAAM,EAAE,CAHK;AAIbC,EAAAA,WAAW,EAAE,CAJA;AAKbnB,EAAAA,OAAO,EAAE,EALI;AAMboB,EAAAA,eAAe,EAAE,SANJ;AAOb3B,EAAAA,QAAQ,EAAE,EAPG;AAQb8B,EAAAA,UAAU,EAAE;AARC,CADjB;AAYA,IACAX,kBAAkB,GAAG;AACjBb,EAAAA,MAAM,EAAE,EADS;AAEjBM,EAAAA,KAAK,EAAE,GAFU;AAGjBa,EAAAA,MAAM,EAAE,CAHS;AAIjBvB,EAAAA,SAAS,EAAE,QAJM;AAKjBwB,EAAAA,WAAW,EAAE,CALI;AAMjBnB,EAAAA,OAAO,EAAE,EANQ;AAOjBoB,EAAAA,eAAe,EAAE,SAPA;AAQjB3B,EAAAA,QAAQ,EAAE;AARO,CADrB;AAWA,IAAMI,UAAU,GAAE;AACdG,EAAAA,OAAO,EAAE,MADK;AAEdwB,EAAAA,aAAa,EAAE,KAFD;AAGd1B,EAAAA,cAAc,EAAE;AAHF,CAAlB;AAKA,IAAMR,UAAU,GAAC,EAAjB;AAGA,IAAMC,UAAU,GAAC,EAAjB;AAIA,IAAMK,UAAU,GAAC;AACb4B,EAAAA,aAAa,EAAE,KADF;AAEb1B,EAAAA,cAAc,EAAE;AAFH,CAAjB;AAKA,IAAMN,UAAU,GAAC;AACbG,EAAAA,SAAS,EAAE,QADE;AAEbK,EAAAA,OAAO,EAAE;AAFI,CAAjB","sourcesContent":["import React from \"react\";\nimport {Button, Text, TextInput, ToastAndroid, View} from \"react-native\";\nimport {styles} from \"./styles\"\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport {timeoutPromise, refreshToken,getRaceList,changeWheelSet} from \"./tools\";\nimport {get_Dict_WheelOrder, getDropdown} from \"./tools_get_wheels\";\n\n\nexport default class NewOrderScreen extends React.Component {\n   constructor(props) {\n        super(props);\n        this.state = {\n            raceid: 0,\n            tyretype: '',\n            tyremix: '',\n            term: '',\n            variant: '',\n            tyretype1: '',\n            tyremix1: '',\n            variant1: '',\n            number: '',\n            orderdate: '',\n            ordertime: '',\n            ordertime1: '',\n            pickuptime: '',\n            raceList: [],\n            time: {},\n            seconds: 1800,\n            timervalue: \"\",\n            wheels: [],\n            listDropdown1:[],\n            listDropdown2:[],\n            listDropdown3:[],\n            dictButtons:[],\n            ButtonSlicks_Cold:'Slicks Cold',\n            ButtonSlicks_Medium:'Slicks Medium',\n            ButtonSlicks_Hot:'Slicks Hot',\n            ButtonInter: 'Inters Intermediate',\n            ButtonRainDryWet:'Rain DryWet',\n            ButtonRainHeavy:'Rain HeavyWet',\n        }\n        this.timer = 0;\n        this.startTimer = this.startTimer.bind(this);\n        this.countDown = this.countDown.bind(this);\n    }\n\n\n    // get Data\n    async componentDidMount(){\n        const accesstoken = await AsyncStorage.getItem('accesstoken');\n        const raceID = await AsyncStorage.getItem('raceID');\n        getDropdown(accesstoken,raceID).then(racelistDropdown => {\n            console.log(racelistDropdown);\n            this.setState({listDropdown1: racelistDropdown[0]});\n            this.setState({listDropdown2: racelistDropdown[1]});\n            this.setState({listDropdown3: racelistDropdown[2]});\n        }).catch(function (error) {\n            console.log(error);\n        })\n\n       console.log(2)\n        await this.getWheelDict();\n        await this.getDropdownList();\n        if (this.state.dictButtons.length==6){\n            this.setState({})\n        }\n    }\n\n    //get Wheel Data\n    async getWheelDict(){\n       const accesstoken = await AsyncStorage.getItem('accesstoken');\n       const raceID = await AsyncStorage.getItem('raceID');\n       //const raceID = await AsyncStorage.getItem('raceID');\n       console.log(raceID)\n       await get_Dict_WheelOrder(accesstoken, raceID).then(DataTabular => {\n                console.log(DataTabular);\n                this.setState({dictButtons: DataTabular});\n            }).catch(function (error) {\n                console.log(error);\n            })\n        console.log(this.state.dictButtons)\n    }\n    // get Dropdown list free,order,used\n    async getDropdownList(){\n       const accesstoken = await AsyncStorage.getItem('accesstoken');\n       const raceID = await AsyncStorage.getItem('raceID');\n       //const raceID = await AsyncStorage.getItem('raceID');\n       console.log(raceID)\n       await getDropdown(accesstoken, raceID).then(DataTabular => {\n                console.log(DataTabular);\n                this.setState({listDropdown: DataTabular});\n            }).catch(function (error) {\n                console.log(error);\n            })\n        console.log(this.state.listDropdown)\n    }\n\n    async getSetID(event){\n        AsyncStorage.setItem(\"SetID\",event.target.value);\n        const setid = await AsyncStorage.getItem(\"SetID\");\n        console.log(setid);\n    }\n\n\n\n\n    getRaceID = event => {\n        const id = event.target.value;\n        AsyncStorage.setItem(\"raceIDHelper\", event.target.value);\n        this.saveRaceIDinState();\n    }\n\n    async saveOrderWheel(){\n       const IdWheel = await AsyncStorage.getItem('OrderWheelID');\n       changeWheelSet(IdWheel,this.state.ordertime,this.state.variant);\n    }\n\n    changeRace = event => {\n        event.preventDefault();\n        this.props.navigation.replace('Race');\n    }\n     handleSubmit = event => {\n        event.preventDefault();\n        changeWheelSet()\n        this.saveOrderWheel();\n         //this.sendNewRaceRequest(this.state.raceid, this.state.tyretype, this.state.tyremix, this.state.term,\n        //    this.state.variant, this.state.number, this.state.orderdate, this.state.ordertime, this.state.pickuptime);\n    }\n     handleSubmitButton1 = event => {\n        event.preventDefault();\n        this.setState({tyretype: \"Slicks\"});\n        this.setState({tyremix: \"Cold\"});\n    }\n    handleSubmitButton1 = event => {\n        event.preventDefault();\n        this.setState({tyretype: \"Slicks\"});\n        this.setState({tyremix: \"Cold\"});\n    }\n    handleSubmitButton2 = event => {\n        event.preventDefault();\n        this.setState({tyretype: \"Slicks\"});\n        this.setState({tyremix: \"Medium\"});\n    }\n    handleSubmitButton3 = event => {\n        event.preventDefault();\n        this.setState({tyretype: \"Slicks\"});\n        this.setState({tyremix: \"Hot\"});\n    }\n    handleSubmitButton4 = event => {\n        event.preventDefault();\n        this.setState({tyretype: \"Inters\"});\n        this.setState({tyremix: \"Intermediate\"});\n    }\n    handleSubmitButton5 = event => {\n        event.preventDefault();\n        this.setState({tyretype: \"Rain\"});\n        this.setState({tyremix: \"Dry Wet\"});\n    }\n    handleSubmitButton6 = event => {\n        event.preventDefault();\n        this.setState({tyretype: \"Rain\"});\n        this.setState({tyremix: \"Heavy Wet\"});\n    }\n\n     async sendNewRaceRequest(type,place,date) {\n       timeoutPromise(2000, fetch(\n            'https://api.race24.cloud/race/create', {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    type:type,\n                    place:place,\n                    date:date,\n                })\n            })\n            ).then(response => response.json()).then(data => {\n                if (data[1]==200) {\n                    AsyncStorage.setItem(\"raceIDNewRace\",data[0].id)\n                    console.log(\"changeNav\")\n                    this.props.navigation.replace(\"Race\");//replace('Race');\n                    return parseInt(data[0].id)\n                }\n                else {\n                    console.log(\"failed\")\n                }\n            }).catch(function (error) {\n                console.log(error);\n            })\n    }\n        secondsToTime(secs)\n        {\n            let hours = Math.floor(secs / (60 * 60));\n            let divisor_for_minutes = secs % (60 * 60);\n            let minutes = Math.floor(divisor_for_minutes / 60);\n            let divisor_for_seconds = divisor_for_minutes % 60;\n            let seconds = Math.ceil(divisor_for_seconds);\n            let obj = {\n                \"h\": hours,\n                \"m\": minutes,\n                \"s\": seconds\n            };\n            return obj;\n        }\n\n        startTimer()\n        {\n            var hour = 0;\n            var minute = 0;\n            var second = 0;\n            var atime = this.state.timervalue.split(':');\n            if (atime[0].length > 0) {\n                hour = parseInt(atime[0]);\n            }\n            if (atime[1].length > 0) {\n                minute = parseInt(atime[1]);\n            }\n            if (atime[2].length > 0) {\n                second = parseInt(atime[2]);\n            }\n            this.state.seconds = stunde * 3600 + minute * 60 + sekunde;\n\n            if (this.state.seconds > 0) {\n                this.timer = setInterval(this.countDown, this.state.seconds);\n            }\n        }\n\n        countDown()\n        {\n            let seconds = this.state.seconds - 1;\n            this.setState({\n                time: this.secondsToTime(seconds),\n                seconds: seconds,\n            });\n            // Check if  zero.\n            if (seconds == 0) {\n                clearInterval(this.timer);\n            }\n        }\n\n        getTime()\n        {\n            var today = new Date();\n            var h = today.getHours();\n            var m = today.getMinutes();\n            return h + \":\" + m;\n        }\n\n        validateForm()\n        {\n            return this.state.tyretype.length > 0 && this.state.tyremix.length > 0 && this.state.number.length > 0 && this.state.orderdate.length > 0 && this.state.ordertime.length > 0 && this.state.pickuptime.length > 0;\n        }\n\n\n        validateForm1()\n        {\n            return this.state.timervalue.length > 0;\n        }\n\n        async getWheelData(){\n            this.setState({wheels: []});\n            //TODO: Datenabruf implementieren\n            this.state.wheels.push({\n                setid: setid,\n                status: status,\n                cat: cat,\n                subcat: subcat,\n                fl_id: fl_id,\n                fl_pressure,\n                fl_wheel_id,\n                fl_wheel_edit,\n                fr_id: fr_id,\n                fr_pressure,\n                fr_wheel_id,\n                fr_wheel_edit,\n                bl_id: bl_id,\n                bl_pressure,\n                bl_wheel_id,\n                bl_wheel_edit,\n                br_id: br_id,\n                br_pressure,\n                br_wheel_id,\n                br_wheel_edit,\n            })\n        }\n\n        handleAirPressureChange = event => {\n            timeoutPromise(2000, fetch(\n            'https://api.race24.cloud/wheel_cont/change_air_pressWheel', {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    id: event.target.id,\n                    air_press: event.target.value,\n                })\n            })\n            ).then(response => response.json()).then(data => {\n                if (data[1]==200) {\n                    console.log(\"Pressure Changed\")\n                    this.getWheelData().then(() => {return})\n                }\n                else {\n                    console.log(\"failed\")\n                }\n            }).catch(function (error) {\n                console.log(error);\n            })\n        }\n\n        handleWheelIDChange = event => {\n            timeoutPromise(2000, fetch(\n            'https://api.race24.cloud/wheel/set_id_tag', {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    wheel_id: event.target.id,\n                    wheel_id_tag: event.target.value,\n                })\n            })\n            ).then(response => response.json()).then(data => {\n                if (data[1]==200) {\n                    console.log(\"ID Changed\")\n                    this.getWheelData().then(() => {return})\n                }\n                else {\n                    console.log(\"failed\")\n                }\n            }).catch(function (error) {\n                console.log(error);\n            })\n        }\n\n        handleWheelEditChange = event => {\n            timeoutPromise(2000, fetch(\n            'https://api.race24.cloud/wheel/set_edit', {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    wheel_id: event.target.id,\n                    wheel_edit: event.target.value,\n                })\n            })\n            ).then(response => response.json()).then(data => {\n                if (data[1]==200) {\n                    console.log(\"Edit Changed\")\n                    this.getWheelData().then(() => {return})\n                }\n                else {\n                    console.log(\"failed\")\n                }\n            }).catch(function (error) {\n                console.log(error);\n            })\n        }\n\n        renderWheelTable(){\n            return this.state.wheels.map((wheel) => {\n                return (\n                    <tr>\n                        <td>{wheel.setid}</td>\n                        <td>{wheel.status}</td>\n                        <td>{wheel.cat}</td>\n                        <td>{wheel.subcat}</td>\n                        <td><input id={wheel.fl_id} onChange={this.handleAirPressureChange}>{this.wheel.fl_pressure}</input><input id={wheel.fr_id} onChange={this.handleAirPressureChange}>{this.wheel.fr_pressure}</input><input id={wheel.bl_id} onChange={this.handleAirPressureChange}>{this.wheel.bl_pressure}</input><input id={wheel.br_id} onChange={this.handleAirPressureChange}>{this.wheel.br_pressure}</input></td>\n                        <td><input id={wheel.fl_id} onChange={this.handleWheelIDChange}>{this.wheel.fl_wheel_id}</input><input id={wheel.fr_id} onChange={this.handleWheelIDChange}>{this.wheel.fr_wheel_id}</input><input id={wheel.bl_id} onChange={this.handleWheelIDChange}>{this.wheel.bl_wheel_id}</input><input id={wheel.br_id} onChange={this.handleWheelIDChange}>{this.wheel.br_wheel_id}</input></td>\n                        <td><input id={wheel.fl_id} onChange={this.handleWheelEditChange}>{this.wheel.fl_wheel_edit}</input><input id={wheel.fr_id} onChange={this.handleWheelEditChange}>{this.wheel.fr_wheel_edit}</input><input id={wheel.bl_id} onChange={this.handleWheelEditChange}>{this.wheel.bl_wheel_edit}</input><input id={wheel.br_id} onChange={this.handleWheelEditChange}>{this.wheel.br_wheel_edit}</input></td>\n                    </tr>\n                )\n            })\n        }\n\n        render()\n        {\n            let optionTemplate = this.state.raceList.map(v => (\n            <option value={v.id} key={v.id}>{v.name}</option>\n            ));\n\n            return (\n                <View style={container2}>\n                    <View style={container3}>\n                        <View style={container5}>\n                        <Text style={{fontSize: 40, fontWeight: 'bold', textAlign: 'center'}}>\n                        Neue Reifenbestellung anlegen\n                    </Text>\n                        </View>\n                        <View style={container4}>\n                            <Button\n                            //disabled={!this.validateFormButton1()}\n                            title=\"Slicks Cold\"\n                            onPress={this.handleSubmitButton1}\n                        />\n                        <Button\n                            //disabled={!this.validateFormButton2()}\n                            title=\"Slicks Medium\"\n                            onPress={this.handleSubmitButton2}\n                        />\n                        <Button\n                            //disabled={!this.validateFormButton3()}\n                            title=\"Slicks Hot\"\n                            onPress={this.handleSubmitButton3}\n                        />\n                        <Button\n                            //disabled={!this.validateFormButton4()}\n                            title=\"Inters Intermediate\"\n                            onPress={this.handleSubmitButton4}\n                        />\n                        <Button\n                            //disabled={!this.validateFormButton5()}\n                            title=\"Rain Dry Wet\"\n                            onPress={this.handleSubmitButton5}\n                        />\n                        <Button\n                            //disabled={!this.validateFormButton6()}\n                            title=\"Rain Heavy Wet\"\n                            onPress={this.handleSubmitButton6}\n                        />\n\n                        </View>\n                    </View>\n                <View style={container1}>\n                <View style={{justifyContent: 'flex-start'}}>\n                    <Text style={{height: 10}}> </Text>\n                    <table >\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Reifenart: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}><TextInput value={this.state.tyretype}\n                                   onChangeText={(text) => this.setState({tyretype: text})}/></td>\n                    </tr>\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Mischung: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}> <TextInput value={this.state.tyremix}\n                                    onChangeText={(text) => this.setState({tyremix: text})}/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Bezeichnung: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}><TextInput value={this.state.term}\n                                  onChangeText={(text) => this.setState({term: text})}/></td>\n                    </tr>\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Bearbeitungsvariante: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}><TextInput value={this.state.variant}\n                                   onChangeText={(text) => this.setState({variant: text})}/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Bestelldatum: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}> <TextInput value={this.state.orderdate}\n                                   placeholder='TT.MM.JJJJ' onChangeText={(date) => this.setState({orderdate: date})}/></td>\n                    </tr>\n                   <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Bestellzeit: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}> <TextInput value={this.state.ordertime}\n                                   placeholder='SS:MM' onChangeText={(time) => this.setState({ordertime: time})}/></td>\n                    </tr>\n                </table>\n                        <Text> </Text>\n                        <Button\n                            disabled={!this.validateForm()}\n                            title=\"Reifenbestellung bestätigen\"\n                            onPress={this.handleSubmit}\n                        />\n                        <Text> </Text>\n                        <Button\n                            title=\"zurück\"\n                            onPress={this.changeRace}\n                            />\n                    </View>\n                <View style={{justifyContent: 'flex-start'}}>\n                    <Text style={{fontSize: 30, fontWeight: 'bold', textAlign: 'center'}}>\n                        Reifensatz aktuell in Bearbeitung\n                    </Text>\n                     <table>\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Reifenart: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}>{this.state.tyretype1}</td>\n                    </tr>\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Mischung: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}>{this.state.tyremix1}</td>\n                    </tr>\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Bearbeitungsvariante: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}>{this.state.variant1}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Bestellzeit: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}>{this.state.ordertime1}\n                        </td>\n                    </tr>\n                     </table>\n                    <Text style={{height: '10'}}></Text>\n                    <Text style={bigStyle}>\n                        Timer\n                    </Text>\n                        <Text style={orderHeaderStyle}> Reifenbestellung abholbereit in: </Text>\n                        <TextInput\n                            style={orderTextStyle}\n                            placeholder=\" SS:MM:SS\"\n                            onChangeText={(time) => this.setState({timervalue: time})}\n                        />\n                        <button style={{width:300}}\n\n                            disabled={!this.validateForm1()}\n                            onClick={this.startTimer}>Start\n                        </button>\n                        <Text style={orderFeedbackStyle}>\n                            Stunden: {this.state.time.h} Minuten: {this.state.time.m} Sekunden: {this.state.time.s} </Text>\n                    </View>\n            </View>\n            <View>\n                <table>\n                    <tbody>\n                        <tr>\n                            <td>Setnumber</td>\n                            <td>Status</td>\n                            <td>Cat</td>\n                            <td>SubCat</td>\n                            <td>Air Pressure</td>\n                            <td>Wheel ID</td>\n                            <td>Wheel Edit</td>\n                        </tr>\n                        {this.renderWheelTable()}\n                    </tbody>\n                </table>\n            </View>\n        </View>\n            );\n        }\n    }\n\n\n    const\n    bigStyle = {\n        color: 'black',\n        fontSize: 30,\n        fontWeight: 'bold'\n    }\n\n    const\n    subStyle = {\n        fontSize: 20,\n        height: 40\n    }\n\n    const\n    emptylineStyle = {\n        height: 20,\n    }\n\n    const\n    orderHeaderStyle = {\n        height: 40,\n        width: 300,\n        margin: 3,\n        borderWidth: 1,\n        padding: 10,\n        backgroundColor: '#696969',\n        color: '#ffffff',\n        fontweight: 'bold',\n        fontSize: 16,\n        lineHeight: 16,\n        fontfamily: 'arial'\n    };\n\n    const\n    orderTextStyle = {\n        height: 30,\n        width: 300,\n        margin: 3,\n        borderWidth: 1,\n        padding: 10,\n        backgroundColor: '#d3d3d3',\n        fontSize: 14,\n        fontfamily: 'arial'\n    };\n\n    const\n    orderFeedbackStyle = {\n        height: 40,\n        width: 300,\n        margin: 3,\n        textAlign: 'center',\n        borderWidth: 1,\n        padding: 10,\n        backgroundColor: '#d3d3d3',\n        fontSize: 14\n    };\n    const container1 ={\n        padding: '50px',\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n    };\n    const container2={\n\n    };\n    const container3={\n\n\n    };\n    const container4={\n        flexDirection: 'row',\n        justifyContent: 'space-evenly',\n\n    };\n    const container5={\n        textAlign: 'center',\n        padding: '20px',\n\n    };"]},"metadata":{},"sourceType":"module"}