{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { styles } from \"./styles\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { timeoutPromise, refreshToken, getRaceList, changeWheelSet } from \"./tools\";\nimport { get_Dict_WheelOrder, getDropdown, getWheelSetInformation } from \"./tools_get_wheels\";\n\nvar NewOrderScreen = function (_React$Component) {\n  _inherits(NewOrderScreen, _React$Component);\n\n  var _super = _createSuper(NewOrderScreen);\n\n  function NewOrderScreen(props) {\n    var _this;\n\n    _classCallCheck(this, NewOrderScreen);\n\n    _this = _super.call(this, props);\n\n    _this.getRaceID = function (event) {\n      var id = event.target.value;\n      AsyncStorage.setItem(\"raceIDHelper\", event.target.value);\n\n      _this.saveRaceIDinState();\n    };\n\n    _this.changeRace = function (event) {\n      event.preventDefault();\n\n      _this.props.navigation.replace('Race');\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n      changeWheelSet(_this.state.setID, _this.state.variant, _this.state.orderduration, _this.state.term);\n      AsyncStorage.setItem('orderSetID', _this.state.setID);\n\n      _this.refresh_Buttons();\n\n      _this.getWheelData();\n    };\n\n    _this.handleSubmitButton1 = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        tyretype: \"Slicks\"\n      });\n\n      _this.setState({\n        tyremix: \"Cold\"\n      });\n\n      var helper = _this.state.dictButtons;\n      helper[0][0] = helper[0][0] - 1;\n\n      _this.setState({\n        setID: helper[0][0]\n      });\n\n      _this.setState({\n        dictButtons: helper\n      });\n    };\n\n    _this.handleSubmitButton2 = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        tyretype: \"Slicks\"\n      });\n\n      _this.setState({\n        tyremix: \"Medium\"\n      });\n\n      var helper = _this.state.dictButtons;\n      helper[1][0] = helper[1][0] - 1;\n\n      _this.setState({\n        setID: helper[1][1][helper[1][0]]\n      });\n\n      _this.setState({\n        dictButtons: helper\n      });\n    };\n\n    _this.handleSubmitButton3 = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        tyretype: \"Slicks\"\n      });\n\n      _this.setState({\n        tyremix: \"Hot\"\n      });\n\n      var helper = _this.state.dictButtons;\n      helper[2][0] = helper[2][0] - 1;\n      var index = helper[2][0];\n\n      _this.setState({\n        setID: helper[2][1][index]\n      });\n\n      _this.setState({\n        dictButtons: helper\n      });\n    };\n\n    _this.handleSubmitButton4 = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        tyretype: \"Inters\"\n      });\n\n      _this.setState({\n        tyremix: \"Intermediate\"\n      });\n\n      var helper = _this.state.dictButtons;\n      helper[3][0] = helper[3][0] - 1;\n      var index = helper[3][0];\n\n      _this.setState({\n        setID: helper[3][1][index]\n      });\n\n      _this.setState({\n        dictButtons: helper\n      });\n    };\n\n    _this.handleSubmitButton5 = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        tyretype: \"Rain\"\n      });\n\n      _this.setState({\n        tyremix: \"Dry Wet\"\n      });\n\n      var helper = _this.state.dictButtons;\n      helper[4][0] = helper[4][0] - 1;\n      var index = helper[4][0];\n\n      _this.setState({\n        setID: helper[4][1][index]\n      });\n\n      _this.setState({\n        dictButtons: helper\n      });\n    };\n\n    _this.handleSubmitButton6 = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        tyretype: \"Rain\"\n      });\n\n      _this.setState({\n        tyremix: \"Heavy Wet\"\n      });\n\n      var helper = _this.state.dictButtons;\n      helper[5][0] = helper[5][0] - 1;\n      var index = helper[5][0];\n\n      _this.setState({\n        setID: helper[5][1][index]\n      });\n\n      _this.setState({\n        dictButtons: helper\n      });\n    };\n\n    _this.handleAirPressureChange = function (event) {\n      timeoutPromise(2000, fetch('https://api.race24.cloud/wheel_cont/change_air_pressWheel', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: event.target.id,\n          air_press: event.target.value\n        })\n      })).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        if (data[1] == 200) {\n          console.log(\"Pressure Changed\");\n\n          _this.getWheelData().then(function () {\n            return;\n          });\n        } else {\n          console.log(\"failed\");\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.handleWheelIDChange = function (event) {\n      timeoutPromise(2000, fetch('https://api.race24.cloud/wheel/set_id_tag', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          wheel_id: event.target.id,\n          wheel_id_tag: event.target.value\n        })\n      })).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        if (data[1] == 200) {\n          console.log(\"ID Changed\");\n\n          _this.getWheelData().then(function () {\n            return;\n          });\n        } else {\n          console.log(\"failed\");\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.state = {\n      raceid: 0,\n      tyretype: '',\n      tyremix: '',\n      term: '',\n      variant: '',\n      tyretype1: '',\n      tyremix1: '',\n      variant1: '',\n      orderduration: 0,\n      ordertime: '',\n      ordertime1: '',\n      pickuptime: '',\n      raceList: [],\n      time: {},\n      seconds: 1800,\n      timervalue: \"\",\n      wheels: [],\n      listDropdown1: [],\n      listDropdown2: [],\n      listDropdown3: [],\n      dictButtons: [],\n      ButtonSlicks_Cold: 'Slicks Cold',\n      ButtonSlicks_Medium: 'Slicks Medium',\n      ButtonSlicks_Hot: 'Slicks Hot',\n      ButtonInter: 'Inters Intermediate',\n      ButtonRainDryWet: 'Rain DryWet',\n      ButtonRainHeavy: 'Rain HeavyWet',\n      setID: 0,\n      SetInformation: {}\n    };\n    _this.timer = 0;\n    _this.startTimer = _this.startTimer.bind(_assertThisInitialized(_this));\n    _this.countDown = _this.countDown.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(NewOrderScreen, [{\n    key: \"changeMain\",\n    value: function changeMain() {\n      this.props.navigation.goBack();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var accesstoken, raceID;\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('accesstoken'));\n\n            case 2:\n              accesstoken = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('raceID'));\n\n            case 5:\n              raceID = _context.sent;\n              getDropdown(accesstoken, raceID).then(function (racelistDropdown) {\n                console.log(racelistDropdown);\n\n                _this2.setState({\n                  listDropdown1: racelistDropdown[0]\n                });\n\n                _this2.setState({\n                  listDropdown2: racelistDropdown[1]\n                });\n\n                _this2.setState({\n                  listDropdown3: racelistDropdown[2]\n                });\n              }).catch(function (error) {\n                console.log(error);\n              });\n              console.log(2);\n              _context.next = 10;\n              return _regeneratorRuntime.awrap(this.getWheelDict());\n\n            case 10:\n              _context.next = 12;\n              return _regeneratorRuntime.awrap(this.getDropdownList());\n\n            case 12:\n              if (this.state.dictButtons.length == 6) {\n                this.setState({\n                  ButtonSlicks_Cold: 'Slicks Cold  ' + this.state.dictButtons[0][0].toString()\n                });\n                this.setState({\n                  ButtonSlicks_Medium: 'Slicks Medium  ' + this.state.dictButtons[1][0].toString()\n                });\n                this.setState({\n                  ButtonSlicks_Hot: 'Slicks Hot  ' + this.state.dictButtons[2][0].toString()\n                });\n                this.setState({\n                  ButtonInter: 'Inters Intermediate  ' + this.state.dictButtons[3][0].toString()\n                });\n                this.setState({\n                  ButtonRainDryWet: 'Rain DryWet  ' + this.state.dictButtons[4][0].toString()\n                });\n                this.setState({\n                  ButtonRainHeavy: 'Rain HeavyWet  ' + this.state.dictButtons[5][0].toString()\n                });\n                console.log(this.state.ButtonSlicks_Cold);\n              }\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getWheelDict\",\n    value: function getWheelDict() {\n      var _this3 = this;\n\n      var accesstoken, raceID;\n      return _regeneratorRuntime.async(function getWheelDict$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('accesstoken'));\n\n            case 2:\n              accesstoken = _context2.sent;\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('raceID'));\n\n            case 5:\n              raceID = _context2.sent;\n              console.log(raceID);\n              _context2.next = 9;\n              return _regeneratorRuntime.awrap(get_Dict_WheelOrder(accesstoken, raceID).then(function (DataTabular) {\n                console.log(DataTabular);\n\n                _this3.setState({\n                  dictButtons: DataTabular\n                });\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 9:\n              console.log(this.state.dictButtons);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getDropdownList\",\n    value: function getDropdownList() {\n      var _this4 = this;\n\n      var accesstoken, raceID;\n      return _regeneratorRuntime.async(function getDropdownList$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('accesstoken'));\n\n            case 2:\n              accesstoken = _context3.sent;\n              _context3.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('raceID'));\n\n            case 5:\n              raceID = _context3.sent;\n              console.log(raceID);\n              _context3.next = 9;\n              return _regeneratorRuntime.awrap(getDropdown(accesstoken, raceID).then(function (DataTabular) {\n                console.log(DataTabular);\n\n                _this4.setState({\n                  listDropdown: DataTabular\n                });\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 9:\n              console.log(this.state.listDropdown);\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getSetInformation\",\n    value: function getSetInformation() {\n      var _this5 = this;\n\n      var accesstoken, setID;\n      return _regeneratorRuntime.async(function getSetInformation$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('accesstoken'));\n\n            case 2:\n              accesstoken = _context4.sent;\n              _context4.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('orderSetID'));\n\n            case 5:\n              setID = _context4.sent;\n              console.log(raceID);\n              _context4.next = 9;\n              return _regeneratorRuntime.awrap(getWheelSetInformation(accesstoken, setID).then(function (DataTabular) {\n                console.log(DataTabular);\n\n                _this5.setState({\n                  SetInformation: DataTabular\n                });\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 9:\n              console.log(this.state.SetInformation);\n              this.ch;\n\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getSetID\",\n    value: function getSetID(event) {\n      var setid;\n      return _regeneratorRuntime.async(function getSetID$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              AsyncStorage.setItem(\"SetIDDropdown\", event.target.value);\n              _context5.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"SetID\"));\n\n            case 3:\n              setid = _context5.sent;\n              console.log(setid);\n\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"refresh_Buttons\",\n    value: function refresh_Buttons() {\n      if (this.state.dictButtons.length == 6) {\n        this.setState({\n          ButtonSlicks_Cold: 'Slicks Cold  ' + this.state.dictButtons[0][0].toString()\n        });\n        this.setState({\n          ButtonSlicks_Medium: 'Slicks Medium  ' + this.state.dictButtons[1][0].toString()\n        });\n        this.setState({\n          ButtonSlicks_Hot: 'Slicks Hot  ' + this.state.dictButtons[2][0].toString()\n        });\n        this.setState({\n          ButtonInter: 'Inters Intermediate  ' + this.state.dictButtons[3][0].toString()\n        });\n        this.setState({\n          ButtonRainDryWet: 'Rain DryWet  ' + this.state.dictButtons[4][0].toString()\n        });\n        this.setState({\n          ButtonRainHeavy: 'Rain HeavyWet  ' + this.state.dictButtons[5][0].toString()\n        });\n      }\n    }\n  }, {\n    key: \"secondsToTime\",\n    value: function secondsToTime(secs) {\n      var hours = Math.floor(secs / (60 * 60));\n      var divisor_for_minutes = secs % (60 * 60);\n      var minutes = Math.floor(divisor_for_minutes / 60);\n      var divisor_for_seconds = divisor_for_minutes % 60;\n      var seconds = Math.ceil(divisor_for_seconds);\n      var obj = {\n        \"h\": hours,\n        \"m\": minutes,\n        \"s\": seconds\n      };\n      return obj;\n    }\n  }, {\n    key: \"startTimer\",\n    value: function startTimer() {\n      var hour = 0;\n      var minute = 0;\n      var second = 0;\n      var atime = this.state.timervalue.split(':');\n\n      if (atime[0].length > 0) {\n        hour = parseInt(atime[0]);\n      }\n\n      if (atime[1].length > 0) {\n        minute = parseInt(atime[1]);\n      }\n\n      if (atime[2].length > 0) {\n        second = parseInt(atime[2]);\n      }\n\n      this.state.seconds = stunde * 3600 + minute * 60 + sekunde;\n\n      if (this.state.seconds > 0) {\n        this.timer = setInterval(this.countDown, this.state.seconds);\n      }\n    }\n  }, {\n    key: \"countDown\",\n    value: function countDown() {\n      var seconds = this.state.seconds - 1;\n      this.setState({\n        time: this.secondsToTime(seconds),\n        seconds: seconds\n      });\n\n      if (seconds == 0) {\n        clearInterval(this.timer);\n      }\n    }\n  }, {\n    key: \"getTime\",\n    value: function getTime() {\n      var today = new Date();\n      var h = today.getHours();\n      var m = today.getMinutes();\n      return h + \":\" + m;\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm() {\n      return this.state.orderduration.length > 0 && this.state.variant.length > 0;\n    }\n  }, {\n    key: \"validateFormButton1\",\n    value: function validateFormButton1() {\n      return this.state.dictButtons.length == 6 && this.state.dictButtons[0][0] > 0;\n    }\n  }, {\n    key: \"validateFormButton2\",\n    value: function validateFormButton2() {\n      return this.state.dictButtons.length == 6 && this.state.dictButtons[1][0] > 0;\n    }\n  }, {\n    key: \"validateFormButton3\",\n    value: function validateFormButton3() {\n      return this.state.dictButtons.length == 6 && this.state.dictButtons[2][0] > 0;\n    }\n  }, {\n    key: \"validateFormButton4\",\n    value: function validateFormButton4() {\n      return this.state.dictButtons.length == 6 && this.state.dictButtons[3][0] > 0;\n    }\n  }, {\n    key: \"validateFormButton5\",\n    value: function validateFormButton5() {\n      return this.state.dictButtons.length == 6 && this.state.dictButtons[4][0] > 0;\n    }\n  }, {\n    key: \"validateFormButton6\",\n    value: function validateFormButton6() {\n      return this.state.dictButtons.length == 6 && this.state.dictButtons[5][0] > 0;\n    }\n  }, {\n    key: \"validateForm1\",\n    value: function validateForm1() {\n      return this.state.timervalue.length > 0;\n    }\n  }, {\n    key: \"getWheelData\",\n    value: function getWheelData() {\n      return _regeneratorRuntime.async(function getWheelData$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              this.setState({\n                wheels: []\n              });\n              _context6.next = 3;\n              return _regeneratorRuntime.awrap(this.getSetInformation());\n\n            case 3:\n              _context6.next = 5;\n              return _regeneratorRuntime.awrap(this.state.wheels.push(this.state.SetInformation));\n\n            case 5:\n              console.log(this.state.wheels);\n\n            case 6:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"renderWheelTable\",\n    value: function renderWheelTable() {\n      var _this6 = this;\n\n      return this.state.wheels.map(function (wheel) {\n        return React.createElement(\"tr\", null, React.createElement(\"td\", null, wheel.setid), React.createElement(\"td\", null, wheel.status), React.createElement(\"td\", null, wheel.cat), React.createElement(\"td\", null, wheel.subcat), React.createElement(\"td\", null, \" input id =\", wheel.temp, \" on Change=\"), React.createElement(\"td\", null, React.createElement(\"input\", {\n          id: wheel.fl_id,\n          onChange: _this6.handleAirPressureChange\n        }, wheel.fl_pressure), React.createElement(\"input\", {\n          id: wheel.fr_id,\n          onChange: _this6.handleAirPressureChange\n        }, wheel.fr_pressure), React.createElement(\"input\", {\n          id: wheel.bl_id,\n          onChange: _this6.handleAirPressureChange\n        }, wheel.bl_pressure), React.createElement(\"input\", {\n          id: wheel.br_id,\n          onChange: _this6.handleAirPressureChange\n        }, wheel.br_pressure)), React.createElement(\"td\", null, React.createElement(\"input\", {\n          id: wheel.fl_id,\n          onChange: _this6.handleWheelIDChange\n        }, wheel.fl_wheel_id), React.createElement(\"input\", {\n          id: wheel.fr_id,\n          onChange: _this6.handleWheelIDChange\n        }, wheel.fr_wheel_id), React.createElement(\"input\", {\n          id: wheel.bl_id,\n          onChange: _this6.handleWheelIDChange\n        }, wheel.bl_wheel_id), React.createElement(\"input\", {\n          id: wheel.br_id,\n          onChange: _this6.handleWheelIDChange\n        }, wheel.br_wheel_id)));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n\n      var optionTemplate = this.state.raceList.map(function (v) {\n        return React.createElement(\"option\", {\n          value: v.id,\n          key: v.id\n        }, v.name);\n      });\n      return React.createElement(View, {\n        style: container2\n      }, React.createElement(View, {\n        style: container3\n      }, React.createElement(View, {\n        style: container5\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 40,\n          fontWeight: 'bold',\n          textAlign: 'center'\n        }\n      }, \"Neue Reifenbestellung anlegen\")), React.createElement(View, {\n        style: container4\n      }, React.createElement(Button, {\n        disabled: !this.validateFormButton1(),\n        title: this.state.ButtonSlicks_Cold,\n        onPress: this.handleSubmitButton1\n      }), React.createElement(Button, {\n        disabled: !this.validateFormButton2(),\n        title: this.state.ButtonSlicks_Medium,\n        onPress: this.handleSubmitButton2\n      }), React.createElement(Button, {\n        disabled: !this.validateFormButton3(),\n        title: this.state.ButtonSlicks_Hot,\n        onPress: this.handleSubmitButton3\n      }), React.createElement(Button, {\n        disabled: !this.validateFormButton4(),\n        title: this.state.ButtonInter,\n        onPress: this.handleSubmitButton4\n      }), React.createElement(Button, {\n        disabled: !this.validateFormButton5(),\n        title: this.state.ButtonRainDryWet,\n        onPress: this.handleSubmitButton5\n      }), React.createElement(Button, {\n        disabled: !this.validateFormButton6(),\n        title: this.state.ButtonRainHeavy,\n        onPress: this.handleSubmitButton6\n      }))), React.createElement(View, {\n        style: container1\n      }, React.createElement(View, {\n        style: {\n          justifyContent: 'flex-start'\n        }\n      }, React.createElement(Text, {\n        style: {\n          height: 10\n        }\n      }, \" \"), React.createElement(\"table\", null, React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Reifenart: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, React.createElement(TextInput, {\n        value: this.state.tyretype,\n        onChangeText: function onChangeText(text) {\n          return _this7.setState({\n            tyretype: text\n          });\n        }\n      }))), React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Mischung: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, \" \", React.createElement(TextInput, {\n        value: this.state.tyremix,\n        onChangeText: function onChangeText(text) {\n          return _this7.setState({\n            tyremix: text\n          });\n        }\n      }))), React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Bezeichnung: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, React.createElement(TextInput, {\n        value: this.state.term,\n        onChangeText: function onChangeText(text) {\n          return _this7.setState({\n            term: text\n          });\n        }\n      }))), React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Bearbeitungsvariante: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, React.createElement(TextInput, {\n        value: this.state.variant,\n        onChangeText: function onChangeText(text) {\n          return _this7.setState({\n            variant: text\n          });\n        }\n      }))), React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Bestelldauer: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, \" \", React.createElement(TextInput, {\n        value: this.state.orderduration,\n        placeholder: \"TT.MM.JJJJ\",\n        onChangeText: function onChangeText(date) {\n          return _this7.setState({\n            orderduration: date\n          });\n        }\n      }))), React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Bestellzeit: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, \" \", React.createElement(TextInput, {\n        value: this.state.ordertime,\n        placeholder: \"SS:MM\",\n        onChangeText: function onChangeText(time) {\n          return _this7.setState({\n            ordertime: time\n          });\n        }\n      })))), React.createElement(Text, null, \" \"), React.createElement(Button, {\n        disabled: !this.validateForm(),\n        title: \"Reifenbestellung best\\xE4tigen\",\n        onPress: this.handleSubmit\n      }), React.createElement(Text, null, \" \"), React.createElement(Button, {\n        title: \"zur\\xFCck\",\n        onPress: this.changeRace\n      })), React.createElement(View, {\n        style: {\n          justifyContent: 'flex-start'\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 30,\n          fontWeight: 'bold',\n          textAlign: 'center'\n        }\n      }, \"Reifensatz aktuell in Bearbeitung\"), React.createElement(\"table\", null, React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Reifenart: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, this.state.tyretype1)), React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Mischung: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, this.state.tyremix1)), React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Bearbeitungsvariante: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, this.state.variant1)), React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Bestellzeit: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, this.state.ordertime1))), React.createElement(Text, {\n        style: {\n          height: '10'\n        }\n      }), React.createElement(Text, {\n        style: bigStyle\n      }, \"Timer\"), React.createElement(Text, {\n        style: orderHeaderStyle\n      }, \" Reifenbestellung abholbereit in: \"), React.createElement(TextInput, {\n        style: orderTextStyle,\n        placeholder: \" SS:MM:SS\",\n        onChangeText: function onChangeText(time) {\n          return _this7.setState({\n            timervalue: time\n          });\n        }\n      }), React.createElement(\"button\", {\n        style: {\n          width: 300\n        },\n        disabled: !this.validateForm1(),\n        onClick: this.startTimer\n      }, \"Start\"), React.createElement(Text, {\n        style: orderFeedbackStyle\n      }, \"Stunden: \", this.state.time.h, \" Minuten: \", this.state.time.m, \" Sekunden: \", this.state.time.s, \" \"))), React.createElement(View, null, React.createElement(\"table\", null, React.createElement(\"tbody\", null, React.createElement(\"tr\", null, React.createElement(\"td\", null, \"Setnumber\"), React.createElement(\"td\", null, \"Status\"), React.createElement(\"td\", null, \"Cat\"), React.createElement(\"td\", null, \"SubCat\"), React.createElement(\"td\", null, \"Temp\"), React.createElement(\"td\", null, \"Air Pressure\"), React.createElement(\"td\", null, \"Wheel ID\")), this.renderWheelTable()))));\n    }\n  }]);\n\n  return NewOrderScreen;\n}(React.Component);\n\nexport { NewOrderScreen as default };\nvar bigStyle = {\n  color: 'black',\n  fontSize: 30,\n  fontWeight: 'bold'\n};\nvar subStyle = {\n  fontSize: 20,\n  height: 40\n};\nvar emptylineStyle = {\n  height: 20\n};\nvar orderHeaderStyle = {\n  height: 40,\n  width: 300,\n  margin: 3,\n  borderWidth: 1,\n  padding: 10,\n  backgroundColor: '#696969',\n  color: '#ffffff',\n  fontweight: 'bold',\n  fontSize: 16,\n  lineHeight: 16,\n  fontfamily: 'arial'\n};\nvar orderTextStyle = {\n  height: 30,\n  width: 300,\n  margin: 3,\n  borderWidth: 1,\n  padding: 10,\n  backgroundColor: '#d3d3d3',\n  fontSize: 14,\n  fontfamily: 'arial'\n};\nvar orderFeedbackStyle = {\n  height: 40,\n  width: 300,\n  margin: 3,\n  textAlign: 'center',\n  borderWidth: 1,\n  padding: 10,\n  backgroundColor: '#d3d3d3',\n  fontSize: 14\n};\nvar container1 = {\n  padding: '50px',\n  flexDirection: 'row',\n  justifyContent: 'space-around'\n};\nvar container2 = {};\nvar container3 = {};\nvar container4 = {\n  flexDirection: 'row',\n  justifyContent: 'space-evenly'\n};\nvar container5 = {\n  textAlign: 'center',\n  padding: '20px'\n};","map":{"version":3,"sources":["/home/toni/PycharmProjects/PropraSource/frontend/NewOrder.js"],"names":["React","styles","AsyncStorage","timeoutPromise","refreshToken","getRaceList","changeWheelSet","get_Dict_WheelOrder","getDropdown","getWheelSetInformation","NewOrderScreen","props","getRaceID","event","id","target","value","setItem","saveRaceIDinState","changeRace","preventDefault","navigation","replace","handleSubmit","state","setID","variant","orderduration","term","refresh_Buttons","getWheelData","handleSubmitButton1","setState","tyretype","tyremix","helper","dictButtons","handleSubmitButton2","handleSubmitButton3","index","handleSubmitButton4","handleSubmitButton5","handleSubmitButton6","handleAirPressureChange","fetch","method","headers","body","JSON","stringify","air_press","then","response","json","data","console","log","catch","error","handleWheelIDChange","wheel_id","wheel_id_tag","raceid","tyretype1","tyremix1","variant1","ordertime","ordertime1","pickuptime","raceList","time","seconds","timervalue","wheels","listDropdown1","listDropdown2","listDropdown3","ButtonSlicks_Cold","ButtonSlicks_Medium","ButtonSlicks_Hot","ButtonInter","ButtonRainDryWet","ButtonRainHeavy","SetInformation","timer","startTimer","bind","countDown","goBack","getItem","accesstoken","raceID","racelistDropdown","getWheelDict","getDropdownList","length","toString","DataTabular","listDropdown","ch","setid","secs","hours","Math","floor","divisor_for_minutes","minutes","divisor_for_seconds","ceil","obj","hour","minute","second","atime","split","parseInt","stunde","sekunde","setInterval","secondsToTime","clearInterval","today","Date","h","getHours","m","getMinutes","getSetInformation","push","map","wheel","status","cat","subcat","temp","fl_id","fl_pressure","fr_id","fr_pressure","bl_id","bl_pressure","br_id","br_pressure","fl_wheel_id","fr_wheel_id","bl_wheel_id","br_wheel_id","optionTemplate","v","name","container2","container3","container5","fontSize","fontWeight","textAlign","container4","validateFormButton1","validateFormButton2","validateFormButton3","validateFormButton4","validateFormButton5","validateFormButton6","container1","justifyContent","height","padding","color","fontFamily","border","borderColor","width","text","date","validateForm","bigStyle","orderHeaderStyle","orderTextStyle","validateForm1","orderFeedbackStyle","s","renderWheelTable","Component","subStyle","emptylineStyle","margin","borderWidth","backgroundColor","fontweight","lineHeight","fontfamily","flexDirection"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Button, Text, TextInput, ToastAndroid, View} from \"react-native\";\nimport {styles} from \"./styles\"\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport {timeoutPromise, refreshToken,getRaceList,changeWheelSet} from \"./tools\";\nimport {get_Dict_WheelOrder, getDropdown,getWheelSetInformation} from \"./tools_get_wheels\";\n\n\nexport default class NewOrderScreen extends React.Component {\n   constructor(props) {\n        super(props);\n        this.state = {\n            raceid: 0,\n            tyretype: '',\n            tyremix: '',\n            term: '',\n            variant: '',\n            tyretype1: '',\n            tyremix1: '',\n            variant1: '',\n            orderduration: 0,\n            ordertime: '',\n            ordertime1: '',\n            pickuptime: '',\n            raceList: [],\n            time: {},\n            seconds: 1800,\n            timervalue: \"\",\n            wheels: [],\n            listDropdown1:[],\n            listDropdown2:[],\n            listDropdown3:[],\n            dictButtons:[],\n            ButtonSlicks_Cold: 'Slicks Cold',\n            ButtonSlicks_Medium: 'Slicks Medium',\n            ButtonSlicks_Hot: 'Slicks Hot',\n            ButtonInter: 'Inters Intermediate',\n            ButtonRainDryWet: 'Rain DryWet',\n            ButtonRainHeavy: 'Rain HeavyWet',\n            setID :0,\n            SetInformation:{},\n        }\n        this.timer = 0;\n        this.startTimer = this.startTimer.bind(this);\n        this.countDown = this.countDown.bind(this);\n    }\n\n    changeMain(){\n        this.props.navigation.goBack();\n    }\n\n    // get Data\n    async componentDidMount(){\n        const accesstoken = await AsyncStorage.getItem('accesstoken');\n        const raceID = await AsyncStorage.getItem('raceID');\n        getDropdown(accesstoken,raceID).then(racelistDropdown => {\n            console.log(racelistDropdown);\n            this.setState({listDropdown1: racelistDropdown[0]});\n            this.setState({listDropdown2: racelistDropdown[1]});\n            this.setState({listDropdown3: racelistDropdown[2]});\n        }).catch(function (error) {\n            console.log(error);\n        })\n\n       console.log(2)\n        await this.getWheelDict();\n        await this.getDropdownList();\n        if (this.state.dictButtons.length==6){\n            this.setState({ButtonSlicks_Cold: 'Slicks Cold  '+this.state.dictButtons[0][0].toString()});\n            this.setState({ButtonSlicks_Medium: 'Slicks Medium  '+this.state.dictButtons[1][0].toString()});\n            this.setState({ButtonSlicks_Hot: 'Slicks Hot  '+this.state.dictButtons[2][0].toString()});\n            this.setState({ButtonInter: 'Inters Intermediate  '+this.state.dictButtons[3][0].toString()});\n            this.setState({ButtonRainDryWet: 'Rain DryWet  '+this.state.dictButtons[4][0].toString()});\n            this.setState({ButtonRainHeavy: 'Rain HeavyWet  '+this.state.dictButtons[5][0].toString()});\n\n            console.log(this.state.ButtonSlicks_Cold)\n\n        }\n    }\n\n    //get Wheel Data\n    async getWheelDict(){\n       const accesstoken = await AsyncStorage.getItem('accesstoken');\n       const raceID = await AsyncStorage.getItem('raceID');\n       //const raceID = await AsyncStorage.getItem('raceID');\n       console.log(raceID)\n       await get_Dict_WheelOrder(accesstoken, raceID).then(DataTabular => {\n                console.log(DataTabular);\n                this.setState({dictButtons: DataTabular});\n            }).catch(function (error) {\n                console.log(error);\n            })\n        console.log(this.state.dictButtons)\n    }\n    // get Dropdown list free,order,used\n    async getDropdownList(){\n       const accesstoken = await AsyncStorage.getItem('accesstoken');\n       const raceID = await AsyncStorage.getItem('raceID');\n       //const raceID = await AsyncStorage.getItem('raceID');\n       console.log(raceID)\n       await getDropdown(accesstoken, raceID).then(DataTabular => {\n                console.log(DataTabular);\n                this.setState({listDropdown: DataTabular});\n            }).catch(function (error) {\n                console.log(error);\n            })\n        console.log(this.state.listDropdown)\n    }\n\n    async getSetInformation(){\n        const accesstoken = await AsyncStorage.getItem('accesstoken');\n        const setID = await AsyncStorage.getItem('orderSetID');\n        //const raceID = await AsyncStorage.getItem('raceID');\n        console.log(raceID)\n        await getWheelSetInformation(accesstoken, setID).then(DataTabular => {\n            console.log(DataTabular);\n            this.setState({SetInformation: DataTabular});\n        }).catch(function (error) {\n            console.log(error);\n        })\n        console.log(this.state.SetInformation)\n        this.ch\n    }\n\n    async getSetID(event){\n        AsyncStorage.setItem(\"SetIDDropdown\",event.target.value);\n        const setid = await AsyncStorage.getItem(\"SetID\");\n        console.log(setid);\n    }\n\n\n    getRaceID = event => {\n        const id = event.target.value;\n        AsyncStorage.setItem(\"raceIDHelper\", event.target.value);\n        this.saveRaceIDinState();\n    }\n\n\n\n    refresh_Buttons(){\n        if (this.state.dictButtons.length==6) {\n            this.setState({ButtonSlicks_Cold: 'Slicks Cold  ' + this.state.dictButtons[0][0].toString()});\n            this.setState({ButtonSlicks_Medium: 'Slicks Medium  ' + this.state.dictButtons[1][0].toString()});\n            this.setState({ButtonSlicks_Hot: 'Slicks Hot  ' + this.state.dictButtons[2][0].toString()});\n            this.setState({ButtonInter: 'Inters Intermediate  ' + this.state.dictButtons[3][0].toString()});\n            this.setState({ButtonRainDryWet: 'Rain DryWet  ' + this.state.dictButtons[4][0].toString()});\n            this.setState({ButtonRainHeavy: 'Rain HeavyWet  ' + this.state.dictButtons[5][0].toString()});\n        }\n        }\n\n\n    changeRace = event => {\n        event.preventDefault();\n        this.props.navigation.replace('Race');\n    }\n     handleSubmit = event => {\n        event.preventDefault();\n        changeWheelSet(this.state.setID,this.state.variant,this.state.orderduration,this.state.term);\n        AsyncStorage.setItem('orderSetID',this.state.setID);\n        this.refresh_Buttons();\n        this.getWheelData();\n    }\n\n\n    handleSubmitButton1 = event => {\n        event.preventDefault();\n        this.setState({tyretype: \"Slicks\"});\n        this.setState({tyremix: \"Cold\"});\n        let helper = this.state.dictButtons;\n        helper[0][0]= helper[0][0]-1;\n        this.setState({setID:helper[0][0]});\n        this.setState({dictButtons:helper});\n    }\n    handleSubmitButton2 = event => {\n        event.preventDefault();\n        this.setState({tyretype: \"Slicks\"});\n        this.setState({tyremix: \"Medium\"});\n        let helper = this.state.dictButtons;\n        helper[1][0]= helper[1][0]-1;\n        this.setState({setID: helper[1][1][helper[1][0]]});\n        this.setState({dictButtons: helper});\n\n\n    }\n    handleSubmitButton3 = event => {\n        event.preventDefault();\n        this.setState({tyretype: \"Slicks\"});\n        this.setState({tyremix: \"Hot\"});\n        let helper = this.state.dictButtons;\n        helper[2][0]= helper[2][0]-1;\n        const index = helper[2][0]\n        this.setState({setID:helper[2][1][index]});\n        this.setState({dictButtons:helper});\n    }\n    handleSubmitButton4 = event => {\n        event.preventDefault();\n        this.setState({tyretype: \"Inters\"});\n        this.setState({tyremix: \"Intermediate\"});\n        let helper = this.state.dictButtons;\n        helper[3][0]= helper[3][0]-1;\n        const index = helper[3][0]\n        this.setState({setID:helper[3][1][index]});\n        this.setState({dictButtons:helper});\n    }\n    handleSubmitButton5 = event => {\n        event.preventDefault();\n        this.setState({tyretype: \"Rain\"});\n        this.setState({tyremix: \"Dry Wet\"});\n        let helper = this.state.dictButtons;\n        helper[4][0]= helper[4][0]-1;\n        const index = helper[4][0]\n        this.setState({setID:helper[4][1][index]});\n        this.setState({dictButtons:helper});\n    }\n    handleSubmitButton6 = event => {\n        event.preventDefault();\n        this.setState({tyretype: \"Rain\"});\n        this.setState({tyremix: \"Heavy Wet\"});\n        let helper = this.state.dictButtons;\n        helper[5][0]= helper[5][0]-1;\n        const index = helper[5][0]\n        this.setState({setID:helper[5][1][index]});\n        this.setState({dictButtons:helper});\n    }\n\n\n        secondsToTime(secs)\n        {\n            let hours = Math.floor(secs / (60 * 60));\n            let divisor_for_minutes = secs % (60 * 60);\n            let minutes = Math.floor(divisor_for_minutes / 60);\n            let divisor_for_seconds = divisor_for_minutes % 60;\n            let seconds = Math.ceil(divisor_for_seconds);\n            let obj = {\n                \"h\": hours,\n                \"m\": minutes,\n                \"s\": seconds\n            };\n            return obj;\n        }\n\n        startTimer()\n        {\n            var hour = 0;\n            var minute = 0;\n            var second = 0;\n            var atime = this.state.timervalue.split(':');\n            if (atime[0].length > 0) {\n                hour = parseInt(atime[0]);\n            }\n            if (atime[1].length > 0) {\n                minute = parseInt(atime[1]);\n            }\n            if (atime[2].length > 0) {\n                second = parseInt(atime[2]);\n            }\n            this.state.seconds = stunde * 3600 + minute * 60 + sekunde;\n\n            if (this.state.seconds > 0) {\n                this.timer = setInterval(this.countDown, this.state.seconds);\n            }\n        }\n\n        countDown()\n        {\n            let seconds = this.state.seconds - 1;\n            this.setState({\n                time: this.secondsToTime(seconds),\n                seconds: seconds,\n            });\n            // Check if  zero.\n            if (seconds == 0) {\n                clearInterval(this.timer);\n            }\n        }\n\n        getTime()\n        {\n            var today = new Date();\n            var h = today.getHours();\n            var m = today.getMinutes();\n            return h + \":\" + m;\n        }\n\n        validateForm()\n        {\n            return this.state.orderduration.length > 0 && this.state.variant.length > 0 ;\n        }\n\n        validateFormButton1(){\n       return this.state.dictButtons.length==6 && this.state.dictButtons[0][0]>0;\n        }\n        validateFormButton2(){\n       return this.state.dictButtons.length==6 &&this.state.dictButtons[1][0]>0;\n        }\n        validateFormButton3(){\n       return this.state.dictButtons.length==6 && this.state.dictButtons[2][0]>0;\n        }\n        validateFormButton4(){\n       return this.state.dictButtons.length==6 && this.state.dictButtons[3][0]>0;\n        }validateFormButton5(){\n       return this.state.dictButtons.length==6 && this.state.dictButtons[4][0]>0;\n        }validateFormButton6(){\n       return this.state.dictButtons.length==6 && this.state.dictButtons[5][0]>0;\n        }\n\n\n\n        validateForm1()\n        {\n            return this.state.timervalue.length > 0;\n        }\n\n        async getWheelData(){\n            this.setState({wheels: []});\n            await this.getSetInformation();\n            \n            //TODO: Datenabruf implementieren\n            await this.state.wheels.push(this.state.SetInformation);\n            console.log(this.state.wheels)\n        }\n\n        handleAirPressureChange = event => {\n            timeoutPromise(2000, fetch(\n            'https://api.race24.cloud/wheel_cont/change_air_pressWheel', {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    id: event.target.id,\n                    air_press: event.target.value,\n                })\n            })\n            ).then(response => response.json()).then(data => {\n                if (data[1]==200) {\n                    console.log(\"Pressure Changed\")\n                    this.getWheelData().then(() => {return})\n                }\n                else {\n                    console.log(\"failed\")\n                }\n            }).catch(function (error) {\n                console.log(error);\n            })\n        }\n\n        handleWheelIDChange = event => {\n            timeoutPromise(2000, fetch(\n            'https://api.race24.cloud/wheel/set_id_tag', {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    wheel_id: event.target.id,\n                    wheel_id_tag: event.target.value,\n                })\n            })\n            ).then(response => response.json()).then(data => {\n                if (data[1]==200) {\n                    console.log(\"ID Changed\")\n                    this.getWheelData().then(() => {return})\n                }\n                else {\n                    console.log(\"failed\")\n                }\n            }).catch(function (error) {\n                console.log(error);\n            })\n        }\n\n\n        renderWheelTable(){\n            return this.state.wheels.map((wheel) => {\n                return (\n                    <tr>\n                        <td>{wheel.setid}</td>\n                        <td>{wheel.status}</td>\n                        <td>{wheel.cat}</td>\n                        <td>{wheel.subcat}</td>\n                        <td> input id ={wheel.temp} on Change={}</td>\n                        <td><input id={wheel.fl_id} onChange={this.handleAirPressureChange}>{wheel.fl_pressure}</input><input id={wheel.fr_id} onChange={this.handleAirPressureChange}>{wheel.fr_pressure}</input><input id={wheel.bl_id} onChange={this.handleAirPressureChange}>{wheel.bl_pressure}</input><input id={wheel.br_id} onChange={this.handleAirPressureChange}>{wheel.br_pressure}</input></td>\n                        <td><input id={wheel.fl_id} onChange={this.handleWheelIDChange}>{wheel.fl_wheel_id}</input><input id={wheel.fr_id} onChange={this.handleWheelIDChange}>{wheel.fr_wheel_id}</input><input id={wheel.bl_id} onChange={this.handleWheelIDChange}>{wheel.bl_wheel_id}</input><input id={wheel.br_id} onChange={this.handleWheelIDChange}>{wheel.br_wheel_id}</input></td>\n                    </tr>\n                )\n            })\n        }\n\n        render()\n        {\n            let optionTemplate = this.state.raceList.map(v => (\n            <option value={v.id} key={v.id}>{v.name}</option>\n            ));\n\n            return (\n                <View style={container2}>\n                    <View style={container3}>\n                        <View style={container5}>\n                        <Text style={{fontSize: 40, fontWeight: 'bold', textAlign: 'center'}}>\n                        Neue Reifenbestellung anlegen\n                    </Text>\n                        </View>\n                        <View style={container4}>\n                            <Button\n                            disabled={!this.validateFormButton1()}\n                            title= {this.state.ButtonSlicks_Cold}\n                            onPress={this.handleSubmitButton1}\n                        />\n                        <Button\n                            disabled={!this.validateFormButton2()}\n                            title= {this.state.ButtonSlicks_Medium}\n                            onPress={this.handleSubmitButton2}\n                        />\n                        <Button\n                            disabled={!this.validateFormButton3()}\n                            title= {this.state.ButtonSlicks_Hot}\n                            onPress={this.handleSubmitButton3}\n                        />\n                        <Button\n                            disabled={!this.validateFormButton4()}\n                            title={this.state.ButtonInter}\n                            onPress={this.handleSubmitButton4}\n                        />\n                        <Button\n                            disabled={!this.validateFormButton5()}\n                            title= {this.state.ButtonRainDryWet}\n                            onPress={this.handleSubmitButton5}\n                        />\n                        <Button\n                            disabled={!this.validateFormButton6()}\n                            title={this.state.ButtonRainHeavy}\n                            onPress={this.handleSubmitButton6}\n                        />\n\n                        </View>\n                    </View>\n                <View style={container1}>\n                <View style={{justifyContent: 'flex-start'}}>\n                    <Text style={{height: 10}}> </Text>\n                    <table >\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Reifenart: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}><TextInput value={this.state.tyretype}\n                                   onChangeText={(text) => this.setState({tyretype: text})}/></td>\n                    </tr>\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Mischung: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}> <TextInput value={this.state.tyremix}\n                                    onChangeText={(text) => this.setState({tyremix: text})}/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Bezeichnung: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}><TextInput value={this.state.term}\n                                  onChangeText={(text) => this.setState({term: text})}/></td>\n                    </tr>\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Bearbeitungsvariante: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}><TextInput value={this.state.variant}\n                                   onChangeText={(text) => this.setState({variant: text})}/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Bestelldauer: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}> <TextInput value={this.state.orderduration}\n                                   placeholder='TT.MM.JJJJ' onChangeText={(date) => this.setState({orderduration: date})}/></td>\n                    </tr>\n                   <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Bestellzeit: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}> <TextInput value={this.state.ordertime}\n                                   placeholder='SS:MM' onChangeText={(time) => this.setState({ordertime: time})}/></td>\n                    </tr>\n                </table>\n                        <Text> </Text>\n                        <Button\n                            disabled={!this.validateForm()}\n                            title=\"Reifenbestellung bestätigen\"\n                            onPress={this.handleSubmit}\n                        />\n                        <Text> </Text>\n                        <Button\n                            title=\"zurück\"\n                            onPress={this.changeRace}\n                            />\n                    </View>\n                <View style={{justifyContent: 'flex-start'}}>\n                    <Text style={{fontSize: 30, fontWeight: 'bold', textAlign: 'center'}}>\n                        Reifensatz aktuell in Bearbeitung\n                    </Text>\n                     <table>\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Reifenart: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}>{this.state.tyretype1}</td>\n                    </tr>\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Mischung: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}>{this.state.tyremix1}</td>\n                    </tr>\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Bearbeitungsvariante: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}>{this.state.variant1}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Bestellzeit: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}>{this.state.ordertime1}\n                        </td>\n                    </tr>\n                     </table>\n                    <Text style={{height: '10'}}></Text>\n                    <Text style={bigStyle}>\n                        Timer\n                    </Text>\n                        <Text style={orderHeaderStyle}> Reifenbestellung abholbereit in: </Text>\n                        <TextInput\n                            style={orderTextStyle}\n                            placeholder=\" SS:MM:SS\"\n                            onChangeText={(time) => this.setState({timervalue: time})}\n                        />\n                        <button style={{width:300}}\n\n                            disabled={!this.validateForm1()}\n                            onClick={this.startTimer}>Start\n                        </button>\n                        <Text style={orderFeedbackStyle}>\n                            Stunden: {this.state.time.h} Minuten: {this.state.time.m} Sekunden: {this.state.time.s} </Text>\n                    </View>\n            </View>\n            <View>\n                <table>\n                    <tbody>\n                        <tr>\n                            <td>Setnumber</td>\n                            <td>Status</td>\n                            <td>Cat</td>\n                            <td>SubCat</td>\n                            <td>Temp</td>\n                            <td>Air Pressure</td>\n                            <td>Wheel ID</td>\n                        </tr>\n                        {this.renderWheelTable()}\n                    </tbody>\n                </table>\n            </View>\n        </View>\n            );\n        }\n    }\n\n\n    const\n    bigStyle = {\n        color: 'black',\n        fontSize: 30,\n        fontWeight: 'bold'\n    }\n\n    const\n    subStyle = {\n        fontSize: 20,\n        height: 40\n    }\n\n    const\n    emptylineStyle = {\n        height: 20,\n    }\n\n    const\n    orderHeaderStyle = {\n        height: 40,\n        width: 300,\n        margin: 3,\n        borderWidth: 1,\n        padding: 10,\n        backgroundColor: '#696969',\n        color: '#ffffff',\n        fontweight: 'bold',\n        fontSize: 16,\n        lineHeight: 16,\n        fontfamily: 'arial'\n    };\n\n    const\n    orderTextStyle = {\n        height: 30,\n        width: 300,\n        margin: 3,\n        borderWidth: 1,\n        padding: 10,\n        backgroundColor: '#d3d3d3',\n        fontSize: 14,\n        fontfamily: 'arial'\n    };\n\n    const\n    orderFeedbackStyle = {\n        height: 40,\n        width: 300,\n        margin: 3,\n        textAlign: 'center',\n        borderWidth: 1,\n        padding: 10,\n        backgroundColor: '#d3d3d3',\n        fontSize: 14\n    };\n    const container1 ={\n        padding: '50px',\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n    };\n    const container2={\n\n    };\n    const container3={\n\n\n    };\n    const container4={\n        flexDirection: 'row',\n        justifyContent: 'space-evenly',\n\n    };\n    const container5={\n        textAlign: 'center',\n        padding: '20px',\n\n    };"]},"metadata":{},"sourceType":"module"}