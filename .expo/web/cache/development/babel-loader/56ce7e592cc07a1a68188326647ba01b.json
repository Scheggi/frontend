{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { timeoutPromise, getWeatherTab, refreshToken, getRaceList } from \"./tools\";\nimport Table from \"./Table\";\n\nvar HelpScreen = function (_React$Component) {\n  _inherits(HelpScreen, _React$Component);\n\n  var _super = _createSuper(HelpScreen);\n\n  function HelpScreen(props) {\n    var _this;\n\n    _classCallCheck(this, HelpScreen);\n\n    _this = _super.call(this, props);\n\n    _this.getRaceID = function (event) {\n      var id = event.target.value;\n      AsyncStorage.setItem(\"raceIDHelper\", event.target.value);\n\n      _this.saveRaceIDinState();\n    };\n\n    _this.changeLogout = function (event) {\n      event.preventDefault();\n\n      _this.props.navigation.replace('Logout');\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      _this.sendNewWeatherRequest(_this.state.temp_air, _this.state.temp_ground, _this.state.weather_des);\n    };\n\n    _this.state = {\n      temp_ground: 0.0,\n      temp_air: 0.0,\n      weather_des: \"\",\n      datetime: \"\",\n      raceList: [],\n      dataWeather: [],\n      time: {},\n      seconds: 1800,\n      raceid: 0\n    };\n    _this.timer = 0;\n    _this.startTimer = _this.startTimer.bind(_assertThisInitialized(_this));\n    _this.countDown = _this.countDown.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(HelpScreen, [{\n    key: \"secondsToTime\",\n    value: function secondsToTime(secs) {\n      var hours = Math.floor(secs / (60 * 60));\n      var divisor_for_minutes = secs % (60 * 60);\n      var minutes = Math.floor(divisor_for_minutes / 60);\n      var divisor_for_seconds = divisor_for_minutes % 60;\n      var seconds = Math.ceil(divisor_for_seconds);\n      var obj = {\n        \"h\": hours,\n        \"m\": minutes,\n        \"s\": seconds\n      };\n      return obj;\n    }\n  }, {\n    key: \"startTimer\",\n    value: function startTimer() {\n      if (this.timer == 0 && this.state.seconds > 0) {\n        this.timer = setInterval(this.countDown, 1000);\n      }\n    }\n  }, {\n    key: \"countDown\",\n    value: function countDown() {\n      var seconds = this.state.seconds - 1;\n      this.setState({\n        time: this.secondsToTime(seconds),\n        seconds: seconds\n      });\n\n      if (seconds == 0) {\n        clearInterval(this.timer);\n      }\n    }\n  }, {\n    key: \"saveRaceIDinState\",\n    value: function saveRaceIDinState() {\n      var id;\n      return _regeneratorRuntime.async(function saveRaceIDinState$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"raceIDHelper\"));\n\n            case 2:\n              id = _context.sent;\n              this.setState({\n                raceid: id\n              });\n              console.log(this.state.raceid);\n              this.getWeatherData(id);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getWeatherData\",\n    value: function getWeatherData(raceID) {\n      var _this2 = this;\n\n      var accesstoken;\n      return _regeneratorRuntime.async(function getWeatherData$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('accesstoken'));\n\n            case 2:\n              accesstoken = _context2.sent;\n              console.log(raceID);\n              console.log(accesstoken);\n              getWeatherTab(accesstoken, raceID).then(function (DataTabular) {\n                console.log(DataTabular);\n\n                _this2.setState({\n                  dataWeather: DataTabular\n                });\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      var timeLeftVar, accesstoken;\n      return _regeneratorRuntime.async(function componentDidMount$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              timeLeftVar = this.secondsToTime(this.state.seconds);\n              this.setState({\n                time: timeLeftVar\n              });\n              _context3.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('accesstoken'));\n\n            case 4:\n              accesstoken = _context3.sent;\n              getRaceList(accesstoken).then(function (racelistDropdown) {\n                console.log(racelistDropdown);\n\n                _this3.setState({\n                  raceList: racelistDropdown\n                });\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm() {\n      return this.state.weather_des.length > 0 && this.state.raceid != 0;\n    }\n  }, {\n    key: \"sendNewWeatherRequest\",\n    value: function sendNewWeatherRequest(temp_air, temp_ground, weather_des) {\n      var id;\n      return _regeneratorRuntime.async(function sendNewWeatherRequest$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              console.log(temp_air);\n              _context4.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"raceIDHelper\"));\n\n            case 3:\n              id = _context4.sent;\n              timeoutPromise(2000, fetch('https://api.race24.cloud/user/weather/create', {\n                method: 'POST',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  raceID: id,\n                  temp_air: parseFloat(temp_air),\n                  temp_ground: parseFloat(temp_ground),\n                  weather_des: weather_des\n                })\n              })).then(function (response) {\n                return response.json();\n              }).then(console.log(\"success\")).catch(function (error) {\n                console.log(error);\n              });\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var optionTemplate = this.state.raceList.map(function (v) {\n        return React.createElement(\"option\", {\n          value: v.id,\n          key: v.id\n        }, v.name);\n      });\n      window.addEventListener('load', function () {\n        setTimeout(function () {\n          var select = document.getElementById('option');\n          select.options.selectedIndex = 0;\n          select.dispatchEvent(new Event('change', {\n            bubbles: true\n          }));\n        }, 1000);\n      });\n      var styles = {\n        container: {\n          flex: 1,\n          flexDirection: 'row',\n          justifyContent: 'space-around'\n        },\n        containerChild1: {\n          alignItems: 'center',\n          backgroundColor: 'grey',\n          width: 350\n        },\n        containerChild2: {\n          textAlign: 'center',\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          overflowY: 'scroll'\n        }\n      };\n      return React.createElement(View, {\n        style: styles.container\n      }, React.createElement(View, {\n        style: styles.containerChild1\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 30,\n          color: 'white',\n          fontWeight: 'bold',\n          marginBottom: 30,\n          marginTop: 30,\n          fontfamily: 'arial'\n        }\n      }, \"Wetterdaten\"), React.createElement(\"label\", {\n        style: {\n          textAlign: 'center',\n          fontFamily: 'arial',\n          color: 'white'\n        }\n      }, \"Rennen:\", React.createElement(\"select\", {\n        id: \"option\",\n        style: {\n          margin: 10,\n          fontFamily: 'arial'\n        },\n        value: this.state.id,\n        onChange: this.getRaceID\n      }, optionTemplate)), React.createElement(\"div\", {\n        className: \"test\"\n      }, React.createElement(\"button\", {\n        onClick: this.startTimer,\n        style: {\n          borderRadius: 10,\n          margin: 10,\n          marginBottom: 30,\n          fontFamily: 'arial'\n        }\n      }, \"Start\"), React.createElement(Text, {\n        style: {\n          fontfamily: 'arial',\n          color: 'white'\n        }\n      }, \" \", this.state.time.m, \" Minuten : \", this.state.time.s, \" Sekunden \")), React.createElement(\"label\", {\n        style: {\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, \"Lufttemperatur\"), React.createElement(TextInput, {\n        style: {\n          backgroundColor: 'white',\n          borderRadius: 10,\n          width: 200,\n          height: 40,\n          margin: 15,\n          textAlign: 'center'\n        },\n        placeholder: \"xx.xx\",\n        onChangeText: function onChangeText(text) {\n          return _this4.setState({\n            temp_air: parseFloat(text.trim())\n          });\n        }\n      }), React.createElement(Text, null, \" \"), React.createElement(\"label\", {\n        style: {\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, \"Streckentemperatur\"), React.createElement(TextInput, {\n        style: {\n          backgroundColor: 'white',\n          borderRadius: 10,\n          width: 200,\n          height: 40,\n          margin: 15,\n          textAlign: 'center'\n        },\n        placeholder: \"xx.xx\",\n        onChangeText: function onChangeText(text) {\n          return _this4.setState({\n            temp_ground: parseFloat(text.trim())\n          });\n        }\n      }), React.createElement(Text, null, \" \"), React.createElement(\"label\", {\n        style: {\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, \"Streckenverh\\xE4ltnis\"), React.createElement(TextInput, {\n        style: {\n          backgroundColor: 'white',\n          borderRadius: 10,\n          width: 200,\n          height: 40,\n          marginBottom: 35,\n          margin: 15,\n          textAlign: 'center'\n        },\n        placeholder: \"nass/trocken/bew\\xF6lkt\",\n        onChangeText: function onChangeText(text) {\n          return _this4.setState({\n            weather_des: text\n          });\n        }\n      }), React.createElement(View, {\n        style: {\n          width: 200\n        }\n      }, React.createElement(Text, null, \" \"), React.createElement(Button, {\n        title: \"Daten abspeichern\",\n        disabled: !this.validateForm(),\n        onPress: this.handleSubmit\n      }), React.createElement(Text, null, \" \"), React.createElement(Text, null, \" \"), React.createElement(Button, {\n        title: \"Logout\",\n        onPress: this.changeLogout\n      }))), React.createElement(ScrollView, {\n        style: styles.containerChild2\n      }, React.createElement(Table, {\n        list: this.state.dataWeather\n      })));\n    }\n  }]);\n\n  return HelpScreen;\n}(React.Component);\n\nexport { HelpScreen as default };","map":{"version":3,"sources":["/home/toni/PycharmProjects/PropraSource/frontend/HelperScreen.js"],"names":["React","AsyncStorage","timeoutPromise","getWeatherTab","refreshToken","getRaceList","Table","HelpScreen","props","getRaceID","event","id","target","value","setItem","saveRaceIDinState","changeLogout","preventDefault","navigation","replace","handleSubmit","sendNewWeatherRequest","state","temp_air","temp_ground","weather_des","datetime","raceList","dataWeather","time","seconds","raceid","timer","startTimer","bind","countDown","secs","hours","Math","floor","divisor_for_minutes","minutes","divisor_for_seconds","ceil","obj","setInterval","setState","secondsToTime","clearInterval","getItem","console","log","getWeatherData","raceID","accesstoken","then","DataTabular","catch","error","timeLeftVar","racelistDropdown","length","fetch","method","headers","body","JSON","stringify","parseFloat","response","json","optionTemplate","map","v","name","window","addEventListener","setTimeout","select","document","getElementById","options","selectedIndex","dispatchEvent","Event","bubbles","styles","container","flex","flexDirection","justifyContent","containerChild1","alignItems","backgroundColor","width","containerChild2","textAlign","marginLeft","marginRight","overflowY","fontSize","color","fontWeight","marginBottom","marginTop","fontfamily","fontFamily","margin","borderRadius","m","s","height","text","trim","validateForm","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n    View,\n    Text,\n    Image,\n    TextInput,\n    TouchableHighlight,\n    SectionList,\n    TouchableOpacity,\n    ScrollView,\n} from 'react-native';\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport {Button} from \"react-native-web\";\n//import {Button, Text, TextInput, ToastAndroid, View} from \"react-native\";\n\nimport {timeoutPromise,getWeatherTab, refreshToken,getRaceList} from \"./tools\";\nimport Table from \"./Table\";\n\nexport default class HelpScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            temp_ground: 0.0,\n            temp_air: 0.0,\n            weather_des: \"\",\n            datetime: \"\",\n            raceList: [],\n            dataWeather: [],\n            time: {},\n            seconds: 1800,\n            raceid:0,\n        }\n\n        this.timer = 0;\n        this.startTimer = this.startTimer.bind(this);\n        this.countDown = this.countDown.bind(this);\n\n    }\n\n    secondsToTime(secs){\n        let hours = Math.floor(secs / (60 * 60));\n        let divisor_for_minutes = secs % (60 * 60);\n        let minutes = Math.floor(divisor_for_minutes / 60);\n        let divisor_for_seconds = divisor_for_minutes % 60;\n        let seconds = Math.ceil(divisor_for_seconds);\n        let obj = {\n          \"h\": hours,\n          \"m\": minutes,\n          \"s\": seconds\n        };\n        return obj;\n    }\n\n    startTimer() {\n        if (this.timer == 0 && this.state.seconds > 0) {\n            this.timer = setInterval(this.countDown, 1000);\n            }\n    }\n    countDown() {\n        let seconds = this.state.seconds - 1;\n        this.setState({\n            time: this.secondsToTime(seconds),\n            seconds: seconds,\n            });\n        // Check if  zero.\n      if (seconds == 0) {\n          clearInterval(this.timer);\n          }\n      }\n\n\n\n    async saveRaceIDinState(){\n        const id = await AsyncStorage.getItem(\"raceIDHelper\");\n        this.setState({raceid : id} );\n        console.log(this.state.raceid);\n        this.getWeatherData(id);\n    }\n\n     getRaceID = event =>{\n        const id = event.target.value;\n        AsyncStorage.setItem(\"raceIDHelper\",event.target.value);\n        this.saveRaceIDinState();\n    }\n\n\n    async getWeatherData(raceID){\n       const accesstoken = await AsyncStorage.getItem('accesstoken');\n       //const raceID = await AsyncStorage.getItem('raceID');\n       console.log(raceID);\n       console.log(accesstoken);\n       getWeatherTab(accesstoken, raceID).then(DataTabular => {\n                console.log(DataTabular);\n                this.setState({dataWeather: DataTabular});\n            }).catch(function (error) {\n                console.log(error);\n            })\n    }\n\n    async componentDidMount() {\n        let timeLeftVar = this.secondsToTime(this.state.seconds);\n        this.setState({ time: timeLeftVar });\n        const accesstoken = await AsyncStorage.getItem('accesstoken');\n        getRaceList(accesstoken).then(racelistDropdown => {\n            console.log(racelistDropdown);\n            this.setState({raceList: racelistDropdown});\n        }).catch(function (error) {\n            console.log(error);\n        });\n        }\n\n\n    changeLogout = event => {\n        event.preventDefault();\n        this.props.navigation.replace('Logout');\n    }\n\n\n    validateForm() {\n        return this.state.weather_des.length > 0 && this.state.raceid != 0 ;\n    }\n    handleSubmit = event => {\n        event.preventDefault();\n        this.sendNewWeatherRequest(this.state.temp_air,this.state.temp_ground,\n            this.state.weather_des);\n    }\n\n\n    async sendNewWeatherRequest(temp_air,temp_ground,weather_des) {\n        console.log(temp_air)\n        const id = await AsyncStorage.getItem(\"raceIDHelper\");\n       timeoutPromise(2000, fetch(\n            'https://api.race24.cloud/user/weather/create', {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    raceID:id,\n                    temp_air: parseFloat(temp_air),\n                    temp_ground: parseFloat(temp_ground),\n                    weather_des: weather_des,\n                })\n            })\n            ).then(response => response.json()).then(\n                console.log(\"success\")\n                ).catch(function (error) {\n                console.log(error);\n            })\n    }\n\n\n    render() {\n        let optionTemplate = this.state.raceList.map(v => (\n            <option value={v.id} key={v.id}>{v.name}</option>\n\n    ));\n\n\n    window.addEventListener('load', function() {\n        setTimeout(function()\n        {\n            let select = document.getElementById('option');\n            select.options.selectedIndex = 0;\n            select.dispatchEvent(new Event('change', {bubbles: true}));\n        }, 1000); // TODO - MÖGLICHST AUF DIESE UMSETZUNGSWEISE VERZICHTEN\n    })\n\n    const styles = {\n\n        container: {\n        flex: 1,\n        flexDirection: 'row',\n            justifyContent: 'space-around'\n        },\n\n        containerChild1: {\n        alignItems: 'center',\n        backgroundColor: 'grey',\n        width: 350,\n        },\n\n        containerChild2: {\n        textAlign: 'center',\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            overflowY: 'scroll',\n        },\n    };\n\n        return (\n          <View style={styles.container}>\n\n            <View style={styles.containerChild1}>\n\n              <Text style={{fontSize: 30, color:'white', fontWeight: 'bold', marginBottom: 30, marginTop: 30, fontfamily: 'arial'}}>Wetterdaten</Text>\n\n              <label style={{textAlign: 'center', fontFamily: 'arial', color: 'white'}}>Rennen:\n              <select id='option' style={{margin: 10, fontFamily: 'arial'}} value={this.state.id} onChange={this.getRaceID}>{optionTemplate}</select>\n              </label>\n\n              <div className='test'>\n              <button onClick={this.startTimer} style={{borderRadius: 10, margin: 10, marginBottom: 30, fontFamily: 'arial'}}>Start</button>\n                  <Text style={{fontfamily: 'arial', color: 'white'}}> {this.state.time.m} Minuten : {this.state.time.s} Sekunden </Text>\n              </div>\n\n              <label style={{color: 'white',  fontFamily: 'arial'}}>Lufttemperatur</label>\n              <TextInput\n              style = {{backgroundColor: 'white', borderRadius: 10, width: 200, height: 40, margin: 15, textAlign: 'center'}}\n              placeholder=\"xx.xx\"\n              onChangeText={(text) => this.setState({temp_air:parseFloat(text.trim())})}\n              />\n                 <Text> </Text>\n              <label style={{color: 'white',  fontFamily: 'arial'}}>Streckentemperatur</label>\n              <TextInput\n              style = {{backgroundColor: 'white', borderRadius: 10, width: 200, height: 40, margin: 15, textAlign: 'center'}}\n              placeholder=\"xx.xx\"\n              onChangeText={(text) => this.setState( {temp_ground:parseFloat(text.trim())})}\n              />\n                <Text> </Text>\n              <label style={{color: 'white',  fontFamily: 'arial'}}>Streckenverhältnis</label>\n              <TextInput\n              style = {{backgroundColor: 'white', borderRadius: 10, width: 200, height: 40, marginBottom: 35, margin: 15, textAlign: 'center'}}\n              placeholder=\"nass/trocken/bewölkt\"\n              onChangeText={(text) => this.setState({weather_des:text})}\n              />\n                <View style={{width: 200}}>\n                    <Text> </Text>\n              <Button\n              title=\"Daten abspeichern\"\n              disabled={!this.validateForm()}\n              onPress={this.handleSubmit}\n              />\n                <Text> </Text>\n                 <Text> </Text>\n             <Button\n                title='Logout'\n                onPress={this.changeLogout}\n                />\n                </View>\n            </View>\n\n            <ScrollView style={styles.containerChild2}>\n\n              <Table list={this.state.dataWeather}/>\n\n            </ScrollView>\n\n          </View>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}