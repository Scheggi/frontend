{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { styles } from \"./styles\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { timeoutPromise } from \"./tools\";\nimport Text from \"react-native-web/dist/vendor/react-native/Animated/components/AnimatedText\";\n\nvar LoginScreen = function (_React$Component) {\n  _inherits(LoginScreen, _React$Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen(props) {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _super.call(this, props);\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      _this.sendLoginRequest(_this.state.username, _this.state.password);\n    };\n\n    _this.state = {\n      username: \"\",\n      password: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"validateForm\",\n    value: function validateForm() {\n      return this.state.username.length > 0 && this.state.password.length > 0;\n    }\n  }, {\n    key: \"sendLoginRequest\",\n    value: function sendLoginRequest(username, password) {\n      var _this2 = this;\n\n      return _regeneratorRuntime.async(function sendLoginRequest$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              timeoutPromise(2000, fetch('https://api.race24.cloud/user/auth/login', {\n                method: 'POST',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  username: username,\n                  password: password\n                })\n              })).then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                if (data[1] == 200) {\n                  AsyncStorage.setItem('accesstoken', String(data[0].access_token));\n                  AsyncStorage.setItem('refreshtoken', String(data[0].refresh_token));\n                  AsyncStorage.setItem('userid', String(data[0].userid));\n                  AsyncStorage.setItem('usergroup', String(data[0].usergroup));\n                  console.log(data[0].usergroup);\n\n                  _this2.props.navigation.replace('Splash');\n                } else {\n                  console.log(\"Login failed\");\n                }\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: styles.viewStyles\n      }, React.createElement(Text, {\n        style: styles.textStyles\n      }, \"Reifenmanagement\"), React.createElement(View, null, React.createElement(Text, {\n        style: {\n          height: 50\n        }\n      }), React.createElement(\"table\", null, React.createElement(\"tbody\", null, React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          color: 'white'\n        }\n      }, React.createElement(\"label\", null, \" Username eingeben: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, React.createElement(TextInput, {\n        value: this.state.type,\n        onChangeText: function onChangeText(username) {\n          return _this3.setState({\n            username: username\n          });\n        },\n        placeholder: \"Username\"\n      })))), React.createElement(\"tbody\", null, React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          color: 'white'\n        }\n      }, React.createElement(\"label\", null, \" Passwort eingeben: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, \" \", React.createElement(TextInput, {\n        value: this.state.place,\n        secureTextEntry: true,\n        onChangeText: function onChangeText(password) {\n          return _this3.setState({\n            password: password\n          });\n        },\n        placeholder: \"Passwort\"\n      }))))), React.createElement(View, {\n        style: {\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          width: 200\n        }\n      }, React.createElement(Text, {\n        style: {\n          height: 40\n        }\n      }), React.createElement(Button, {\n        disabled: !this.validateForm(),\n        title: \"Login\",\n        onPress: this.handleSubmit\n      }))));\n    }\n  }]);\n\n  return LoginScreen;\n}(React.Component);\n\nexport { LoginScreen as default };","map":{"version":3,"sources":["C:/Users/Niklas/Desktop/frontend/Login.js"],"names":["React","styles","AsyncStorage","timeoutPromise","Text","LoginScreen","props","handleSubmit","event","preventDefault","sendLoginRequest","state","username","password","length","fetch","method","headers","body","JSON","stringify","then","response","json","data","setItem","String","access_token","refresh_token","userid","usergroup","console","log","navigation","replace","catch","error","viewStyles","textStyles","height","textAlign","padding","color","border","borderColor","width","type","setState","place","marginLeft","marginRight","validateForm","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {TextInput, Button, View} from \"react-native\";\r\nimport {styles} from \"./styles\"\r\n//import { AsyncStorage } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport {timeoutPromise} from \"./tools\"\r\nimport Text from \"react-native-web/dist/vendor/react-native/Animated/components/AnimatedText\";\r\n\r\n\r\n\r\nexport default class LoginScreen extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\"\r\n        };\r\n    }\r\n    validateForm() {\r\n        return this.state.username.length > 0 && this.state.password.length > 0;\r\n    }\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        this.sendLoginRequest(this.state.username, this.state.password);\r\n    }\r\n\r\n\r\n    async sendLoginRequest(username, password) {\r\n       timeoutPromise(2000, fetch(\r\n            'https://api.race24.cloud/user/auth/login', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    username: username,\r\n                    password: password,\r\n                })\r\n            })\r\n            ).then(response => response.json()).then(data => {\r\n                if (data[1]==200) {\r\n                    AsyncStorage.setItem('accesstoken', String(data[0].access_token));\r\n                    AsyncStorage.setItem('refreshtoken', String(data[0].refresh_token));\r\n                    AsyncStorage.setItem('userid', String(data[0].userid));\r\n                    AsyncStorage.setItem('usergroup',String(data[0].usergroup));\r\n                    console.log(data[0].usergroup)\r\n                    this.props.navigation.replace('Splash');\r\n\r\n                }\r\n                else {\r\n                    console.log(\"Login failed\")\r\n                }\r\n            }).catch(function (error) {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <View style={styles.viewStyles}>\r\n\r\n                <Text style={styles.textStyles}>Reifenmanagement</Text>\r\n\r\n                <View >\r\n\r\n                    <Text style={{height: 50}}></Text>\r\n\r\n                    <table>\r\n\r\n                    <tbody>\r\n                        <tr>\r\n                            <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', color: 'white'}}><label> Username eingeben: </label></td>\r\n                            <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}><TextInput value={this.state.type}\r\n                            onChangeText={(username) => this.setState({username})} placeholder='Username'/></td>\r\n                        </tr>\r\n                    </tbody>\r\n\r\n                    <tbody>\r\n                        <tr>\r\n                            <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', color: 'white'}}><label> Passwort eingeben: </label></td>\r\n                            <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}> <TextInput value={this.state.place}\r\n                            secureTextEntry={true} onChangeText={(password) => this.setState({password})} placeholder='Passwort'/></td>\r\n                        </tr>\r\n                    </tbody>\r\n\r\n                    </table>\r\n\r\n                    <View style={{marginLeft: 'auto', marginRight: 'auto', width: 200}}>\r\n\r\n                        <Text style={{height: 40}}></Text>\r\n                        <Button disabled={!this.validateForm()} title=\"Login\" onPress={this.handleSubmit}/>\r\n\r\n                    </View>\r\n\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}