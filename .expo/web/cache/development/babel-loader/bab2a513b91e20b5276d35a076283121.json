{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { timeoutPromise, getWeatherTab, refreshToken, getRaceList } from \"./tools\";\nimport Table from \"./Table\";\n\nvar NewHelpScreen = function (_React$Component) {\n  _inherits(NewHelpScreen, _React$Component);\n\n  var _super = _createSuper(NewHelpScreen);\n\n  function NewHelpScreen(props) {\n    var _this;\n\n    _classCallCheck(this, NewHelpScreen);\n\n    _this = _super.call(this, props);\n\n    _this.getRaceID = function (event) {\n      var id = event.target.value;\n      AsyncStorage.setItem(\"raceIDHelper\", event.target.value);\n\n      _this.saveRaceIDinState();\n    };\n\n    _this.changeLogout = function (event) {\n      event.preventDefault();\n\n      _this.props.navigation.replace('Logout');\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      _this.sendNewWeatherRequest(_this.state.temp_air, _this.state.temp_ground, _this.state.weather_des);\n    };\n\n    _this.state = {\n      temp_ground: 0.0,\n      temp_air: 0.0,\n      weather_des: \"\",\n      datetime: \"\",\n      raceList: [],\n      dataWeather: [],\n      time: '',\n      seconds: 0,\n      raceid: 0,\n      lastStemp: ''\n    };\n    _this.timer = 0;\n    _this.startTimer = _this.startTimer.bind(_assertThisInitialized(_this));\n    _this.countDown = _this.countDown.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(NewHelpScreen, [{\n    key: \"getSecondsToNextMeasurement\",\n    value: function getSecondsToNextMeasurement(ttemp) {\n      var lastDate = new Date(Date.parse(ttemp.datetime)).getTime() / 1000;\n      var nowDate = new Date().getTime() / 1000;\n      var result = 1800 - Math.floor(nowDate - lastDate);\n\n      if (result <= 0) {\n        this.setState({\n          time: 'Jetzt fÃ¤llig!'\n        });\n        clearInterval(this.timer);\n      } else {\n        this.setState({\n          seconds: result\n        });\n        this.startTimer();\n      }\n    }\n  }, {\n    key: \"secondsToTime\",\n    value: function secondsToTime(secs) {\n      var hours = Math.floor(secs / (60 * 60));\n      var divisor_for_minutes = secs % (60 * 60);\n      var minutes = Math.floor(divisor_for_minutes / 60);\n      var divisor_for_seconds = divisor_for_minutes % 60;\n      var seconds = Math.ceil(divisor_for_seconds);\n\n      if (hours.toString().length == 1) {\n        hours = \"0\" + hours;\n      }\n\n      if (minutes.toString().length == 1) {\n        minutes = \"0\" + minutes;\n      }\n\n      if (seconds.toString().length == 1) {\n        seconds = \"0\" + seconds;\n      }\n\n      var obj = hours + \":\" + minutes + \":\" + seconds;\n      return obj;\n    }\n  }, {\n    key: \"startTimer\",\n    value: function startTimer() {\n      if (this.timer == 0 && this.state.seconds > 0) {\n        this.timer = setInterval(this.countDown, 1000);\n      }\n    }\n  }, {\n    key: \"countDown\",\n    value: function countDown() {\n      var seconds = this.state.seconds - 1;\n      this.setState({\n        time: this.secondsToTime(seconds),\n        seconds: seconds\n      });\n\n      if (seconds == 0) {\n        clearInterval(this.timer);\n      }\n    }\n  }, {\n    key: \"saveRaceIDinState\",\n    value: function saveRaceIDinState() {\n      var id;\n      return _regeneratorRuntime.async(function saveRaceIDinState$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"raceIDHelper\"));\n\n            case 2:\n              id = _context.sent;\n              this.setState({\n                raceid: id\n              });\n              this.getWeatherData(id);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getWeatherData\",\n    value: function getWeatherData(raceID) {\n      var _this2 = this;\n\n      var accesstoken;\n      return _regeneratorRuntime.async(function getWeatherData$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('accesstoken'));\n\n            case 2:\n              accesstoken = _context2.sent;\n              getWeatherTab(accesstoken, raceID).then(function (DataTabular) {\n                _this2.setState({\n                  dataWeather: DataTabular\n                });\n\n                _this2.setState({\n                  lastStemp: _this2.state.dataWeather[_this2.state.dataWeather.length - 1]\n                });\n\n                if (_this2.state.lastStemp != null) {\n                  _this2.getSecondsToNextMeasurement(_this2.state.lastStemp);\n                } else {\n                  clearInterval(_this2.timer);\n                  _this2.timer = 0;\n\n                  _this2.setState({\n                    time: '00:00:00'\n                  });\n                }\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      var timeLeftVar, accesstoken;\n      return _regeneratorRuntime.async(function componentDidMount$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              timeLeftVar = this.secondsToTime(this.state.seconds);\n              this.setState({\n                time: timeLeftVar\n              });\n              _context3.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('accesstoken'));\n\n            case 4:\n              accesstoken = _context3.sent;\n              getRaceList(accesstoken).then(function (racelistDropdown) {\n                _this3.setState({\n                  raceList: racelistDropdown\n                });\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm() {\n      return this.state.weather_des.length > 0 && this.state.raceid != 0;\n    }\n  }, {\n    key: \"sendNewWeatherRequest\",\n    value: function sendNewWeatherRequest(temp_air, temp_ground, weather_des) {\n      var id;\n      return _regeneratorRuntime.async(function sendNewWeatherRequest$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"raceIDHelper\"));\n\n            case 2:\n              id = _context4.sent;\n              timeoutPromise(2000, fetch('https://api.race24.cloud/user/weather/create', {\n                method: 'POST',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  raceID: id,\n                  temp_air: parseFloat(temp_air),\n                  temp_ground: parseFloat(temp_ground),\n                  weather_des: weather_des\n                })\n              })).then(function (response) {\n                return response.json();\n              }).then(console.log(\"success\")).catch(function (error) {\n                console.log(error);\n              });\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var optionTemplate = this.state.raceList.map(function (v) {\n        return React.createElement(\"option\", {\n          value: v.id,\n          key: v.id\n        }, v.name);\n      });\n      console.log(this.state.time);\n      window.addEventListener('load', function () {\n        setTimeout(function () {\n          var select = document.getElementById('option');\n          select.options.selectedIndex = 0;\n          select.dispatchEvent(new Event('change', {\n            bubbles: true\n          }));\n        }, 1000);\n      });\n      var styles = {\n        container: {\n          flex: 1,\n          flexDirection: 'row',\n          justifyContent: 'space-around'\n        },\n        containerChild1: {\n          alignItems: 'center',\n          backgroundColor: 'grey',\n          width: 350\n        },\n        containerChild2: {\n          textAlign: 'center',\n          marginLeft: 'auto',\n          marginRight: 'auto'\n        }\n      };\n      return React.createElement(View, {\n        style: styles.container\n      }, React.createElement(View, {\n        style: styles.containerChild1\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 30,\n          color: 'white',\n          fontWeight: 'bold',\n          marginBottom: 30,\n          marginTop: 30,\n          fontfamily: 'arial'\n        }\n      }, \"Wetterdaten\"), React.createElement(\"label\", {\n        style: {\n          textAlign: 'center',\n          fontFamily: 'arial',\n          color: 'white'\n        }\n      }, \"Rennen:\", React.createElement(\"select\", {\n        id: \"option\",\n        style: {\n          margin: 10,\n          fontFamily: 'arial'\n        },\n        value: this.state.id,\n        onChange: this.getRaceID\n      }, optionTemplate)), React.createElement(\"label\", {\n        style: {\n          margin: 20,\n          textAlign: 'center',\n          fontFamily: 'arial',\n          color: 'white'\n        }\n      }, \"N\\xE4chste Messung: \", this.state.time), React.createElement(\"label\", {\n        style: {\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, \"Lufttemperatur\"), React.createElement(TextInput, {\n        style: {\n          backgroundColor: 'white',\n          borderRadius: 10,\n          width: 200,\n          height: 40,\n          margin: 15,\n          textAlign: 'center'\n        },\n        placeholder: \"xx.xx\",\n        onChangeText: function onChangeText(text) {\n          return _this4.setState({\n            temp_air: parseFloat(text.trim())\n          });\n        }\n      }), React.createElement(Text, null, \" \"), React.createElement(\"label\", {\n        style: {\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, \"Streckentemperatur\"), React.createElement(TextInput, {\n        style: {\n          backgroundColor: 'white',\n          borderRadius: 10,\n          width: 200,\n          height: 40,\n          margin: 15,\n          textAlign: 'center'\n        },\n        placeholder: \"xx.xx\",\n        onChangeText: function onChangeText(text) {\n          return _this4.setState({\n            temp_ground: parseFloat(text.trim())\n          });\n        }\n      }), React.createElement(Text, null, \" \"), React.createElement(\"label\", {\n        style: {\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, \"Streckenverh\\xE4ltnis\"), React.createElement(TextInput, {\n        style: {\n          backgroundColor: 'white',\n          borderRadius: 10,\n          width: 200,\n          height: 40,\n          marginBottom: 35,\n          margin: 15,\n          textAlign: 'center'\n        },\n        placeholder: \"nass/trocken/bew\\xF6lkt\",\n        onChangeText: function onChangeText(text) {\n          return _this4.setState({\n            weather_des: text\n          });\n        }\n      }), React.createElement(View, {\n        style: {\n          width: 200\n        }\n      }, React.createElement(Text, null, \" \"), React.createElement(Button, {\n        title: \"Daten abspeichern\",\n        disabled: !this.validateForm(),\n        onPress: this.handleSubmit\n      }), React.createElement(Text, null, \" \"), React.createElement(Text, null, \" \"), React.createElement(Button, {\n        title: \"Logout\",\n        onPress: this.changeLogout\n      }))), React.createElement(ScrollView, {\n        style: styles.containerChild2\n      }, React.createElement(Table, {\n        list: this.state.dataWeather\n      })));\n    }\n  }]);\n\n  return NewHelpScreen;\n}(React.Component);\n\nexport { NewHelpScreen as default };","map":{"version":3,"sources":["C:/Users/Niklas/Desktop/frontend/HelperScreen.js"],"names":["React","AsyncStorage","timeoutPromise","getWeatherTab","refreshToken","getRaceList","Table","NewHelpScreen","props","getRaceID","event","id","target","value","setItem","saveRaceIDinState","changeLogout","preventDefault","navigation","replace","handleSubmit","sendNewWeatherRequest","state","temp_air","temp_ground","weather_des","datetime","raceList","dataWeather","time","seconds","raceid","lastStemp","timer","startTimer","bind","countDown","ttemp","lastDate","Date","parse","getTime","nowDate","result","Math","floor","setState","clearInterval","secs","hours","divisor_for_minutes","minutes","divisor_for_seconds","ceil","toString","length","obj","setInterval","secondsToTime","getItem","getWeatherData","raceID","accesstoken","then","DataTabular","getSecondsToNextMeasurement","catch","error","console","log","timeLeftVar","racelistDropdown","fetch","method","headers","body","JSON","stringify","parseFloat","response","json","optionTemplate","map","v","name","window","addEventListener","setTimeout","select","document","getElementById","options","selectedIndex","dispatchEvent","Event","bubbles","styles","container","flex","flexDirection","justifyContent","containerChild1","alignItems","backgroundColor","width","containerChild2","textAlign","marginLeft","marginRight","fontSize","color","fontWeight","marginBottom","marginTop","fontfamily","fontFamily","margin","borderRadius","height","text","trim","validateForm","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n    View,\r\n    Text,\r\n    Image,\r\n    TextInput,\r\n    TouchableHighlight,\r\n    SectionList,\r\n    TouchableOpacity,\r\n    ScrollView,\r\n} from 'react-native';\r\n\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport {Button} from \"react-native-web\";\r\n//import {Button, Text, TextInput, ToastAndroid, View} from \"react-native\";\r\n\r\nimport {timeoutPromise,getWeatherTab, refreshToken,getRaceList} from \"./tools\";\r\nimport Table from \"./Table\";\r\n\r\nexport default class NewHelpScreen extends React.Component {\r\n  constructor(props) {\r\n\r\n    super(props);\r\n\r\n    this.state = {\r\n      temp_ground: 0.0,\r\n      temp_air: 0.0,\r\n      weather_des: \"\",\r\n      datetime: \"\",\r\n      raceList: [],\r\n      dataWeather: [],\r\n      time: '',\r\n      seconds: 0,\r\n      raceid:0,\r\n      lastStemp: '',\r\n    }\r\n\r\n    this.timer = 0;\r\n    this.startTimer = this.startTimer.bind(this);\r\n    this.countDown = this.countDown.bind(this);\r\n\r\n  }\r\n\r\n  getSecondsToNextMeasurement(ttemp) {\r\n\r\n    let lastDate = (new Date(Date.parse(ttemp.datetime)).getTime() / 1000)\r\n    let nowDate = (new Date().getTime() / 1000)\r\n    let result = 1800 - Math.floor(nowDate - lastDate)\r\n\r\n    if(result <= 0) {\r\n      this.setState({time: 'Jetzt fÃ¤llig!'})\r\n      clearInterval(this.timer)\r\n    }else {\r\n      this.setState({seconds: result})\r\n      this.startTimer()\r\n    }\r\n  }\r\n\r\n    secondsToTime(secs){\r\n\r\n        let hours = Math.floor(secs / (60 * 60));\r\n        let divisor_for_minutes = secs % (60 * 60);\r\n        let minutes = Math.floor(divisor_for_minutes / 60);\r\n        let divisor_for_seconds = divisor_for_minutes % 60;\r\n        let seconds = Math.ceil(divisor_for_seconds);\r\n\r\n        if(hours.toString().length == 1) {hours = `0${hours}`}\r\n        if(minutes.toString().length == 1) {minutes = `0${minutes}`}\r\n        if(seconds.toString().length == 1) {seconds = `0${seconds}`}\r\n\r\n        let obj = `${hours}:${minutes}:${seconds}`;\r\n        return obj \r\n\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timer == 0 && this.state.seconds > 0) {\r\n            this.timer = setInterval(this.countDown, 1000);\r\n        } \r\n        \r\n    }\r\n    countDown() {\r\n        let seconds = this.state.seconds - 1;\r\n        this.setState({\r\n            time: this.secondsToTime(seconds),\r\n            seconds: seconds,\r\n            });\r\n      if (seconds == 0) {\r\n          clearInterval(this.timer);\r\n        }\r\n    }\r\n\r\n    async saveRaceIDinState(){\r\n        const id = await AsyncStorage.getItem(\"raceIDHelper\");\r\n        this.setState({raceid : id} );\r\n        this.getWeatherData(id);\r\n    }\r\n\r\n     getRaceID = event =>{\r\n        const id = event.target.value;\r\n        AsyncStorage.setItem(\"raceIDHelper\",event.target.value);\r\n        this.saveRaceIDinState();\r\n    }\r\n\r\n\r\n    async getWeatherData(raceID){\r\n       const accesstoken = await AsyncStorage.getItem('accesstoken');\r\n       getWeatherTab(accesstoken, raceID).then(DataTabular => {\r\n                this.setState({dataWeather: DataTabular});\r\n                this.setState({lastStemp: this.state.dataWeather[this.state.dataWeather.length-1]})\r\n                if(this.state.lastStemp != null) {\r\n                  this.getSecondsToNextMeasurement(this.state.lastStemp)\r\n                }else {\r\n                  clearInterval(this.timer)\r\n                  this.timer = 0;\r\n                  this.setState({time: '00:00:00'})\r\n                }\r\n            }).catch(function (error) {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let timeLeftVar = this.secondsToTime(this.state.seconds);\r\n        this.setState({ time: timeLeftVar });\r\n        const accesstoken = await AsyncStorage.getItem('accesstoken');\r\n        getRaceList(accesstoken).then(racelistDropdown => {\r\n          this.setState({raceList: racelistDropdown});\r\n        }).catch(function (error) {\r\n            console.log(error);\r\n        });\r\n        }\r\n\r\n\r\n    changeLogout = event => {\r\n        event.preventDefault();\r\n        this.props.navigation.replace('Logout');\r\n    }\r\n\r\n\r\n    validateForm() {\r\n        return this.state.weather_des.length > 0 && this.state.raceid != 0 ;\r\n    }\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        this.sendNewWeatherRequest(this.state.temp_air,this.state.temp_ground,\r\n            this.state.weather_des);\r\n    }\r\n\r\n\r\n    async sendNewWeatherRequest(temp_air,temp_ground,weather_des) {\r\n      const id = await AsyncStorage.getItem(\"raceIDHelper\");\r\n       timeoutPromise(2000, fetch(\r\n            'https://api.race24.cloud/user/weather/create', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    raceID:id,\r\n                    temp_air: parseFloat(temp_air),\r\n                    temp_ground: parseFloat(temp_ground),\r\n                    weather_des: weather_des,\r\n                })\r\n            })\r\n            ).then(response => response.json()).then(\r\n                console.log(\"success\")\r\n                ).catch(function (error) {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n\r\n    render() {\r\n        let optionTemplate = this.state.raceList.map(v => (\r\n            <option value={v.id} key={v.id}>{v.name}</option>\r\n    ));\r\n\r\n        console.log(this.state.time)\r\n\r\n    window.addEventListener('load', function() {\r\n        setTimeout(function()\r\n        {\r\n            let select = document.getElementById('option');\r\n            select.options.selectedIndex = 0;\r\n            select.dispatchEvent(new Event('change', {bubbles: true}));\r\n        }, 1000); // TODO - MÃGLICHST AUF DIESE UMSETZUNGSWEISE VERZICHTEN\r\n    })\r\n\r\n    const styles = {\r\n\r\n        container: {\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n            justifyContent: 'space-around'\r\n        },\r\n\r\n        containerChild1: {\r\n        alignItems: 'center',\r\n        backgroundColor: 'grey',\r\n        width: 350,\r\n        },\r\n\r\n        containerChild2: {\r\n        textAlign: 'center',\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n        },\r\n    };\r\n\r\n        return (\r\n          <View style={styles.container}>\r\n\r\n            <View style={styles.containerChild1}>\r\n\r\n              <Text style={{fontSize: 30, color:'white', fontWeight: 'bold', marginBottom: 30, marginTop: 30, fontfamily: 'arial'}}>Wetterdaten</Text>\r\n\r\n              <label style={{textAlign: 'center', fontFamily: 'arial', color: 'white'}}>Rennen:\r\n              <select id='option' style={{margin: 10, fontFamily: 'arial'}} value={this.state.id} onChange={this.getRaceID}>{optionTemplate}</select>\r\n              </label>\r\n\r\n              <label style={{margin:20,textAlign:'center',fontFamily:'arial',color:'white'}}>NÃ¤chste Messung: {this.state.time}</label>\r\n\r\n              <label style={{color: 'white',  fontFamily: 'arial'}}>Lufttemperatur</label>\r\n              <TextInput\r\n              style = {{backgroundColor: 'white', borderRadius: 10, width: 200, height: 40, margin: 15, textAlign: 'center'}}\r\n              placeholder=\"xx.xx\"\r\n              onChangeText={(text) => this.setState({temp_air:parseFloat(text.trim())})}\r\n              />\r\n                 <Text> </Text>\r\n              <label style={{color: 'white',  fontFamily: 'arial'}}>Streckentemperatur</label>\r\n              <TextInput\r\n              style = {{backgroundColor: 'white', borderRadius: 10, width: 200, height: 40, margin: 15, textAlign: 'center'}}\r\n              placeholder=\"xx.xx\"\r\n              onChangeText={(text) => this.setState( {temp_ground:parseFloat(text.trim())})}\r\n              />\r\n                <Text> </Text>\r\n              <label style={{color: 'white',  fontFamily: 'arial'}}>StreckenverhÃ¤ltnis</label>\r\n              <TextInput\r\n              style = {{backgroundColor: 'white', borderRadius: 10, width: 200, height: 40, marginBottom: 35, margin: 15, textAlign: 'center'}}\r\n              placeholder=\"nass/trocken/bewÃ¶lkt\"\r\n              onChangeText={(text) => this.setState({weather_des:text})}\r\n              />\r\n                <View style={{width: 200}}>\r\n                    <Text> </Text>\r\n\r\n              <Button\r\n              title=\"Daten abspeichern\"\r\n              disabled={!this.validateForm()}\r\n              onPress={this.handleSubmit}\r\n              />\r\n\r\n                <Text> </Text>\r\n                 <Text> </Text>\r\n             <Button\r\n                title='Logout'\r\n                onPress={this.changeLogout}\r\n                />\r\n                </View>\r\n            </View>\r\n\r\n            <ScrollView style={styles.containerChild2}>\r\n\r\n              <Table list={this.state.dataWeather}/>\r\n\r\n            </ScrollView>\r\n\r\n          </View>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}