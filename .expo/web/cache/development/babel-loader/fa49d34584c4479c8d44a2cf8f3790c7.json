{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { styles } from \"./styles\";\nimport { getRaceList, getWeatherTab, timeoutPromise, getWheelsList, getRaceDetails_by_ID, getFormelList } from \"./tools\";\nimport { get_Dict_WheelOrder, getDropdown, getWheelSetInformation, getWheelInformations } from \"./tools_get_wheels\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollViewBase from \"react-native-web/dist/exports/ScrollView/ScrollViewBase\";\n\nvar WheelScreen = function (_React$Component) {\n  _inherits(WheelScreen, _React$Component);\n\n  var _super = _createSuper(WheelScreen);\n\n  function WheelScreen(props) {\n    var _this;\n\n    _classCallCheck(this, WheelScreen);\n\n    _this = _super.call(this, props);\n\n    _this.changeRace = function (event) {\n      event.preventDefault();\n\n      _this.props.navigation.goBack();\n    };\n\n    _this.state = {\n      list_formel: [],\n      formel: \"\",\n      raceID: 0\n    };\n    return _this;\n  }\n\n  _createClass(WheelScreen, [{\n    key: \"sendNewFormelRequest\",\n    value: function sendNewFormelRequest(formel) {\n      var _this2 = this;\n\n      return _regeneratorRuntime.async(function sendNewFormelRequest$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(formel);\n              timeoutPromise(2000, fetch('https://api.race24.cloud/formel/create', {\n                method: 'POST',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  formel: formel\n                })\n              })).then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                if (data[1] == 200) {\n                  _this2.getTabularData();\n                } else {\n                  console.log(\"failed\");\n                }\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"getTabularData\",\n    value: function getTabularData() {\n      var _this3 = this;\n\n      var accesstoken, raceID;\n      return _regeneratorRuntime.async(function getTabularData$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('accesstoken'));\n\n            case 2:\n              accesstoken = _context2.sent;\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('raceID'));\n\n            case 5:\n              raceID = _context2.sent;\n              _context2.next = 8;\n              return _regeneratorRuntime.awrap(getWheelInformations(accesstoken, raceID).then(function (formellistTab) {\n                console.log(formellistTab);\n\n                _this3.setState({\n                  list_formel: formellistTab\n                });\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var raceid;\n      return _regeneratorRuntime.async(function componentDidMount$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(this.getTabularData());\n\n            case 2:\n              _context3.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('raceItem'));\n\n            case 4:\n              raceid = _context3.sent;\n              this.setState({\n                raceID: raceid\n              });\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"renderTableHeader\",\n    value: function renderTableHeader() {\n      var header = ['Kategorie', 'Unterkategorie', 'Status', 'Temperatur', 'Variante', 'FL_Luftdruck', 'FR_Luftdruck', 'BL_Luftdruck', 'BR_Luftdruck', 'FL_ID', 'FR_ID', 'RL_ID', 'RB_ID'];\n      return header.map(function (key, index) {\n        return React.createElement(\"th\", {\n          bgcolor: \"#696969\",\n          style: {\n            textAlign: \"left\",\n            padding: '8px',\n            color: 'white',\n            fontFamily: 'arial'\n          },\n          key: index\n        }, key.toUpperCase());\n      });\n    }\n  }, {\n    key: \"renderTableData\",\n    value: function renderTableData() {\n      console.log(this.state.list_formel);\n      return this.state.list_formel.map(function (list_formel, index) {\n        return React.createElement(\"tr\", {\n          bgcolor: \"#696969\",\n          style: {\n            textAlign: \"left\",\n            padding: '8px',\n            color: 'white',\n            fontFamily: 'arial'\n          },\n          key: list_formel.setNr\n        }, React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, list_formel.cat), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 150,\n            padding: '8px'\n          }\n        }, list_formel.subcat), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, list_formel.status), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 150,\n            padding: '8px'\n          }\n        }, list_formel.temp), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, list_formel.variant), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 150,\n            padding: '8px'\n          }\n        }, list_formel.fl_pressure), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, list_formel.fr_pressure), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 150,\n            padding: '8px'\n          }\n        }, list_formel.bl_pressure), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, list_formel.br_pressure), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 150,\n            padding: '8px'\n          }\n        }, list_formel.fl_wheel_id), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, list_formel.fr_wheel_id), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 150,\n            padding: '8px'\n          }\n        }, list_formel.bl_wheel_id), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 150,\n            padding: '8px'\n          }\n        }, list_formel.br_wheel_id));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.viewStyles\n      }, React.createElement(Text, {\n        style: {\n          height: 20\n        }\n      }, \"Dropdownliste, Set ausw\\xE4hlen von Rennen\"), React.createElement(Text, {\n        style: {\n          height: 20\n        }\n      }, \"Tabelle, alle Attribute des Sets in editierbarer Tabelle\"), React.createElement(ScrollView, null, React.createElement(\"div\", null, React.createElement(\"h1\", {\n        id: \"title\"\n      }, \"Angelegte Reifen\"), React.createElement(\"table\", {\n        id: \"list_formel\"\n      }, React.createElement(\"tbody\", null, this.renderTableHeader(), this.renderTableData())))), React.createElement(Text, {\n        style: {\n          height: 20\n        }\n      }), React.createElement(Button, {\n        title: \"zur\\xFCck\",\n        onPress: this.changeRace\n      }));\n    }\n  }]);\n\n  return WheelScreen;\n}(React.Component);\n\nexport { WheelScreen as default };","map":{"version":3,"sources":["C:/Users/Niklas/Desktop/frontend/Reifenmanagement.js"],"names":["React","styles","getRaceList","getWeatherTab","timeoutPromise","getWheelsList","getRaceDetails_by_ID","getFormelList","get_Dict_WheelOrder","getDropdown","getWheelSetInformation","getWheelInformations","AsyncStorage","Icon","ScrollViewBase","WheelScreen","props","changeRace","event","preventDefault","navigation","goBack","state","list_formel","formel","raceID","console","log","fetch","method","headers","body","JSON","stringify","then","response","json","data","getTabularData","catch","error","getItem","accesstoken","formellistTab","setState","raceid","header","map","key","index","textAlign","padding","color","fontFamily","toUpperCase","setNr","border","borderColor","height","width","cat","subcat","status","temp","variant","fl_pressure","fr_pressure","bl_pressure","br_pressure","fl_wheel_id","fr_wheel_id","bl_wheel_id","br_wheel_id","viewStyles","renderTableHeader","renderTableData","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n    View,\r\n    Text,\r\n    StyleSheet,\r\n    Image,\r\n    TextInput,\r\n    TouchableHighlight,\r\n    SectionList,\r\n    TouchableOpacity,\r\n    ScrollView\r\n} from 'react-native';\r\nimport {styles} from \"./styles\"\r\nimport {getRaceList, getWeatherTab, timeoutPromise, getWheelsList, getRaceDetails_by_ID, getFormelList} from \"./tools\"\r\nimport {get_Dict_WheelOrder, getDropdown,getWheelSetInformation,getWheelInformations} from \"./tools_get_wheels\";\r\n\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport {Button} from \"react-native-web\";\r\nimport ScrollViewBase from \"react-native-web/dist/exports/ScrollView/ScrollViewBase\";\r\n\r\nexport default class WheelScreen extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            list_formel:[],\r\n            formel:\"\",\r\n            raceID:0\r\n        }\r\n    }\r\n\r\n    changeRace = event => {\r\n        event.preventDefault();\r\n        this.props.navigation.goBack();\r\n    }\r\n\r\n\r\n\r\n    async sendNewFormelRequest(formel) {\r\n        console.log(formel)\r\n       timeoutPromise(2000, fetch(\r\n            'https://api.race24.cloud/formel/create', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    formel:formel,\r\n                })\r\n            })\r\n            ).then(response => response.json()).then(data => {\r\n                if (data[1]==200) {\r\n                    this.getTabularData()\r\n                }\r\n                else {\r\n                    console.log(\"failed\")\r\n                }\r\n            }).catch(function (error) {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    async getTabularData(){\r\n        const accesstoken = await AsyncStorage.getItem('accesstoken');\r\n        const raceID = await AsyncStorage.getItem('raceID');\r\n        await getWheelInformations(accesstoken,raceID).then(formellistTab => {\r\n            console.log(formellistTab);\r\n            this.setState({list_formel: formellistTab});\r\n        }).catch(function (error) {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.getTabularData()\r\n        const raceid = await AsyncStorage.getItem('raceItem');\r\n        this.setState({raceID: raceid});\r\n    }\r\n\r\n\r\n\r\n   renderTableHeader() {\r\n    let header = ['Kategorie', 'Unterkategorie', 'Status','Temperatur','Variante',\r\n        'FL_Luftdruck','FR_Luftdruck','BL_Luftdruck','BR_Luftdruck','FL_ID','FR_ID','RL_ID','RB_ID'];\r\n      //let header = Object.keys(this.state.list_formel[0]);\r\n      return header.map((key, index) => {\r\n         return <th bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', color: 'white', fontFamily: 'arial'}} key={index}>{key.toUpperCase()}</th>\r\n      })\r\n   }\r\n\r\n\r\n    renderTableData() {\r\n        console.log(this.state.list_formel)\r\n        return this.state.list_formel.map((list_formel, index) => {\r\n            //const { n, formel } =list_formel //destructuring\r\n            return (\r\n            <tr bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', color: 'white', fontFamily: 'arial'}} key={list_formel.setNr}>\r\n               <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}} >{list_formel.cat}</td>\r\n               <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}} >{list_formel.subcat}</td>\r\n                 <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}} >{list_formel.status}</td>\r\n               <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}} >{list_formel.temp}</td>\r\n                 <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}} >{list_formel.variant}</td>\r\n               <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}} >{list_formel.fl_pressure}</td>\r\n                 <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}} >{list_formel.fr_pressure}</td>\r\n               <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}} >{list_formel.bl_pressure}</td>\r\n                 <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}} >{list_formel.br_pressure}</td>\r\n               <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}} >{list_formel.fl_wheel_id}</td>\r\n                 <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}} >{list_formel.fr_wheel_id}</td>\r\n               <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}} >{list_formel.bl_wheel_id}</td>\r\n                <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}} >{list_formel.br_wheel_id}</td>\r\n            </tr>\r\n         )\r\n      })\r\n   }\r\n\r\n    render() {\r\n        return (\r\n            <View style={styles.viewStyles}>\r\n                <Text style={{height: 20}}>Dropdownliste, Set auswählen von Rennen</Text>\r\n                <Text style={{height: 20}}>Tabelle, alle Attribute des Sets in editierbarer Tabelle</Text>\r\n\r\n                <ScrollView>\r\n                <div>\r\n                <h1 id='title'>Angelegte Reifen</h1>\r\n                <table  id='list_formel'>\r\n                   <tbody>\r\n                   {this.renderTableHeader()}\r\n                      {this.renderTableData()}\r\n                   </tbody>\r\n                </table>\r\n                </div>\r\n                </ScrollView>\r\n                <Text style={{height: 20}}></Text>\r\n                <Button\r\n                        title=\"zurück\"\r\n                        onPress={this.changeRace}\r\n                />\r\n            </View>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}