{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { styles } from \"./styles\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { timeoutPromise, refreshToken, getRaceList, changeWheelSet } from \"./tools\";\nimport { get_Dict_WheelOrder, getDropdown, getWheelSetInformation } from \"./tools_get_wheels\";\n\nvar NewOrderScreen = function (_React$Component) {\n  _inherits(NewOrderScreen, _React$Component);\n\n  var _super = _createSuper(NewOrderScreen);\n\n  function NewOrderScreen(props) {\n    var _this;\n\n    _classCallCheck(this, NewOrderScreen);\n\n    _this = _super.call(this, props);\n\n    _this.getRaceID = function (event) {\n      var id = event.target.value;\n      AsyncStorage.setItem(\"raceIDHelper\", event.target.value);\n\n      _this.saveRaceIDinState();\n    };\n\n    _this.changeRace = function (event) {\n      event.preventDefault();\n\n      _this.props.navigation.replace('Race');\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n      changeWheelSet(_this.state.setID, _this.state.variant, _this.state.orderduration, _this.state.term);\n      AsyncStorage.setItem('orderSetID', _this.state.setID);\n\n      _this.refresh_Buttons();\n    };\n\n    _this.handleSubmitButton1 = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        tyretype: \"Slicks\"\n      });\n\n      _this.setState({\n        tyremix: \"Cold\"\n      });\n\n      var helper = _this.state.dictButtons;\n      helper[0][0] = helper[0][0] - 1;\n\n      _this.setState({\n        setID: helper[0][0]\n      });\n\n      _this.setState({\n        dictButtons: helper\n      });\n    };\n\n    _this.handleSubmitButton2 = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        tyretype: \"Slicks\"\n      });\n\n      _this.setState({\n        tyremix: \"Medium\"\n      });\n\n      var helper = _this.state.dictButtons;\n      helper[1][0] = helper[1][0] - 1;\n\n      _this.setState({\n        setID: helper[1][1][helper[1][0]]\n      });\n\n      _this.setState({\n        dictButtons: helper\n      });\n    };\n\n    _this.handleSubmitButton3 = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        tyretype: \"Slicks\"\n      });\n\n      _this.setState({\n        tyremix: \"Hot\"\n      });\n\n      var helper = _this.state.dictButtons;\n      helper[2][0] = helper[2][0] - 1;\n      var index = helper[2][0];\n\n      _this.setState({\n        setID: helper[2][1][index]\n      });\n\n      _this.setState({\n        dictButtons: helper\n      });\n    };\n\n    _this.handleSubmitButton4 = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        tyretype: \"Inters\"\n      });\n\n      _this.setState({\n        tyremix: \"Intermediate\"\n      });\n\n      var helper = _this.state.dictButtons;\n      helper[3][0] = helper[3][0] - 1;\n      var index = helper[3][0];\n\n      _this.setState({\n        setID: helper[3][1][index]\n      });\n\n      _this.setState({\n        dictButtons: helper\n      });\n    };\n\n    _this.handleSubmitButton5 = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        tyretype: \"Rain\"\n      });\n\n      _this.setState({\n        tyremix: \"Dry Wet\"\n      });\n\n      var helper = _this.state.dictButtons;\n      helper[4][0] = helper[4][0] - 1;\n      var index = helper[4][0];\n\n      _this.setState({\n        setID: helper[4][1][index]\n      });\n\n      _this.setState({\n        dictButtons: helper\n      });\n    };\n\n    _this.handleSubmitButton6 = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        tyretype: \"Rain\"\n      });\n\n      _this.setState({\n        tyremix: \"Heavy Wet\"\n      });\n\n      var helper = _this.state.dictButtons;\n      helper[5][0] = helper[5][0] - 1;\n      var index = helper[5][0];\n\n      _this.setState({\n        setID: helper[5][1][index]\n      });\n\n      _this.setState({\n        dictButtons: helper\n      });\n    };\n\n    _this.handleAirPressureChange = function (event) {\n      timeoutPromise(2000, fetch('https://api.race24.cloud/wheel_cont/change_air_pressWheel', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: event.target.id,\n          air_press: event.target.value\n        })\n      })).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        if (data[1] == 200) {\n          console.log(\"Pressure Changed\");\n\n          _this.getWheelData().then(function () {\n            return;\n          });\n        } else {\n          console.log(\"failed\");\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.handleWheelIDChange = function (event) {\n      timeoutPromise(2000, fetch('https://api.race24.cloud/wheel/set_id_tag', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          wheel_id: event.target.id,\n          wheel_id_tag: event.target.value\n        })\n      })).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        if (data[1] == 200) {\n          console.log(\"ID Changed\");\n\n          _this.getWheelData().then(function () {\n            return;\n          });\n        } else {\n          console.log(\"failed\");\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.handleTemp = function (event) {\n      timeoutPromise(2000, fetch('https://api.race24.cloud/wheel/set_temp', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          set_id: event.target.id,\n          temp: event.target.value\n        })\n      })).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        if (data[1] == 200) {\n          console.log(\"temp Changed\");\n\n          _this.getWheelData().then(function () {\n            return;\n          });\n        } else {\n          console.log(\"failed\");\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.state = {\n      raceid: 0,\n      tyretype: '',\n      tyremix: '',\n      term: '',\n      variant: '',\n      tyretype1: '',\n      tyremix1: '',\n      variant1: '',\n      orderduration: 0,\n      ordertime: '',\n      ordertime1: '',\n      pickuptime: '',\n      raceList: [],\n      time: {},\n      seconds: 1800,\n      timervalue: \"\",\n      wheels: [],\n      listDropdown1: [],\n      listDropdown2: [],\n      listDropdown3: [],\n      dictButtons: [],\n      ButtonSlicks_Cold: 'Slicks Cold',\n      ButtonSlicks_Medium: 'Slicks Medium',\n      ButtonSlicks_Hot: 'Slicks Hot',\n      ButtonInter: 'Inters Intermediate',\n      ButtonRainDryWet: 'Rain DryWet',\n      ButtonRainHeavy: 'Rain HeavyWet',\n      setID: 0,\n      SetInformation: {},\n      test_setid: 0,\n      test_list: []\n    };\n    _this.timer = 0;\n    _this.startTimer = _this.startTimer.bind(_assertThisInitialized(_this));\n    _this.countDown = _this.countDown.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(NewOrderScreen, [{\n    key: \"changeMain\",\n    value: function changeMain() {\n      this.props.navigation.goBack();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var accesstoken, raceID;\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('accesstoken'));\n\n            case 2:\n              accesstoken = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('raceID'));\n\n            case 5:\n              raceID = _context.sent;\n              getDropdown(accesstoken, raceID).then(function (racelistDropdown) {\n                console.log(racelistDropdown);\n\n                _this2.setState({\n                  listDropdown1: racelistDropdown[0]\n                });\n\n                _this2.setState({\n                  listDropdown2: racelistDropdown[1]\n                });\n\n                _this2.setState({\n                  listDropdown3: racelistDropdown[2]\n                });\n              }).catch(function (error) {\n                console.log(error);\n              });\n              console.log(2);\n              _context.next = 10;\n              return _regeneratorRuntime.awrap(this.getWheelDict());\n\n            case 10:\n              _context.next = 12;\n              return _regeneratorRuntime.awrap(this.getDropdownList());\n\n            case 12:\n              if (this.state.dictButtons.length == 6) {\n                this.setState({\n                  ButtonSlicks_Cold: 'Slicks Cold  ' + this.state.dictButtons[0][0].toString()\n                });\n                this.setState({\n                  ButtonSlicks_Medium: 'Slicks Medium  ' + this.state.dictButtons[1][0].toString()\n                });\n                this.setState({\n                  ButtonSlicks_Hot: 'Slicks Hot  ' + this.state.dictButtons[2][0].toString()\n                });\n                this.setState({\n                  ButtonInter: 'Inters Intermediate  ' + this.state.dictButtons[3][0].toString()\n                });\n                this.setState({\n                  ButtonRainDryWet: 'Rain DryWet  ' + this.state.dictButtons[4][0].toString()\n                });\n                this.setState({\n                  ButtonRainHeavy: 'Rain HeavyWet  ' + this.state.dictButtons[5][0].toString()\n                });\n                console.log(this.state.ButtonSlicks_Cold);\n              }\n\n              _context.next = 15;\n              return _regeneratorRuntime.awrap(this.getWheelData());\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getWheelDict\",\n    value: function getWheelDict() {\n      var _this3 = this;\n\n      var accesstoken, raceID;\n      return _regeneratorRuntime.async(function getWheelDict$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('accesstoken'));\n\n            case 2:\n              accesstoken = _context2.sent;\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('raceID'));\n\n            case 5:\n              raceID = _context2.sent;\n              console.log(raceID);\n              _context2.next = 9;\n              return _regeneratorRuntime.awrap(get_Dict_WheelOrder(accesstoken, raceID).then(function (DataTabular) {\n                console.log(DataTabular);\n\n                _this3.setState({\n                  dictButtons: DataTabular\n                });\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 9:\n              console.log(this.state.dictButtons);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getDropdownList\",\n    value: function getDropdownList() {\n      var _this4 = this;\n\n      var accesstoken, raceID;\n      return _regeneratorRuntime.async(function getDropdownList$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('accesstoken'));\n\n            case 2:\n              accesstoken = _context3.sent;\n              _context3.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('raceID'));\n\n            case 5:\n              raceID = _context3.sent;\n              console.log(raceID);\n              _context3.next = 9;\n              return _regeneratorRuntime.awrap(getDropdown(accesstoken, raceID).then(function (DataTabular) {\n                console.log(DataTabular);\n\n                _this4.setState({\n                  listDropdown: DataTabular\n                });\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 9:\n              console.log(this.state.listDropdown);\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getSetID\",\n    value: function getSetID(event) {\n      var setid;\n      return _regeneratorRuntime.async(function getSetID$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              AsyncStorage.setItem(\"SetIDDropdown\", event.target.value);\n              _context4.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"SetID\"));\n\n            case 3:\n              setid = _context4.sent;\n              console.log(setid);\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"refresh_Buttons\",\n    value: function refresh_Buttons() {\n      if (this.state.dictButtons.length == 6) {\n        this.setState({\n          ButtonSlicks_Cold: 'Slicks Cold  ' + this.state.dictButtons[0][0].toString()\n        });\n        this.setState({\n          ButtonSlicks_Medium: 'Slicks Medium  ' + this.state.dictButtons[1][0].toString()\n        });\n        this.setState({\n          ButtonSlicks_Hot: 'Slicks Hot  ' + this.state.dictButtons[2][0].toString()\n        });\n        this.setState({\n          ButtonInter: 'Inters Intermediate  ' + this.state.dictButtons[3][0].toString()\n        });\n        this.setState({\n          ButtonRainDryWet: 'Rain DryWet  ' + this.state.dictButtons[4][0].toString()\n        });\n        this.setState({\n          ButtonRainHeavy: 'Rain HeavyWet  ' + this.state.dictButtons[5][0].toString()\n        });\n      }\n    }\n  }, {\n    key: \"secondsToTime\",\n    value: function secondsToTime(secs) {\n      var hours = Math.floor(secs / (60 * 60));\n      var divisor_for_minutes = secs % (60 * 60);\n      var minutes = Math.floor(divisor_for_minutes / 60);\n      var divisor_for_seconds = divisor_for_minutes % 60;\n      var seconds = Math.ceil(divisor_for_seconds);\n      var obj = {\n        \"h\": hours,\n        \"m\": minutes,\n        \"s\": seconds\n      };\n      return obj;\n    }\n  }, {\n    key: \"startTimer\",\n    value: function startTimer() {\n      var hour = 0;\n      var minute = 0;\n      var second = 0;\n      var atime = this.state.timervalue.split(':');\n\n      if (atime[0].length > 0) {\n        hour = parseInt(atime[0]);\n      }\n\n      if (atime[1].length > 0) {\n        minute = parseInt(atime[1]);\n      }\n\n      if (atime[2].length > 0) {\n        second = parseInt(atime[2]);\n      }\n\n      this.state.seconds = stunde * 3600 + minute * 60 + sekunde;\n\n      if (this.state.seconds > 0) {\n        this.timer = setInterval(this.countDown, this.state.seconds);\n      }\n    }\n  }, {\n    key: \"countDown\",\n    value: function countDown() {\n      var seconds = this.state.seconds - 1;\n      this.setState({\n        time: this.secondsToTime(seconds),\n        seconds: seconds\n      });\n\n      if (seconds == 0) {\n        clearInterval(this.timer);\n      }\n    }\n  }, {\n    key: \"getTime\",\n    value: function getTime() {\n      var today = new Date();\n      var h = today.getHours();\n      var m = today.getMinutes();\n      return h + \":\" + m;\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm() {\n      return this.state.orderduration.length > 0 && this.state.variant.length > 0;\n    }\n  }, {\n    key: \"validateFormButton1\",\n    value: function validateFormButton1() {\n      return this.state.dictButtons.length == 6 && this.state.dictButtons[0][0] > 0;\n    }\n  }, {\n    key: \"validateFormButton2\",\n    value: function validateFormButton2() {\n      return this.state.dictButtons.length == 6 && this.state.dictButtons[1][0] > 0;\n    }\n  }, {\n    key: \"validateFormButton3\",\n    value: function validateFormButton3() {\n      return this.state.dictButtons.length == 6 && this.state.dictButtons[2][0] > 0;\n    }\n  }, {\n    key: \"validateFormButton4\",\n    value: function validateFormButton4() {\n      return this.state.dictButtons.length == 6 && this.state.dictButtons[3][0] > 0;\n    }\n  }, {\n    key: \"validateFormButton5\",\n    value: function validateFormButton5() {\n      return this.state.dictButtons.length == 6 && this.state.dictButtons[4][0] > 0;\n    }\n  }, {\n    key: \"validateFormButton6\",\n    value: function validateFormButton6() {\n      return this.state.dictButtons.length == 6 && this.state.dictButtons[5][0] > 0;\n    }\n  }, {\n    key: \"validateForm1\",\n    value: function validateForm1() {\n      return this.state.timervalue.length > 0;\n    }\n  }, {\n    key: \"getWheelData\",\n    value: function getWheelData() {\n      var _this5 = this;\n\n      var accesstoken, setID;\n      return _regeneratorRuntime.async(function getWheelData$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('accesstoken'));\n\n            case 2:\n              accesstoken = _context5.sent;\n              _context5.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('orderSetID'));\n\n            case 5:\n              setID = _context5.sent;\n              console.log(setID);\n              _context5.next = 9;\n              return _regeneratorRuntime.awrap(getWheelSetInformation(accesstoken, setID).then(function (DataTabular) {\n                console.log(DataTabular);\n\n                _this5.setState({\n                  SetInformation: DataTabular\n                });\n\n                _this5.state.wheels.push(_this5.state.SetInformation);\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 9:\n              console.log(this.state.wheels);\n\n            case 10:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"renderWheelTable\",\n    value: function renderWheelTable() {\n      var _this6 = this;\n\n      console.log(\"Render Table\");\n      console.log(this.state.wheels);\n      return this.state.wheels.map(function (wheel) {\n        console.log(wheel);\n        console.log(wheel.setid);\n        return React.createElement(\"tr\", {\n          bgcolor: \"#808080\",\n          style: {\n            textAlign: \"left\",\n            padding: '8px',\n            color: 'white',\n            fontFamily: 'arial'\n          },\n          key: wheel.setid\n        }, React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'grey',\n            height: 25,\n            width: 150,\n            padding: '8px',\n            textAlign: 'center'\n          }\n        }, wheel.setNr), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'grey',\n            height: 25,\n            width: 150,\n            padding: '8px',\n            textAlign: 'center'\n          }\n        }, wheel.status), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'grey',\n            height: 25,\n            width: 150,\n            padding: '8px',\n            textAlign: 'center'\n          }\n        }, wheel.cat), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'grey',\n            height: 25,\n            width: 150,\n            padding: '8px',\n            textAlign: 'center'\n          }\n        }, wheel.subcat), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'grey',\n            height: 25,\n            width: 150,\n            padding: '8px',\n            textAlign: 'center'\n          }\n        }, React.createElement(\"input\", {\n          id: wheel.setid,\n          placeholder: 'Temperatur',\n          onChange: _this6.handleTemp,\n          value: wheel.temp\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'grey',\n            height: 25,\n            width: 150,\n            padding: '8px',\n            textAlign: 'center'\n          }\n        }, React.createElement(\"input\", {\n          id: wheel.fl_id,\n          placeholder: 'FL ID',\n          onChange: _this6.handleWheelIDChange,\n          value: wheel.fl_wheel_id\n        }), React.createElement(\"input\", {\n          id: wheel.fr_id,\n          placeholder: 'FR ID',\n          onChange: _this6.handleWheelIDChange,\n          value: wheel.fr_wheel_id\n        }), React.createElement(\"input\", {\n          id: wheel.bl_id,\n          placeholder: 'BL ID',\n          onChange: _this6.handleWheelIDChange,\n          value: wheel.bl_wheel_id\n        }), React.createElement(\"input\", {\n          id: wheel.br_id,\n          placeholder: 'BR ID ',\n          onChange: _this6.handleWheelIDChange,\n          value: wheel.br_wheel_id\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'grey',\n            height: 25,\n            width: 150,\n            padding: '8px',\n            textAlign: 'center'\n          }\n        }, React.createElement(\"input\", {\n          id: wheel.fl_id,\n          placeholder: 'FL Luftdruck',\n          onChange: _this6.handleAirPressureChange,\n          value: wheel.fl_pressure\n        }), React.createElement(\"input\", {\n          id: wheel.fr_id,\n          placeholder: 'FR Luftdruck',\n          onChange: _this6.handleAirPressureChange,\n          value: wheel.fr_pressure\n        }), React.createElement(\"input\", {\n          id: wheel.bl_id,\n          placeholder: 'BL Luftdruck',\n          onChange: _this6.handleAirPressureChange,\n          value: wheel.bl_pressure\n        }), React.createElement(\"input\", {\n          id: wheel.br_id,\n          placeholder: 'BR Luftdruck',\n          onChange: _this6.handleAirPressureChange,\n          value: wheel.br_pressure\n        })));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n\n      var optionTemplate = this.state.raceList.map(function (v) {\n        return React.createElement(\"option\", {\n          value: v.id,\n          key: v.id\n        }, v.name);\n      });\n      return React.createElement(View, {\n        style: container2\n      }, React.createElement(View, {\n        style: container3\n      }, React.createElement(View, {\n        style: container5\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 40,\n          fontWeight: 'bold',\n          textAlign: 'center'\n        }\n      }, \"Neue Reifenbestellung anlegen\")), React.createElement(View, {\n        style: container4\n      }, React.createElement(Button, {\n        disabled: !this.validateFormButton1(),\n        title: this.state.ButtonSlicks_Cold,\n        onPress: this.handleSubmitButton1\n      }), React.createElement(Button, {\n        disabled: !this.validateFormButton2(),\n        title: this.state.ButtonSlicks_Medium,\n        onPress: this.handleSubmitButton2\n      }), React.createElement(Button, {\n        disabled: !this.validateFormButton3(),\n        title: this.state.ButtonSlicks_Hot,\n        onPress: this.handleSubmitButton3\n      }), React.createElement(Button, {\n        disabled: !this.validateFormButton4(),\n        title: this.state.ButtonInter,\n        onPress: this.handleSubmitButton4\n      }), React.createElement(Button, {\n        disabled: !this.validateFormButton5(),\n        title: this.state.ButtonRainDryWet,\n        onPress: this.handleSubmitButton5\n      }), React.createElement(Button, {\n        disabled: !this.validateFormButton6(),\n        title: this.state.ButtonRainHeavy,\n        onPress: this.handleSubmitButton6\n      }))), React.createElement(View, {\n        style: container1\n      }, React.createElement(View, {\n        style: {\n          justifyContent: 'flex-start'\n        }\n      }, React.createElement(Text, {\n        style: {\n          height: 10\n        }\n      }, \" \"), React.createElement(\"table\", null, React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Reifenart: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, React.createElement(TextInput, {\n        value: this.state.tyretype,\n        onChangeText: function onChangeText(text) {\n          return _this7.setState({\n            tyretype: text\n          });\n        }\n      }))), React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Mischung: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, \" \", React.createElement(TextInput, {\n        value: this.state.tyremix,\n        onChangeText: function onChangeText(text) {\n          return _this7.setState({\n            tyremix: text\n          });\n        }\n      }))), React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Bezeichnung: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, React.createElement(TextInput, {\n        value: this.state.term,\n        onChangeText: function onChangeText(text) {\n          return _this7.setState({\n            term: text\n          });\n        }\n      }))), React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Bearbeitungsvariante: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, React.createElement(TextInput, {\n        value: this.state.variant,\n        onChangeText: function onChangeText(text) {\n          return _this7.setState({\n            variant: text\n          });\n        }\n      }))), React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Bestelldauer: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, \" \", React.createElement(TextInput, {\n        value: this.state.orderduration,\n        placeholder: \"TT.MM.JJJJ\",\n        onChangeText: function onChangeText(date) {\n          return _this7.setState({\n            orderduration: date\n          });\n        }\n      }))), React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Bestellzeit: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, \" \", React.createElement(TextInput, {\n        value: this.state.ordertime,\n        placeholder: \"SS:MM\",\n        onChangeText: function onChangeText(time) {\n          return _this7.setState({\n            ordertime: time\n          });\n        }\n      })))), React.createElement(Text, null, \" \"), React.createElement(Button, {\n        disabled: !this.validateForm(),\n        title: \"Reifenbestellung best\\xE4tigen\",\n        onPress: this.handleSubmit\n      }), React.createElement(Text, null, \" \"), React.createElement(Button, {\n        title: \"zur\\xFCck\",\n        onPress: this.changeRace\n      })), React.createElement(View, {\n        style: {\n          justifyContent: 'flex-start'\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 30,\n          fontWeight: 'bold',\n          textAlign: 'center'\n        }\n      }, \"Reifensatz aktuell in Bearbeitung\"), React.createElement(\"table\", null, React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Reifenart: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, this.state.tyretype1)), React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Mischung: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, this.state.tyremix1)), React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Bearbeitungsvariante: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, this.state.variant1)), React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Bestellzeit: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, this.state.ordertime1))), React.createElement(Text, {\n        style: {\n          height: '10'\n        }\n      }), React.createElement(Text, {\n        style: bigStyle\n      }, \"Timer\"), React.createElement(Text, {\n        style: orderHeaderStyle\n      }, \" Reifenbestellung abholbereit in: \"), React.createElement(TextInput, {\n        style: orderTextStyle,\n        placeholder: \" SS:MM:SS\",\n        onChangeText: function onChangeText(time) {\n          return _this7.setState({\n            timervalue: time\n          });\n        }\n      }), React.createElement(\"button\", {\n        style: {\n          width: 300\n        },\n        disabled: !this.validateForm1(),\n        onClick: this.startTimer\n      }, \"Start\"), React.createElement(Text, {\n        style: orderFeedbackStyle\n      }, \"Stunden: \", this.state.time.h, \" Minuten: \", this.state.time.m, \" Sekunden: \", this.state.time.s, \" \"))), React.createElement(\"div\", null, React.createElement(\"h1\", {\n        id: \"title\"\n      }, \"Reifen bearbeiten\"), React.createElement(\"table\", {\n        id: \"list_formel\"\n      }, React.createElement(\"tbody\", null, React.createElement(\"tr\", null, this.renderWheelTable())))));\n    }\n  }]);\n\n  return NewOrderScreen;\n}(React.Component);\n\nexport { NewOrderScreen as default };\nvar bigStyle = {\n  color: 'black',\n  fontSize: 30,\n  fontWeight: 'bold'\n};\nvar subStyle = {\n  fontSize: 20,\n  height: 40\n};\nvar emptylineStyle = {\n  height: 20\n};\nvar orderHeaderStyle = {\n  height: 40,\n  width: 300,\n  margin: 3,\n  borderWidth: 1,\n  padding: 10,\n  backgroundColor: '#696969',\n  color: '#ffffff',\n  fontweight: 'bold',\n  fontSize: 16,\n  lineHeight: 16,\n  fontfamily: 'arial'\n};\nvar orderTextStyle = {\n  height: 30,\n  width: 300,\n  margin: 3,\n  borderWidth: 1,\n  padding: 10,\n  backgroundColor: '#d3d3d3',\n  fontSize: 14,\n  fontfamily: 'arial'\n};\nvar orderFeedbackStyle = {\n  height: 40,\n  width: 300,\n  margin: 3,\n  textAlign: 'center',\n  borderWidth: 1,\n  padding: 10,\n  backgroundColor: '#d3d3d3',\n  fontSize: 14\n};\nvar container1 = {\n  padding: '50px',\n  flexDirection: 'row',\n  justifyContent: 'space-around'\n};\nvar container2 = {};\nvar container3 = {};\nvar container4 = {\n  flexDirection: 'row',\n  justifyContent: 'space-evenly'\n};\nvar container5 = {\n  textAlign: 'center',\n  padding: '20px'\n};","map":{"version":3,"sources":["/home/toni/PycharmProjects/PropraSource/frontend/NewOrder.js"],"names":["React","styles","AsyncStorage","timeoutPromise","refreshToken","getRaceList","changeWheelSet","get_Dict_WheelOrder","getDropdown","getWheelSetInformation","NewOrderScreen","props","getRaceID","event","id","target","value","setItem","saveRaceIDinState","changeRace","preventDefault","navigation","replace","handleSubmit","state","setID","variant","orderduration","term","refresh_Buttons","handleSubmitButton1","setState","tyretype","tyremix","helper","dictButtons","handleSubmitButton2","handleSubmitButton3","index","handleSubmitButton4","handleSubmitButton5","handleSubmitButton6","handleAirPressureChange","fetch","method","headers","body","JSON","stringify","air_press","then","response","json","data","console","log","getWheelData","catch","error","handleWheelIDChange","wheel_id","wheel_id_tag","handleTemp","set_id","temp","raceid","tyretype1","tyremix1","variant1","ordertime","ordertime1","pickuptime","raceList","time","seconds","timervalue","wheels","listDropdown1","listDropdown2","listDropdown3","ButtonSlicks_Cold","ButtonSlicks_Medium","ButtonSlicks_Hot","ButtonInter","ButtonRainDryWet","ButtonRainHeavy","SetInformation","test_setid","test_list","timer","startTimer","bind","countDown","goBack","getItem","accesstoken","raceID","racelistDropdown","getWheelDict","getDropdownList","length","toString","DataTabular","listDropdown","setid","secs","hours","Math","floor","divisor_for_minutes","minutes","divisor_for_seconds","ceil","obj","hour","minute","second","atime","split","parseInt","stunde","sekunde","setInterval","secondsToTime","clearInterval","today","Date","h","getHours","m","getMinutes","push","map","wheel","textAlign","padding","color","fontFamily","border","borderColor","height","width","setNr","status","cat","subcat","fl_id","fl_wheel_id","fr_id","fr_wheel_id","bl_id","bl_wheel_id","br_id","br_wheel_id","fl_pressure","fr_pressure","bl_pressure","br_pressure","optionTemplate","v","name","container2","container3","container5","fontSize","fontWeight","container4","validateFormButton1","validateFormButton2","validateFormButton3","validateFormButton4","validateFormButton5","validateFormButton6","container1","justifyContent","text","date","validateForm","bigStyle","orderHeaderStyle","orderTextStyle","validateForm1","orderFeedbackStyle","s","renderWheelTable","Component","subStyle","emptylineStyle","margin","borderWidth","backgroundColor","fontweight","lineHeight","fontfamily","flexDirection"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Button, Text, TextInput, ToastAndroid, View} from \"react-native\";\nimport {styles} from \"./styles\"\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport {timeoutPromise, refreshToken,getRaceList,changeWheelSet} from \"./tools\";\nimport {get_Dict_WheelOrder, getDropdown,getWheelSetInformation} from \"./tools_get_wheels\";\n\n\nexport default class NewOrderScreen extends React.Component {\n   constructor(props) {\n        super(props);\n        this.state = {\n            raceid: 0,\n            tyretype: '',\n            tyremix: '',\n            term: '',\n            variant: '',\n            tyretype1: '',\n            tyremix1: '',\n            variant1: '',\n            orderduration: 0,\n            ordertime: '',\n            ordertime1: '',\n            pickuptime: '',\n            raceList: [],\n            time: {},\n            seconds: 1800,\n            timervalue: \"\",\n            wheels: [],\n            listDropdown1:[],\n            listDropdown2:[],\n            listDropdown3:[],\n            dictButtons:[],\n            ButtonSlicks_Cold: 'Slicks Cold',\n            ButtonSlicks_Medium: 'Slicks Medium',\n            ButtonSlicks_Hot: 'Slicks Hot',\n            ButtonInter: 'Inters Intermediate',\n            ButtonRainDryWet: 'Rain DryWet',\n            ButtonRainHeavy: 'Rain HeavyWet',\n            setID :0,\n            SetInformation:{},\n            test_setid:0,\n            test_list :[],\n\n        }\n        this.timer = 0;\n        this.startTimer = this.startTimer.bind(this);\n        this.countDown = this.countDown.bind(this);\n    }\n\n    changeMain(){\n        this.props.navigation.goBack();\n    }\n\n    // get Data\n    async componentDidMount(){\n        const accesstoken = await AsyncStorage.getItem('accesstoken');\n        const raceID = await AsyncStorage.getItem('raceID');\n        getDropdown(accesstoken,raceID).then(racelistDropdown => {\n            console.log(racelistDropdown);\n            this.setState({listDropdown1: racelistDropdown[0]});\n            this.setState({listDropdown2: racelistDropdown[1]});\n            this.setState({listDropdown3: racelistDropdown[2]});\n        }).catch(function (error) {\n            console.log(error);\n        })\n\n       console.log(2)\n        await this.getWheelDict();\n        await this.getDropdownList();\n        if (this.state.dictButtons.length==6){\n            this.setState({ButtonSlicks_Cold: 'Slicks Cold  '+this.state.dictButtons[0][0].toString()});\n            this.setState({ButtonSlicks_Medium: 'Slicks Medium  '+this.state.dictButtons[1][0].toString()});\n            this.setState({ButtonSlicks_Hot: 'Slicks Hot  '+this.state.dictButtons[2][0].toString()});\n            this.setState({ButtonInter: 'Inters Intermediate  '+this.state.dictButtons[3][0].toString()});\n            this.setState({ButtonRainDryWet: 'Rain DryWet  '+this.state.dictButtons[4][0].toString()});\n            this.setState({ButtonRainHeavy: 'Rain HeavyWet  '+this.state.dictButtons[5][0].toString()});\n\n            console.log(this.state.ButtonSlicks_Cold)\n\n        }\n        await this.getWheelData()\n    }\n\n    //get Wheel Data\n    async getWheelDict(){\n       const accesstoken = await AsyncStorage.getItem('accesstoken');\n       const raceID = await AsyncStorage.getItem('raceID');\n       //const raceID = await AsyncStorage.getItem('raceID');\n       console.log(raceID)\n       await get_Dict_WheelOrder(accesstoken, raceID).then(DataTabular => {\n                console.log(DataTabular);\n                this.setState({dictButtons: DataTabular});\n            }).catch(function (error) {\n                console.log(error);\n            })\n        console.log(this.state.dictButtons)\n    }\n    // get Dropdown list free,order,used\n    async getDropdownList(){\n       const accesstoken = await AsyncStorage.getItem('accesstoken');\n       const raceID = await AsyncStorage.getItem('raceID');\n       //const raceID = await AsyncStorage.getItem('raceID');\n       console.log(raceID)\n       await getDropdown(accesstoken, raceID).then(DataTabular => {\n                console.log(DataTabular);\n                this.setState({listDropdown: DataTabular});\n            }).catch(function (error) {\n                console.log(error);\n            })\n        console.log(this.state.listDropdown)\n    }\n\n   /* async openTabular(){\n       await this.getSetInformation();\n       //this.getWheelData();\n       //this.renderWheelTable();\n    }\n\n    // get Set Information\n    async getSetInformation(){\n        const accesstoken = await AsyncStorage.getItem('accesstoken');\n        const setID = await AsyncStorage.getItem('orderSetID');\n        //const raceID = await AsyncStorage.getItem('raceID');\n        console.log(setID)\n        await getWheelSetInformation(accesstoken, setID).then(DataTabular => {\n            console.log(DataTabular);\n            this.setState({SetInformation: DataTabular});\n        }).catch(function (error) {\n            console.log(error);\n        })\n\n    }*/\n\n    async getSetID(event){\n        AsyncStorage.setItem(\"SetIDDropdown\",event.target.value);\n        const setid = await AsyncStorage.getItem(\"SetID\");\n        console.log(setid);\n    }\n\n\n    getRaceID = event => {\n        const id = event.target.value;\n        AsyncStorage.setItem(\"raceIDHelper\", event.target.value);\n        this.saveRaceIDinState();\n    }\n\n\n\n    refresh_Buttons(){\n        if (this.state.dictButtons.length==6) {\n            this.setState({ButtonSlicks_Cold: 'Slicks Cold  ' + this.state.dictButtons[0][0].toString()});\n            this.setState({ButtonSlicks_Medium: 'Slicks Medium  ' + this.state.dictButtons[1][0].toString()});\n            this.setState({ButtonSlicks_Hot: 'Slicks Hot  ' + this.state.dictButtons[2][0].toString()});\n            this.setState({ButtonInter: 'Inters Intermediate  ' + this.state.dictButtons[3][0].toString()});\n            this.setState({ButtonRainDryWet: 'Rain DryWet  ' + this.state.dictButtons[4][0].toString()});\n            this.setState({ButtonRainHeavy: 'Rain HeavyWet  ' + this.state.dictButtons[5][0].toString()});\n        }\n        }\n\n\n    changeRace = event => {\n        event.preventDefault();\n        this.props.navigation.replace('Race');\n    }\n     handleSubmit = event => {\n        event.preventDefault();\n        changeWheelSet(this.state.setID,this.state.variant,this.state.orderduration,this.state.term);\n        AsyncStorage.setItem('orderSetID',this.state.setID);\n        this.refresh_Buttons();\n        //this.openTabular();\n    }\n\n\n    handleSubmitButton1 = event => {\n        event.preventDefault();\n        this.setState({tyretype: \"Slicks\"});\n        this.setState({tyremix: \"Cold\"});\n        let helper = this.state.dictButtons;\n        helper[0][0]= helper[0][0]-1;\n        this.setState({setID:helper[0][0]});\n        this.setState({dictButtons:helper});\n    }\n    handleSubmitButton2 = event => {\n        event.preventDefault();\n        this.setState({tyretype: \"Slicks\"});\n        this.setState({tyremix: \"Medium\"});\n        let helper = this.state.dictButtons;\n        helper[1][0]= helper[1][0]-1;\n        this.setState({setID: helper[1][1][helper[1][0]]});\n        this.setState({dictButtons: helper});\n\n\n    }\n    handleSubmitButton3 = event => {\n        event.preventDefault();\n        this.setState({tyretype: \"Slicks\"});\n        this.setState({tyremix: \"Hot\"});\n        let helper = this.state.dictButtons;\n        helper[2][0]= helper[2][0]-1;\n        const index = helper[2][0]\n        this.setState({setID:helper[2][1][index]});\n        this.setState({dictButtons:helper});\n    }\n    handleSubmitButton4 = event => {\n        event.preventDefault();\n        this.setState({tyretype: \"Inters\"});\n        this.setState({tyremix: \"Intermediate\"});\n        let helper = this.state.dictButtons;\n        helper[3][0]= helper[3][0]-1;\n        const index = helper[3][0]\n        this.setState({setID:helper[3][1][index]});\n        this.setState({dictButtons:helper});\n    }\n    handleSubmitButton5 = event => {\n        event.preventDefault();\n        this.setState({tyretype: \"Rain\"});\n        this.setState({tyremix: \"Dry Wet\"});\n        let helper = this.state.dictButtons;\n        helper[4][0]= helper[4][0]-1;\n        const index = helper[4][0]\n        this.setState({setID:helper[4][1][index]});\n        this.setState({dictButtons:helper});\n    }\n    handleSubmitButton6 = event => {\n        event.preventDefault();\n        this.setState({tyretype: \"Rain\"});\n        this.setState({tyremix: \"Heavy Wet\"});\n        let helper = this.state.dictButtons;\n        helper[5][0]= helper[5][0]-1;\n        const index = helper[5][0]\n        this.setState({setID:helper[5][1][index]});\n        this.setState({dictButtons:helper});\n    }\n\n\n        secondsToTime(secs)\n        {\n            let hours = Math.floor(secs / (60 * 60));\n            let divisor_for_minutes = secs % (60 * 60);\n            let minutes = Math.floor(divisor_for_minutes / 60);\n            let divisor_for_seconds = divisor_for_minutes % 60;\n            let seconds = Math.ceil(divisor_for_seconds);\n            let obj = {\n                \"h\": hours,\n                \"m\": minutes,\n                \"s\": seconds\n            };\n            return obj;\n        }\n\n        startTimer()\n        {\n            var hour = 0;\n            var minute = 0;\n            var second = 0;\n            var atime = this.state.timervalue.split(':');\n            if (atime[0].length > 0) {\n                hour = parseInt(atime[0]);\n            }\n            if (atime[1].length > 0) {\n                minute = parseInt(atime[1]);\n            }\n            if (atime[2].length > 0) {\n                second = parseInt(atime[2]);\n            }\n            this.state.seconds = stunde * 3600 + minute * 60 + sekunde;\n\n            if (this.state.seconds > 0) {\n                this.timer = setInterval(this.countDown, this.state.seconds);\n            }\n        }\n\n        countDown()\n        {\n            let seconds = this.state.seconds - 1;\n            this.setState({\n                time: this.secondsToTime(seconds),\n                seconds: seconds,\n            });\n            // Check if  zero.\n            if (seconds == 0) {\n                clearInterval(this.timer);\n            }\n        }\n\n        getTime()\n        {\n            var today = new Date();\n            var h = today.getHours();\n            var m = today.getMinutes();\n            return h + \":\" + m;\n        }\n\n        validateForm()\n        {\n            return this.state.orderduration.length > 0 && this.state.variant.length > 0 ;\n        }\n\n        validateFormButton1(){\n       return this.state.dictButtons.length==6 && this.state.dictButtons[0][0]>0;\n        }\n        validateFormButton2(){\n       return this.state.dictButtons.length==6 &&this.state.dictButtons[1][0]>0;\n        }\n        validateFormButton3(){\n       return this.state.dictButtons.length==6 && this.state.dictButtons[2][0]>0;\n        }\n        validateFormButton4(){\n       return this.state.dictButtons.length==6 && this.state.dictButtons[3][0]>0;\n        }validateFormButton5(){\n       return this.state.dictButtons.length==6 && this.state.dictButtons[4][0]>0;\n        }validateFormButton6(){\n       return this.state.dictButtons.length==6 && this.state.dictButtons[5][0]>0;\n        }\n\n\n\n        validateForm1()\n        {\n            return this.state.timervalue.length > 0;\n        }\n\n        async getWheelData(){\n            //this.setState({wheels: []});\n            const accesstoken = await AsyncStorage.getItem('accesstoken');\n        const setID = await AsyncStorage.getItem('orderSetID');\n        //const raceID = await AsyncStorage.getItem('raceID');\n        console.log(setID)\n        await getWheelSetInformation(accesstoken, setID).then(DataTabular => {\n            console.log(DataTabular);\n            this.setState({SetInformation: DataTabular});\n            this.state.wheels.push(this.state.SetInformation);\n        }).catch(function (error) {\n            console.log(error);\n        })\n\n            console.log(this.state.wheels)\n        }\n\n        handleAirPressureChange = event => {\n            timeoutPromise(2000, fetch(\n            'https://api.race24.cloud/wheel_cont/change_air_pressWheel', {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    id: event.target.id,\n                    air_press: event.target.value,\n                })\n            })\n            ).then(response => response.json()).then(data => {\n                if (data[1]==200) {\n                    console.log(\"Pressure Changed\")\n                    this.getWheelData().then(() => {return})\n                }\n                else {\n                    console.log(\"failed\")\n                }\n            }).catch(function (error) {\n                console.log(error);\n            })\n        }\n\n        handleWheelIDChange = event => {\n            timeoutPromise(2000, fetch(\n            'https://api.race24.cloud/wheel/set_id_tag', {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    wheel_id: event.target.id,\n                    wheel_id_tag: event.target.value,\n                })\n            })\n            ).then(response => response.json()).then(data => {\n                if (data[1]==200) {\n                    console.log(\"ID Changed\")\n                    this.getWheelData().then(() => {return})\n                }\n                else {\n                    console.log(\"failed\")\n                }\n            }).catch(function (error) {\n                console.log(error);\n            })\n        }\n\n\n        handleTemp = event => {\n            timeoutPromise(2000, fetch(\n            'https://api.race24.cloud/wheel/set_temp', {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    set_id: event.target.id,\n                    temp: event.target.value,\n                })\n            })\n            ).then(response => response.json()).then(data => {\n                if (data[1]==200) {\n                    console.log(\"temp Changed\")\n                    this.getWheelData().then(() => {return})\n                }\n                else {\n                    console.log(\"failed\")\n                }\n            }).catch(function (error) {\n                console.log(error);\n            })\n        }\n\n\n        renderWheelTable(){\n            console.log(\"Render Table\");\n            console.log(this.state.wheels);\n            return this.state.wheels.map((wheel,) => {\n                console.log(wheel);\n                console.log(wheel.setid);\n                return (\n                    <tr  bgcolor='#808080' style={{textAlign: \"left\", padding: '8px', color: 'white', fontFamily: 'arial'}} key={wheel.setid}>\n                        <td style={{border: \"solid\", borderColor: 'grey', height: 25, width: 150, padding: '8px',textAlign: 'center'}}>{wheel.setNr}</td>\n                        <td style={{border: \"solid\", borderColor: 'grey', height: 25, width: 150, padding: '8px',textAlign: 'center'}}>{wheel.status}</td>\n                        <td style={{border: \"solid\", borderColor: 'grey', height: 25, width: 150, padding: '8px',textAlign: 'center'}}>{wheel.cat}</td>\n                        <td style={{border: \"solid\", borderColor: 'grey', height: 25, width: 150, padding: '8px',textAlign: 'center'}}>{wheel.subcat}</td>\n                        <td style={{border: \"solid\", borderColor: 'grey', height: 25, width: 150, padding: '8px',textAlign: 'center'}}><input id={wheel.setid}  placeholder={'Temperatur'} onChange={this.handleTemp} value={wheel.temp}/></td>\n                        <td style={{border: \"solid\", borderColor: 'grey', height: 25, width: 150, padding: '8px',textAlign: 'center'}}><input id={wheel.fl_id} placeholder={'FL ID'} onChange={this.handleWheelIDChange} value={wheel.fl_wheel_id}/><input id={wheel.fr_id} placeholder={'FR ID'}  onChange={this.handleWheelIDChange} value={wheel.fr_wheel_id}/><input id={wheel.bl_id} placeholder={'BL ID'} onChange={this.handleWheelIDChange} value={wheel.bl_wheel_id}/><input id={wheel.br_id} placeholder={'BR ID '} onChange={this.handleWheelIDChange} value={wheel.br_wheel_id}/></td>\n                        <td style={{border: \"solid\", borderColor: 'grey', height: 25, width: 150, padding: '8px',textAlign: 'center'}}><input id={wheel.fl_id} placeholder={'FL Luftdruck'} onChange={this.handleAirPressureChange} value={wheel.fl_pressure}/><input id={wheel.fr_id} placeholder={'FR Luftdruck'} onChange={this.handleAirPressureChange}  value={wheel.fr_pressure}/><input id={wheel.bl_id} placeholder={'BL Luftdruck'} onChange={this.handleAirPressureChange} value={wheel.bl_pressure}/><input id={wheel.br_id}  placeholder={'BR Luftdruck'} onChange={this.handleAirPressureChange} value={wheel.br_pressure}/></td>\n                    </tr>\n                )\n            })\n        }\n\n        render()\n        {\n            let optionTemplate = this.state.raceList.map(v => (\n            <option value={v.id} key={v.id}>{v.name}</option>\n            ));\n\n            return (\n                <View style={container2}>\n                    <View style={container3}>\n                        <View style={container5}>\n                        <Text style={{fontSize: 40, fontWeight: 'bold', textAlign: 'center'}}>\n                        Neue Reifenbestellung anlegen\n                    </Text>\n                        </View>\n                        <View style={container4}>\n                            <Button\n                            disabled={!this.validateFormButton1()}\n                            title= {this.state.ButtonSlicks_Cold}\n                            onPress={this.handleSubmitButton1}\n                        />\n                        <Button\n                            disabled={!this.validateFormButton2()}\n                            title= {this.state.ButtonSlicks_Medium}\n                            onPress={this.handleSubmitButton2}\n                        />\n                        <Button\n                            disabled={!this.validateFormButton3()}\n                            title= {this.state.ButtonSlicks_Hot}\n                            onPress={this.handleSubmitButton3}\n                        />\n                        <Button\n                            disabled={!this.validateFormButton4()}\n                            title={this.state.ButtonInter}\n                            onPress={this.handleSubmitButton4}\n                        />\n                        <Button\n                            disabled={!this.validateFormButton5()}\n                            title= {this.state.ButtonRainDryWet}\n                            onPress={this.handleSubmitButton5}\n                        />\n                        <Button\n                            disabled={!this.validateFormButton6()}\n                            title={this.state.ButtonRainHeavy}\n                            onPress={this.handleSubmitButton6}\n                        />\n\n                        </View>\n                    </View>\n                <View style={container1}>\n                <View style={{justifyContent: 'flex-start'}}>\n                    <Text style={{height: 10}}> </Text>\n                    <table >\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Reifenart: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}><TextInput value={this.state.tyretype}\n                                   onChangeText={(text) => this.setState({tyretype: text})}/></td>\n                    </tr>\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Mischung: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}> <TextInput value={this.state.tyremix}\n                                    onChangeText={(text) => this.setState({tyremix: text})}/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Bezeichnung: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}><TextInput value={this.state.term}\n                                  onChangeText={(text) => this.setState({term: text})}/></td>\n                    </tr>\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Bearbeitungsvariante: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}><TextInput value={this.state.variant}\n                                   onChangeText={(text) => this.setState({variant: text})}/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Bestelldauer: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}> <TextInput value={this.state.orderduration}\n                                   placeholder='TT.MM.JJJJ' onChangeText={(date) => this.setState({orderduration: date})}/></td>\n                    </tr>\n                   <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Bestellzeit: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}> <TextInput value={this.state.ordertime}\n                                   placeholder='SS:MM' onChangeText={(time) => this.setState({ordertime: time})}/></td>\n                    </tr>\n                </table>\n                        <Text> </Text>\n                        <Button\n                            disabled={!this.validateForm()}\n                            title=\"Reifenbestellung bestätigen\"\n                            onPress={this.handleSubmit}\n                        />\n                        <Text> </Text>\n                        <Button\n                            title=\"zurück\"\n                            onPress={this.changeRace}\n                            />\n                    </View>\n                <View style={{justifyContent: 'flex-start'}}>\n                    <Text style={{fontSize: 30, fontWeight: 'bold', textAlign: 'center'}}>\n                        Reifensatz aktuell in Bearbeitung\n                    </Text>\n                     <table>\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Reifenart: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}>{this.state.tyretype1}</td>\n                    </tr>\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Mischung: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}>{this.state.tyremix1}</td>\n                    </tr>\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Bearbeitungsvariante: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}>{this.state.variant1}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Bestellzeit: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}>{this.state.ordertime1}\n                        </td>\n                    </tr>\n                     </table>\n                    <Text style={{height: '10'}}></Text>\n                    <Text style={bigStyle}>\n                        Timer\n                    </Text>\n                        <Text style={orderHeaderStyle}> Reifenbestellung abholbereit in: </Text>\n                        <TextInput\n                            style={orderTextStyle}\n                            placeholder=\" SS:MM:SS\"\n                            onChangeText={(time) => this.setState({timervalue: time})}\n                        />\n                        <button style={{width:300}}\n\n                            disabled={!this.validateForm1()}\n                            onClick={this.startTimer}>Start\n                        </button>\n                        <Text style={orderFeedbackStyle}>\n                            Stunden: {this.state.time.h} Minuten: {this.state.time.m} Sekunden: {this.state.time.s} </Text>\n                    </View>\n            </View>\n\n\n                    <div>\n                <h1 id='title'>Reifen bearbeiten</h1>\n                <table  id='list_formel'>\n                   <tbody>\n                        <tr>\n                        {this.renderWheelTable()}\n                        </tr>\n                    </tbody>\n                </table>\n                </div>\n\n        </View>\n            );\n        }\n    }\n\n\n    const\n    bigStyle = {\n        color: 'black',\n        fontSize: 30,\n        fontWeight: 'bold'\n    }\n\n    const\n    subStyle = {\n        fontSize: 20,\n        height: 40\n    }\n\n    const\n    emptylineStyle = {\n        height: 20,\n    }\n\n    const\n    orderHeaderStyle = {\n        height: 40,\n        width: 300,\n        margin: 3,\n        borderWidth: 1,\n        padding: 10,\n        backgroundColor: '#696969',\n        color: '#ffffff',\n        fontweight: 'bold',\n        fontSize: 16,\n        lineHeight: 16,\n        fontfamily: 'arial'\n    };\n\n    const\n    orderTextStyle = {\n        height: 30,\n        width: 300,\n        margin: 3,\n        borderWidth: 1,\n        padding: 10,\n        backgroundColor: '#d3d3d3',\n        fontSize: 14,\n        fontfamily: 'arial'\n    };\n\n    const\n    orderFeedbackStyle = {\n        height: 40,\n        width: 300,\n        margin: 3,\n        textAlign: 'center',\n        borderWidth: 1,\n        padding: 10,\n        backgroundColor: '#d3d3d3',\n        fontSize: 14\n    };\n    const container1 ={\n        padding: '50px',\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n    };\n    const container2={\n\n    };\n    const container3={\n\n\n    };\n    const container4={\n        flexDirection: 'row',\n        justifyContent: 'space-evenly',\n\n    };\n    const container5={\n        textAlign: 'center',\n        padding: '20px',\n\n    };"]},"metadata":{},"sourceType":"module"}