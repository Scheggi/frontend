{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/toni/PycharmProjects/PropraSource/frontend/Login.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { styles } from \"./styles\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { timeoutPromise } from \"./tools\";\nimport Text from \"react-native-web/dist/vendor/react-native/Animated/components/AnimatedText\";\n\nvar LoginScreen = function (_React$Component) {\n  _inherits(LoginScreen, _React$Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen(props) {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _super.call(this, props);\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      _this.sendLoginRequest(_this.state.username, _this.state.password);\n    };\n\n    _this.state = {\n      username: \"\",\n      password: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"validateForm\",\n    value: function validateForm() {\n      return this.state.username.length > 0 && this.state.password.length > 0;\n    }\n  }, {\n    key: \"sendLoginRequest\",\n    value: function sendLoginRequest(username, password) {\n      var _this2 = this;\n\n      return _regeneratorRuntime.async(function sendLoginRequest$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              timeoutPromise(2000, fetch('https://api.race24.cloud/user/auth/login', {\n                method: 'POST',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  username: username,\n                  password: password\n                })\n              })).then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                if (data[1] == 200) {\n                  AsyncStorage.setItem('accesstoken', String(data[0].access_token));\n                  AsyncStorage.setItem('refreshtoken', String(data[0].refresh_token));\n                  AsyncStorage.setItem('userid', String(data[0].userid));\n                  AsyncStorage.setItem('usergroup', String(data[0].usergroup));\n                  console.log(data[0].usergroup);\n\n                  _this2.props.navigation.replace('Splash');\n                } else {\n                  console.log(\"Login failed\");\n                }\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: {\n          overflowY: 'scroll',\n          flex: 1,\n          backgroundColor: '#2e3742'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        style: {\n          marginLeft: 'auto',\n          marginRight: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }\n      }, React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }\n      }), React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }\n      }), React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }\n      }), React.createElement(\"h1\", {\n        className: \"display-4\",\n        style: {\n          color: '#d0d7de',\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }\n      }, \" Reifenmanagement\"), React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }\n      })), React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }), React.createElement(\"div\", {\n        className: \"input-group\",\n        style: {\n          width: 400,\n          marginLeft: 'auto',\n          marginRight: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      }, React.createElement(\"label\", {\n        className: \"input-group-text\",\n        style: {\n          backgroundColor: '#d0d7de'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }\n      }, \" Usernamen eingeben: \"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        \"aria-label\": \"Server\",\n        value: this.state.type,\n        onChange: function onChange(username) {\n          return _this3.setState({\n            username: username.target.value\n          });\n        },\n        placeholder: \"Username\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }\n      })), React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }\n      }), React.createElement(\"div\", {\n        className: \"input-group\",\n        style: {\n          width: 400,\n          marginLeft: 'auto',\n          marginRight: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }\n      }, React.createElement(\"label\", {\n        className: \"input-group-text\",\n        style: {\n          backgroundColor: '#d0d7de'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }\n      }, \" Passwort eingeben: \"), React.createElement(\"input\", {\n        type: \"password\",\n        className: \"form-control\",\n        \"aria-label\": \"Server\",\n        value: this.state.place,\n        secureTextEntry: true,\n        onChange: function onChange(password) {\n          return _this3.setState({\n            password: password.target.value\n          });\n        },\n        placeholder: \"Passwort\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }\n      })), React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }\n      }), React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }\n      }), React.createElement(\"button\", {\n        disabled: !this.validateForm(),\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: this.handleSubmit,\n        style: {\n          marginLeft: 'auto',\n          marginRight: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }, \" EINLOGGEN\"));\n    }\n  }]);\n\n  return LoginScreen;\n}(React.Component);\n\nexport { LoginScreen as default };","map":{"version":3,"sources":["/home/toni/PycharmProjects/PropraSource/frontend/Login.js"],"names":["React","styles","AsyncStorage","timeoutPromise","Text","LoginScreen","props","handleSubmit","event","preventDefault","sendLoginRequest","state","username","password","length","fetch","method","headers","body","JSON","stringify","then","response","json","data","setItem","String","access_token","refresh_token","userid","usergroup","console","log","navigation","replace","catch","error","overflowY","flex","backgroundColor","marginLeft","marginRight","color","textAlign","width","type","setState","target","value","place","validateForm","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {TextInput, Button, View, ImageBackground} from \"react-native\";\nimport {styles} from \"./styles\"\n//import { AsyncStorage } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport {timeoutPromise} from \"./tools\"\nimport Text from \"react-native-web/dist/vendor/react-native/Animated/components/AnimatedText\";\n // import image from './images/audi.jpg';\n\nexport default class LoginScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: \"\",\n            password: \"\"\n        };\n    }\n    validateForm() {\n        return this.state.username.length > 0 && this.state.password.length > 0;\n    }\n    handleSubmit = event => {\n        event.preventDefault();\n        this.sendLoginRequest(this.state.username, this.state.password);\n    }\n\n\n    async sendLoginRequest(username, password) {\n       timeoutPromise(2000, fetch(\n            'https://api.race24.cloud/user/auth/login', {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    username: username,\n                    password: password,\n                })\n            })\n            ).then(response => response.json()).then(data => {\n                if (data[1]==200) {\n                    AsyncStorage.setItem('accesstoken', String(data[0].access_token));\n                    AsyncStorage.setItem('refreshtoken', String(data[0].refresh_token));\n                    AsyncStorage.setItem('userid', String(data[0].userid));\n                    AsyncStorage.setItem('usergroup',String(data[0].usergroup));\n                    console.log(data[0].usergroup)\n                    this.props.navigation.replace('Splash');\n\n                }\n                else {\n                    console.log(\"Login failed\")\n                }\n            }).catch(function (error) {\n                console.log(error);\n            })\n    }\n\n // <ImageBackground source={image} resizeMode=\"cover\" style={images}> </ImageBackground>\n\n    render() {\n        return (\n            <View style={{overflowY: 'scroll', flex: 1, backgroundColor: '#2e3742'}}>\n            <div className='container' style={{marginLeft: 'auto', marginRight: 'auto'}}>\n                    <br/>\n                    <br/>\n                    <br/>\n                    <h1 className=\"display-4\" style={{color: '#d0d7de', textAlign: 'center'}}> Reifenmanagement</h1>\n                    <br/>\n                </div>\n                <br/>\n                <div className='input-group' style={{width: 400, marginLeft: 'auto', marginRight: 'auto'}}>\n                    <label className='input-group-text' style={{backgroundColor: '#d0d7de'}}> Usernamen eingeben: </label>\n                    <input type='text' className='form-control' aria-label='Server' value={this.state.type}\n                            onChange={(username) => this.setState({username: username.target.value})} placeholder='Username'/>\n                </div>\n                <br/>\n                <div className='input-group' style={{width: 400, marginLeft: 'auto', marginRight: 'auto'}}>\n                    <label className='input-group-text' style={{backgroundColor: '#d0d7de'}}> Passwort eingeben: </label>\n                    <input type='password' className='form-control' aria-label='Server' value={this.state.place}\n                            secureTextEntry={true} onChange={(password) => this.setState({password:password.target.value})} placeholder='Passwort'/>\n                </div>\n                <br/>\n                <br/>\n                <button disabled={!this.validateForm()} type='button' className='btn btn-primary'\n                        onClick={this.handleSubmit} style={{marginLeft: 'auto', marginRight: 'auto'}}> EINLOGGEN\n                </button>\n            </View>\n\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}