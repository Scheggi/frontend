{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { createKeyboardAwareNavigator } from \"react-navigation\";\n\nfunction generateAllSets(raceID, set, cat, subcat, numberOfSets) {\n  for (var i = 1; i < parseInt(numberOfSets) + 1; i++) {\n    console.log(i);\n    generateNewWheelSet(raceID, i, cat, subcat);\n  }\n}\n\nfunction generateNewWheelSet(raceID, setNr, cat, subcat) {\n  var cols, i;\n  return _regeneratorRuntime.async(function generateNewWheelSet$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          cols = [];\n          i = 0;\n\n        case 2:\n          if (!(i < 4)) {\n            _context.next = 8;\n            break;\n          }\n\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(sendWheelRequest(0, '', '').then(function (Data) {\n            console.log(Data);\n            cols.push(Data);\n          }).catch(function (error) {\n            console.log(error);\n          }));\n\n        case 5:\n          i++;\n          _context.next = 2;\n          break;\n\n        case 8:\n          console.log(cols);\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(sendWheelsRequest(parseInt(cols[0]), parseInt(cols[1]), parseInt(cols[2]), parseInt(cols[3]), '').then(function (Data) {\n            console.log(Data);\n            cols.push(Data);\n          }).catch(function (error) {\n            console.log(error);\n          }));\n\n        case 11:\n          console.debug(cols[4]);\n          sendNewSetRequest(raceID, setNr, cat, subcat, cols[4]);\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction sendWheelRequest(accestoken) {\n  var air_press,\n      id_scan,\n      id,\n      _args2 = arguments;\n  return _regeneratorRuntime.async(function sendWheelRequest$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          air_press = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : 0;\n          id_scan = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : '';\n          id = _args2.length > 3 && _args2[3] !== undefined ? _args2[3] : '';\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(timeoutPromise(2000, fetch('https://api.race24.cloud/wheel_cont/createWheel', {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              aceess_tolen: accestoken,\n              air_press: air_press,\n              id_scan: id_scan,\n              id: id\n            })\n          })).then(function (response) {\n            return response.json();\n          }).then(function (data) {\n            if (\"msg\" in data) {\n              if (data[\"msg\"] === \"Token has expired\") {\n                refreshToken().then(function (token) {\n                  sendWheelRequest(accestoken, air_press, id_scan, id);\n                }).catch(function (error) {\n                  console.log(\"Refresh failed\");\n                  console.log(error);\n                });\n                return [];\n              }\n            } else {\n              console.log(\"Return Data\");\n              console.log(data[0].id);\n              return data[0].id;\n            }\n\n            return [];\n          }).catch(function (error) {\n            console.log(error);\n            return [];\n          }));\n\n        case 5:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 6:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction sendWheelsRequest(accestoken, id_FL, id_FR, id_BL, id_BR) {\n  var id,\n      _args3 = arguments;\n  return _regeneratorRuntime.async(function sendWheelsRequest$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          id = _args3.length > 5 && _args3[5] !== undefined ? _args3[5] : '';\n          console.log([id_FL, id_FR, id_BL, id_BR]);\n          _context3.next = 4;\n          return _regeneratorRuntime.awrap(timeoutPromise(2000, fetch('https://api.race24.cloud/wheel_cont/createWheels', {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              acces_token: accestoken,\n              id_FL: id_FL,\n              id_FR: id_FR,\n              id_BL: id_BL,\n              id_BR: id_BR,\n              id: id\n            })\n          })).then(function (response) {\n            return response.json();\n          }).then(function (data) {\n            if (\"msg\" in data) {\n              if (data[\"msg\"] === \"Token has expired\") {\n                refreshToken().then(function (token) {\n                  sendWheelsRequest(accestoken, id_FL, id_FR, id_BL, id_BR, id);\n                }).catch(function (error) {\n                  console.log(\"Refresh failed\");\n                  console.log(error);\n                });\n                return [];\n              }\n            } else {\n              console.log(\"Return Data\");\n              console.log(data[0].id);\n              return data[0].id;\n            }\n\n            return [];\n          }).catch(function (error) {\n            console.log(error);\n            return [];\n          }));\n\n        case 4:\n          return _context3.abrupt(\"return\", _context3.sent);\n\n        case 5:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction sendWheelSetRequest(id_FL, id_FR, id_BL, id_BR) {\n  var id,\n      _args4 = arguments;\n  return _regeneratorRuntime.async(function sendWheelSetRequest$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          id = _args4.length > 4 && _args4[4] !== undefined ? _args4[4] : '';\n          timeoutPromise(2000, fetch('https://api.race24.cloud/wheel_cont/createWheels', {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id_FL: id_FL,\n              id_FR: id_FR,\n              id_BL: id_BL,\n              id_BR: id_BR,\n              id: id\n            })\n          })).then(function (response) {\n            return response.json();\n          }).then(function (response) {\n            return response.json();\n          }).then(function (data) {\n            if (data[1] == 200) {\n              console.log(data);\n              return data[0].id;\n            }\n          }).catch(function (error) {\n            console.log(error);\n            return 0;\n          });\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction sendNewSetRequest(raceID, setNr, cat, subcat, wheels) {\n  return _regeneratorRuntime.async(function sendNewSetRequest$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          console.log([raceID, setNr, cat, subcat, wheels]);\n          timeoutPromise(2000, fetch('https://api.race24.cloud/wheel_cont/createSet', {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: '',\n              setNr: setNr,\n              cat: cat,\n              subcat: subcat,\n              raceID: raceID,\n              wheels: wheels\n            })\n          })).then(function (response) {\n            return response.json();\n          }).then(function (data) {\n            if (data[1] == 200) {\n              console.log(data);\n            }\n\n            ;\n            return data[0].id;\n          }).catch(function (error) {\n            console.log(error);\n          });\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction timeoutPromise(ms, promise) {\n  return new Promise(function (resolve, reject) {\n    var timeoutId = setTimeout(function () {\n      reject(new Error('promise timeout'));\n    }, ms);\n    promise.then(function (res) {\n      clearTimeout(timeoutId);\n      resolve(res);\n    }, function (err) {\n      clearTimeout(timeoutId);\n      reject(err);\n    });\n  });\n}\n\nfunction refreshToken() {\n  var accesstoken, refreshtoken;\n  return _regeneratorRuntime.async(function refreshToken$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('accesstoken'));\n\n        case 2:\n          accesstoken = _context6.sent;\n          _context6.next = 5;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('refreshtoken'));\n\n        case 5:\n          refreshtoken = _context6.sent;\n          _context6.next = 8;\n          return _regeneratorRuntime.awrap(timeoutPromise(2000, fetch('https://api.race24.cloud/user/auth/refresh', {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              access_token: accesstoken,\n              refresh_token: refreshtoken\n            })\n          })).then(function (response) {\n            return response.json();\n          }).then(function (data) {\n            AsyncStorage.setItem('accesstoken', String(data.access_token));\n          }));\n\n        case 8:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexport { generateAllSets, sendWheelRequest, sendNewSetRequest, sendWheelsRequest };","map":{"version":3,"sources":["/home/toni/PycharmProjects/PropraSource/frontend/tools_wheel.js"],"names":["AsyncStorage","createKeyboardAwareNavigator","generateAllSets","raceID","set","cat","subcat","numberOfSets","i","parseInt","console","log","generateNewWheelSet","setNr","cols","sendWheelRequest","then","Data","push","catch","error","sendWheelsRequest","debug","sendNewSetRequest","accestoken","air_press","id_scan","id","timeoutPromise","fetch","method","headers","body","JSON","stringify","aceess_tolen","response","json","data","refreshToken","token","id_FL","id_FR","id_BL","id_BR","acces_token","sendWheelSetRequest","wheels","ms","promise","Promise","resolve","reject","timeoutId","setTimeout","Error","res","clearTimeout","err","getItem","accesstoken","refreshtoken","access_token","refresh_token","setItem","String"],"mappings":"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","sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\nimport {createKeyboardAwareNavigator} from \"react-navigation\";\n\nfunction generateAllSets(raceID,set,cat,subcat,numberOfSets){\n        for(let i =1; i < parseInt(numberOfSets)+1;i++){\n            console.log(i);\n            generateNewWheelSet(raceID,i,cat,subcat);\n        }\n    }\n\n\n\nasync function generateNewWheelSet(raceID,setNr,cat,subcat){\n    let cols = [];\n    for (let i =0; i < 4; i++) {\n        await sendWheelRequest(0,'', '').then(Data => {\n            console.log(Data);\n            cols.push(Data);\n        }).catch(function (error) {\n            console.log(error);\n        })\n        //const idwheel = await AsyncStorage.getItem('WheelID')\n\n    }\n    console.log(cols)\n  await sendWheelsRequest(parseInt( cols[0]), parseInt(cols[1]), parseInt(cols[2]), parseInt(cols[3]), '').then(Data => {\n            console.log(Data);\n            cols.push(Data);\n        }).catch(function (error) {\n            console.log(error);\n        });\n    console.debug(cols[4])\n    // sendNewSetRequest(raceID,setNr,cat,subcat,wheels)\n    sendNewSetRequest(raceID,setNr,cat, subcat,cols[4] );\n}\n\n\nasync function sendWheelRequest(accestoken,air_press = 0,id_scan='',id = '' ) {\n   return await timeoutPromise(2000, fetch(\n        'https://api.race24.cloud/wheel_cont/createWheel', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                aceess_tolen:accestoken,\n                air_press:air_press,\n                id_scan:id_scan,\n                id:id,\n            })\n        })\n        ).then(response => response.json()).then(data => {\n                if (\"msg\" in data){\n                            if (data[\"msg\"] === \"Token has expired\"){\n                                refreshToken().then( token => {\n                                    sendWheelRequest(accestoken,air_press,id_scan,id  );\n                                    }\n                                ).catch( function (error) {\n                                        console.log(\"Refresh failed\");\n                                        console.log(error);\n                                    }\n                                );\n                                return [];\n                            }\n                        }\n              else{\n                  console.log(\"Return Data\");\n                  console.log(data[0].id);\n                  return data[0].id;\n              }\n              return [];\n      }).catch(function (error) {\n            console.log(error);\n            return [];\n        })\n}\n\n\n\n//generate one wheelS and return id\nasync function sendWheelsRequest(accestoken,id_FL,id_FR,id_BL,id_BR,id = '') {\n    console.log([id_FL,id_FR,id_BL,id_BR]);\n   return await timeoutPromise(2000, fetch(\n        'https://api.race24.cloud/wheel_cont/createWheels', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                acces_token:accestoken,\n                id_FL:id_FL,\n                id_FR:id_FR,\n                id_BL:id_BL,\n                id_BR:id_BR,\n                id:id,\n            })\n        })\n        ).then(response => response.json()).then(data => {\n                if (\"msg\" in data){\n                            if (data[\"msg\"] === \"Token has expired\"){\n                                refreshToken().then( token => {\n                                    sendWheelsRequest(accestoken,id_FL,id_FR,id_BL,id_BR,id );\n                                    }\n                                ).catch( function (error) {\n                                        console.log(\"Refresh failed\");\n                                        console.log(error);\n                                    }\n                                );\n                                return [];\n                            }\n                        }\n              else{\n                  console.log(\"Return Data\");\n                  console.log(data[0].id);\n                  return data[0].id;\n              }\n              return [];\n      }).catch(function (error) {\n            console.log(error);\n            return [];\n        })\n}\n\n\n//generate one wheelsSet and return id\nasync function sendWheelSetRequest(id_FL,id_FR,id_BL,id_BR,id = '') {\n   timeoutPromise(2000, fetch(\n        'https://api.race24.cloud/wheel_cont/createWheels', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                id_FL:id_FL,\n                id_FR:id_FR,\n                id_BL:id_BL,\n                id_BR:id_BR,\n                id:id,\n            })\n        })\n        ).then(response => response.json()).then(response => response.json()).then(\n            data => {\n                if (data[1]==200){\n              console.log(data);\n              return data[0].id;\n              }\n      }).catch(function (error) {\n            console.log(error);\n            return 0;\n        })\n}\n\n\n\n\n//create new Set request\nasync function sendNewSetRequest(raceID,setNr,cat,subcat,wheels) {\n    console.log([raceID,setNr,cat,subcat,wheels])\n   timeoutPromise(2000, fetch(\n        'https://api.race24.cloud/wheel_cont/createSet', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                id: '',\n                setNr:setNr,\n                cat:cat,\n                subcat:subcat,\n                raceID:raceID,\n                wheels : wheels,\n            })\n        })\n        ).then(response => response.json()).then(\n            data =>{\n                if(data[1]==200){\n                console.log(data)};\n                return data[0].id\n            }).catch(function (error) {\n            console.log(error);\n        })\n}\n\n\n//  ----------------------------------------------------------------------------------------------\n\nfunction timeoutPromise(ms, promise) {\n  return new Promise((resolve, reject) => {\n    const timeoutId = setTimeout(() => {\n      reject(new Error('promise timeout'))\n    }, ms);\n    promise.then(\n      (res) => {\n        clearTimeout(timeoutId);\n        resolve(res);\n      },\n      (err) => {\n        clearTimeout(timeoutId);\n        reject(err);\n      }\n    );\n  })\n}\n\n\n\nasync function refreshToken() {\n  let accesstoken = await AsyncStorage.getItem('accesstoken');\n  let refreshtoken = await AsyncStorage.getItem('refreshtoken');\n  await timeoutPromise(2000, fetch(\n      'https://api.race24.cloud/user/auth/refresh', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          access_token: accesstoken,\n          refresh_token: refreshtoken,\n        })\n      }\n  )).then(\n      response => response.json()\n  ).then(\n      data => {\n        AsyncStorage.setItem('accesstoken', String(data.access_token));\n      }\n  )\n}\n\n\n\nexport {generateAllSets,sendWheelRequest,sendNewSetRequest,sendWheelsRequest}\n\n"]},"metadata":{},"sourceType":"module"}