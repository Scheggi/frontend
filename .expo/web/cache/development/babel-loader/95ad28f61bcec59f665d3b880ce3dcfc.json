{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { styles } from \"./styles\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { timeoutPromise, refreshToken, syncData, getRaceList, getFormelList } from \"./tools\";\n\nvar FormelScreen = function (_React$Component) {\n  _inherits(FormelScreen, _React$Component);\n\n  var _super = _createSuper(FormelScreen);\n\n  function FormelScreen(props) {\n    var _this;\n\n    _classCallCheck(this, FormelScreen);\n\n    _this = _super.call(this, props);\n\n    _this.changeRace = function (event) {\n      event.preventDefault();\n\n      _this.props.navigation.goBack();\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      _this.sendNewFormelRequest(_this.state.formel);\n    };\n\n    _this.state = {\n      list_formel: [],\n      formel: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(FormelScreen, [{\n    key: \"validateForm\",\n    value: function validateForm() {\n      return this.state.formel.length > 0;\n    }\n  }, {\n    key: \"sendNewFormelRequest\",\n    value: function sendNewFormelRequest(formel) {\n      var _this2 = this;\n\n      return _regeneratorRuntime.async(function sendNewFormelRequest$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(formel);\n              timeoutPromise(2000, fetch('https://api.race24.cloud/formel/create', {\n                method: 'POST',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  formel: formel\n                })\n              })).then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                if (data[1] == 200) {\n                  _this2.getTabularData();\n                } else {\n                  console.log(\"failed\");\n                }\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"getTabularData\",\n    value: function getTabularData() {\n      var _this3 = this;\n\n      var accesstoken;\n      return _regeneratorRuntime.async(function getTabularData$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('accesstoken'));\n\n            case 2:\n              accesstoken = _context2.sent;\n              getFormelList(accesstoken).then(function (formellistTab) {\n                console.log(formellistTab);\n\n                _this3.setState({\n                  list_formel: formellistTab\n                });\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(this.getTabularData());\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"renderTableData\",\n    value: function renderTableData() {\n      console.log(this.state.list_formel);\n      return this.state.list_formel.map(function (list_formel, index) {\n        var n = list_formel.n,\n            formel = list_formel.formel;\n        return React.createElement(\"tr\", {\n          key: n\n        }, React.createElement(\"td\", null, n), React.createElement(\"td\", null, formel));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(View, {\n        style: styles.viewStyles\n      }, React.createElement(Text, {\n        style: styles.textStyles\n      }, \"24 Stunden Rennen\"), React.createElement(Text, {\n        style: {\n          height: 60\n        }\n      }, \"Neue Formel anlegen\"), React.createElement(View, null, React.createElement(TextInput, {\n        style: {\n          height: 50\n        },\n        placeholder: \" hier eingeben\",\n        onChangeText: function onChangeText(text) {\n          return _this4.setState({\n            formel: text\n          });\n        }\n      }), React.createElement(Button, {\n        disabled: !this.validateForm(),\n        title: \"neue Formel anlegen\",\n        onPress: this.handleSubmit\n      })), React.createElement(\"div\", null, React.createElement(\"h1\", {\n        id: \"title\"\n      }, \"Formeln\"), React.createElement(\"table\", {\n        id: \"list_formel\"\n      }, React.createElement(\"tbody\", null, this.renderTableData()))), React.createElement(Button, {\n        title: \"zur\\xFCck\",\n        onPress: this.changeRace\n      }));\n    }\n  }]);\n\n  return FormelScreen;\n}(React.Component);\n\nexport { FormelScreen as default };","map":{"version":3,"sources":["/home/toni/PycharmProjects/PropraSource/frontend/FormelScreen.js"],"names":["React","styles","AsyncStorage","timeoutPromise","refreshToken","syncData","getRaceList","getFormelList","FormelScreen","props","changeRace","event","preventDefault","navigation","goBack","handleSubmit","sendNewFormelRequest","state","formel","list_formel","length","console","log","fetch","method","headers","body","JSON","stringify","then","response","json","data","getTabularData","catch","error","getItem","accesstoken","formellistTab","setState","map","index","n","viewStyles","textStyles","height","text","validateForm","renderTableData","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Button, Text, TextInput, ToastAndroid, View} from \"react-native\";\nimport {styles} from \"./styles\"\n//import { AsyncStorage } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport {timeoutPromise, refreshToken, syncData, getRaceList,getFormelList} from \"./tools\";\n\nexport default class FormelScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            list_formel:[],\n            formel:\"\",\n        }\n    }\n\n    changeRace = event => {\n        event.preventDefault();\n        this.props.navigation.goBack();\n    }\n\n    validateForm() {\n        return this.state.formel.length > 0 ;\n    }\n    handleSubmit = event => {\n        event.preventDefault();\n        this.sendNewFormelRequest(this.state.formel);\n    }\n\n    async sendNewFormelRequest(formel) {\n        console.log(formel)\n       timeoutPromise(2000, fetch(\n            'https://api.race24.cloud/formel/create', {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    formel:formel,\n                })\n            })\n            ).then(response => response.json()).then(data => {\n                if (data[1]==200) {\n                    this.getTabularData()\n                }\n                else {\n                    console.log(\"failed\")\n                }\n            }).catch(function (error) {\n                console.log(error);\n            })\n    }\n\n    async getTabularData(){\n        const accesstoken = await AsyncStorage.getItem('accesstoken');\n        getFormelList(accesstoken).then(formellistTab => {\n            console.log(formellistTab);\n            this.setState({list_formel: formellistTab});\n        }).catch(function (error) {\n            console.log(error);\n        })\n    }\n\n    async componentDidMount() {\n        await this.getTabularData()\n    }\n\n    /*\n    async componentDidMount() {\n      const accesstoken = await AsyncStorage.getItem('accesstoken');\n      timeoutPromise(2000, fetch(\"https://api.race24.cloud/formel/get\", {\n          method: 'POST',\n          headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n              access_token: accesstoken,\n          })\n          })).then(response => response.json()).then(data => {\n              console.log(data);\n              this.setState({list_formel: data[0].data})\n          })\n    }\n\n     */\n\n    renderTableData() {\n        console.log(this.state.list_formel)\n        return this.state.list_formel.map((list_formel, index) => {\n            const { n, formel } =list_formel //destructuring\n            return (\n            <tr key={n}>\n               <td>{n}</td>\n               <td>{formel}</td>\n            </tr>\n         )\n      })\n   }\n\n    render() {\n        return (\n            <View style={styles.viewStyles}>\n                <Text style={styles.textStyles}>\n                    24 Stunden Rennen\n                </Text>\n                 <Text style={{height:60}}>\n                    Neue Formel anlegen\n                </Text>\n                <View >\n                    <TextInput\n                        style={{height:50 }}\n                        placeholder=\" hier eingeben\"\n                        onChangeText={(text) => this.setState({formel:text})}\n                    />\n                    <Button\n                        disabled={!this.validateForm()}\n                        title=\"neue Formel anlegen\"\n                        onPress={this.handleSubmit}\n                    />\n                </View>\n                <div>\n                <h1 id='title'>Formeln</h1>\n                <table id='list_formel'>\n                   <tbody>\n                      {this.renderTableData()}\n                   </tbody>\n                </table>\n                </div>\n\n\n                <Button\n                        title=\"zurück\"\n                        onPress={this.changeRace}\n                />\n\n            </View>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}