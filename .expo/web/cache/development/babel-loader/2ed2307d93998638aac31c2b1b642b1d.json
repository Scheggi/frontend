{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { createKeyboardAwareNavigator } from \"react-navigation\";\n\nfunction generateAllSets(raceID, set, cat, subcat, numberOfSets) {\n  for (var i = 1; i < parseInt(numberOfSets) + 1; i++) {\n    generateNewWheelSet(raceID, i, cat, subcat);\n  }\n}\n\nfunction removeItemValue(key) {\n  return _regeneratorRuntime.async(function removeItemValue$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.removeItem(key));\n\n        case 3:\n          return _context.abrupt(\"return\", true);\n\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](0);\n          return _context.abrupt(\"return\", false);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n}\n\nfunction generateNewWheelSet(raceID, setNr, cat, subcat) {\n  var cols, i, test, idwheel, wheelsid;\n  return _regeneratorRuntime.async(function generateNewWheelSet$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          cols = [];\n          i = 0;\n\n        case 2:\n          if (!(i < 4)) {\n            _context2.next = 14;\n            break;\n          }\n\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(sendWheelRequest(0, '', '', i));\n\n        case 5:\n          test = _context2.sent;\n          _context2.next = 8;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('WheelID'));\n\n        case 8:\n          idwheel = _context2.sent;\n          console.log(idwheel);\n          cols.push(idwheel);\n\n        case 11:\n          i++;\n          _context2.next = 2;\n          break;\n\n        case 14:\n          if (cols.length == 4) {\n            wheelsid = sendWheelsRequest(cols[0], cols[1], cols[2], cols[3], '');\n            sendNewSetRequest(raceID, setNr, cat, subcat, wheelsid);\n          }\n\n        case 15:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction sendWheelRequest() {\n  var air_press,\n      id_scan,\n      id,\n      save,\n      _args3 = arguments;\n  return _regeneratorRuntime.async(function sendWheelRequest$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          air_press = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : 0;\n          id_scan = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : '';\n          id = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : '';\n          save = _args3.length > 3 && _args3[3] !== undefined ? _args3[3] : 0;\n          timeoutPromise(2000, fetch('https://api.race24.cloud/wheel_cont/createWheel', {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              air_press: air_press,\n              id_scan: id_scan,\n              id: id\n            })\n          })).then(function (response) {\n            return response.json();\n          }).then(function (data) {\n            if (data[1] == 200) {\n              console.log(data);\n              AsyncStorage.setItem('WheelID', data[0].id);\n              return data[0].id;\n            }\n          }).catch(function (error) {\n            console.log(error);\n            return 0;\n          });\n\n        case 5:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction sendWheelsRequest(id_FL, id_FR, id_BL, id_BR) {\n  var id,\n      _args4 = arguments;\n  return _regeneratorRuntime.async(function sendWheelsRequest$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          id = _args4.length > 4 && _args4[4] !== undefined ? _args4[4] : '';\n          console.log([id_FL, id_FR, id_BL, id_BR]);\n          timeoutPromise(2000, fetch('https://api.race24.cloud/wheel_cont/createWheels', {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id_FL: id_FL,\n              id_FR: id_FR,\n              id_BL: id_BL,\n              id_BR: id_BR,\n              id: id\n            })\n          })).then(function (response) {\n            return response.json();\n          }).then(function (response) {\n            return response.json();\n          }).then(function (data) {\n            if (data[1] == 200) {\n              console.log(data);\n              return data[0].id;\n            }\n          }).catch(function (error) {\n            console.log(error);\n            return 0;\n          });\n\n        case 3:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction sendWheelSetRequest(id_FL, id_FR, id_BL, id_BR) {\n  var id,\n      _args5 = arguments;\n  return _regeneratorRuntime.async(function sendWheelSetRequest$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          id = _args5.length > 4 && _args5[4] !== undefined ? _args5[4] : '';\n          timeoutPromise(2000, fetch('https://api.race24.cloud/wheel_cont/createWheels', {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id_FL: id_FL,\n              id_FR: id_FR,\n              id_BL: id_BL,\n              id_BR: id_BR,\n              id: id\n            })\n          })).then(function (response) {\n            return response.json();\n          }).then(function (response) {\n            return response.json();\n          }).then(function (data) {\n            if (data[1] == 200) {\n              console.log(data);\n              return data[0].id;\n            }\n          }).catch(function (error) {\n            console.log(error);\n            return 0;\n          });\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction sendNewSetRequest(raceID, setNr, cat, subcat, wheels) {\n  return _regeneratorRuntime.async(function sendNewSetRequest$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          timeoutPromise(2000, fetch('https://api.race24.cloud/wheel_cont/createSet', {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: '',\n              setNr: setNr,\n              cat: cat,\n              subcat: subcat,\n              raceID: raceID,\n              wheels: wheels\n            })\n          })).then(function (response) {\n            return response.json();\n          }).then(function (data) {\n            if (data[1] == 200) {\n              console.log(data);\n            }\n\n            ;\n            return data[0].id;\n          }).catch(function (error) {\n            console.log(error);\n          });\n\n        case 1:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction timeoutPromise(ms, promise) {\n  return new Promise(function (resolve, reject) {\n    var timeoutId = setTimeout(function () {\n      reject(new Error('promise timeout'));\n    }, ms);\n    promise.then(function (res) {\n      clearTimeout(timeoutId);\n      resolve(res);\n    }, function (err) {\n      clearTimeout(timeoutId);\n      reject(err);\n    });\n  });\n}\n\nfunction refreshToken() {\n  var accesstoken, refreshtoken;\n  return _regeneratorRuntime.async(function refreshToken$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('accesstoken'));\n\n        case 2:\n          accesstoken = _context7.sent;\n          _context7.next = 5;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('refreshtoken'));\n\n        case 5:\n          refreshtoken = _context7.sent;\n          _context7.next = 8;\n          return _regeneratorRuntime.awrap(timeoutPromise(2000, fetch('https://api.race24.cloud/user/auth/refresh', {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              access_token: accesstoken,\n              refresh_token: refreshtoken\n            })\n          })).then(function (response) {\n            return response.json();\n          }).then(function (data) {\n            AsyncStorage.setItem('accesstoken', String(data.access_token));\n          }));\n\n        case 8:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexport { generateAllSets };","map":{"version":3,"sources":["/home/toni/PycharmProjects/PropraSource/frontend/tools_wheel.js"],"names":["AsyncStorage","createKeyboardAwareNavigator","generateAllSets","raceID","set","cat","subcat","numberOfSets","i","parseInt","generateNewWheelSet","removeItemValue","key","removeItem","setNr","cols","sendWheelRequest","test","getItem","idwheel","console","log","push","length","wheelsid","sendWheelsRequest","sendNewSetRequest","air_press","id_scan","id","save","timeoutPromise","fetch","method","headers","body","JSON","stringify","then","response","json","data","setItem","catch","error","id_FL","id_FR","id_BL","id_BR","sendWheelSetRequest","wheels","ms","promise","Promise","resolve","reject","timeoutId","setTimeout","Error","res","clearTimeout","err","refreshToken","accesstoken","refreshtoken","access_token","refresh_token","String"],"mappings":"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","sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\nimport {createKeyboardAwareNavigator} from \"react-navigation\";\n\n//raceID, set, cat, subcat, identifier, numberOfSets\nfunction generateAllSets(raceID,set,cat,subcat,numberOfSets){\n    for(let i =1; i < parseInt(numberOfSets)+1;i++){\n        generateNewWheelSet(raceID,i,cat,subcat)\n    }\n}\n\n\n// get value of promise\n\nasync function removeItemValue(key) {\n    try {\n        await AsyncStorage.removeItem(key);\n        return true;\n    }\n    catch(exception) {\n        return false;\n    }\n}\n\n\nasync function generateNewWheelSet(raceID,setNr,cat,subcat){\n    let cols = [];\n    for (let i =0; i < 4; i++) {\n        var test = await sendWheelRequest(0,'', '',i);\n        const idwheel = await AsyncStorage.getItem('WheelID')\n        console.log(idwheel);\n        cols.push(idwheel);\n\n\n    }\n    if (cols.length ==4) {\n        const wheelsid = sendWheelsRequest(cols[0], cols[1], cols[2], cols[3], '')\n        // sendNewSetRequest(raceID,setNr,cat,subcat,wheels)\n        sendNewSetRequest(raceID,setNr,cat, subcat,wheelsid )\n        //\n    }\n}\n\n//generate one wheel and return id\nasync function sendWheelRequest(air_press = 0,id_scan='',id = '',save=0) {\n   timeoutPromise(2000, fetch(\n        'https://api.race24.cloud/wheel_cont/createWheel', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                air_press:air_press,\n                id_scan:id_scan,\n                id:id,\n            })\n        })\n        ).then(response => response.json()).then(\n            data => {\n                if (data[1]==200){\n              console.log(data);\n              AsyncStorage.setItem('WheelID',data[0].id);\n              return data[0].id;\n              }\n      }).catch(function (error) {\n            console.log(error);\n            return 0;\n        })\n}\n\n//generate one wheelS and return id\nasync function sendWheelsRequest(id_FL,id_FR,id_BL,id_BR,id = '') {\n    console.log([id_FL,id_FR,id_BL,id_BR]);\n   timeoutPromise(2000, fetch(\n        'https://api.race24.cloud/wheel_cont/createWheels', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                id_FL:id_FL,\n                id_FR:id_FR,\n                id_BL:id_BL,\n                id_BR:id_BR,\n                id:id,\n            })\n        })\n        ).then(response => response.json()).then(response => response.json()).then(\n            data => {\n                if (data[1]==200){\n              console.log(data);\n              return data[0].id;\n              }\n      }).catch(function (error) {\n            console.log(error);\n            return 0;\n        })\n}\n\n\n//generate one wheelsSet and return id\nasync function sendWheelSetRequest(id_FL,id_FR,id_BL,id_BR,id = '') {\n   timeoutPromise(2000, fetch(\n        'https://api.race24.cloud/wheel_cont/createWheels', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                id_FL:id_FL,\n                id_FR:id_FR,\n                id_BL:id_BL,\n                id_BR:id_BR,\n                id:id,\n            })\n        })\n        ).then(response => response.json()).then(response => response.json()).then(\n            data => {\n                if (data[1]==200){\n              console.log(data);\n              return data[0].id;\n              }\n      }).catch(function (error) {\n            console.log(error);\n            return 0;\n        })\n}\n\n\n\n\n//create new Set request\nasync function sendNewSetRequest(raceID,setNr,cat,subcat,wheels) {\n   timeoutPromise(2000, fetch(\n        'https://api.race24.cloud/wheel_cont/createSet', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                id: '',\n                setNr:setNr,\n                cat:cat,\n                subcat:subcat,\n                raceID:raceID,\n                wheels : wheels,\n            })\n        })\n        ).then(response => response.json()).then(\n            data =>{\n                if(data[1]==200){\n                console.log(data)};\n                return data[0].id\n            }).catch(function (error) {\n            console.log(error);\n        })\n}\n\n\n//  ----------------------------------------------------------------------------------------------\n\nfunction timeoutPromise(ms, promise) {\n  return new Promise((resolve, reject) => {\n    const timeoutId = setTimeout(() => {\n      reject(new Error('promise timeout'))\n    }, ms);\n    promise.then(\n      (res) => {\n        clearTimeout(timeoutId);\n        resolve(res);\n      },\n      (err) => {\n        clearTimeout(timeoutId);\n        reject(err);\n      }\n    );\n  })\n}\n\n\n\nasync function refreshToken() {\n  let accesstoken = await AsyncStorage.getItem('accesstoken');\n  let refreshtoken = await AsyncStorage.getItem('refreshtoken');\n  await timeoutPromise(2000, fetch(\n      'https://api.race24.cloud/user/auth/refresh', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          access_token: accesstoken,\n          refresh_token: refreshtoken,\n        })\n      }\n  )).then(\n      response => response.json()\n  ).then(\n      data => {\n        AsyncStorage.setItem('accesstoken', String(data.access_token));\n      }\n  )\n}\n\n\n\nexport {generateAllSets}\n\n"]},"metadata":{},"sourceType":"module"}