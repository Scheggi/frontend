{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { styles } from \"./styles\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { timeoutPromise, refreshToken, getRaceList, getRaceDetails_by_ID, getWheelsList, getWeatherTab } from \"./tools\";\nimport { get_Dict_WheelOrder, getDropdown } from \"./tools_get_wheels\";\nimport Table from \"./TableWheels\";\n\nvar NewOrderScreen = function (_React$Component) {\n  _inherits(NewOrderScreen, _React$Component);\n\n  var _super = _createSuper(NewOrderScreen);\n\n  function NewOrderScreen(props) {\n    var _this;\n\n    _classCallCheck(this, NewOrderScreen);\n\n    _this = _super.call(this, props);\n\n    _this.getRaceID = function (event) {\n      var id = event.target.value;\n      AsyncStorage.setItem(\"raceIDHelper\", event.target.value);\n\n      _this.saveRaceIDinState();\n    };\n\n    _this.changeRace = function (event) {\n      event.preventDefault();\n\n      _this.props.navigation.replace('Race');\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      _this.sendNewRaceRequest(_this.state.raceid, _this.state.tyretype, _this.state.tyremix, _this.state.term, _this.state.variant, _this.state.number, _this.state.orderdate, _this.state.ordertime, _this.state.pickuptime);\n    };\n\n    _this.handleSubmitButton1 = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        tyretype: \"Slicks\"\n      });\n\n      _this.setState({\n        tyremix: \"Cold\"\n      });\n    };\n\n    _this.handleSubmitButton1 = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        tyretype: \"Slicks\"\n      });\n\n      _this.setState({\n        tyremix: \"Cold\"\n      });\n    };\n\n    _this.handleSubmitButton2 = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        tyretype: \"Slicks\"\n      });\n\n      _this.setState({\n        tyremix: \"Medium\"\n      });\n    };\n\n    _this.handleSubmitButton3 = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        tyretype: \"Slicks\"\n      });\n\n      _this.setState({\n        tyremix: \"Hot\"\n      });\n    };\n\n    _this.handleSubmitButton4 = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        tyretype: \"Inters\"\n      });\n\n      _this.setState({\n        tyremix: \"Intermediate\"\n      });\n    };\n\n    _this.handleSubmitButton5 = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        tyretype: \"Rain\"\n      });\n\n      _this.setState({\n        tyremix: \"Dry Wet\"\n      });\n    };\n\n    _this.handleSubmitButton6 = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        tyretype: \"Rain\"\n      });\n\n      _this.setState({\n        tyremix: \"Heavy Wet\"\n      });\n    };\n\n    _this.state = {\n      raceid: 0,\n      tyretype: '',\n      tyremix: '',\n      term: '',\n      variant: '',\n      tyretype1: '',\n      tyremix1: '',\n      variant1: '',\n      number: '',\n      orderdate: '',\n      ordertime: '',\n      ordertime1: '',\n      pickuptime: '',\n      raceList: [],\n      listDropdown: [],\n      dictButtons: [],\n      time: {},\n      seconds: 1800,\n      timervalue: \"\"\n    };\n    _this.timer = 0;\n    _this.startTimer = _this.startTimer.bind(_assertThisInitialized(_this));\n    _this.countDown = _this.countDown.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(NewOrderScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.getWheelDict();\n              this.getDropdownList();\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getWheelDict\",\n    value: function getWheelDict() {\n      var _this2 = this;\n\n      var accesstoken, raceID;\n      return _regeneratorRuntime.async(function getWheelDict$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('accesstoken'));\n\n            case 2:\n              accesstoken = _context2.sent;\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('raceID'));\n\n            case 5:\n              raceID = _context2.sent;\n              console.log(raceID);\n              _context2.next = 9;\n              return _regeneratorRuntime.awrap(get_Dict_WheelOrder(accesstoken, raceID).then(function (DataTabular) {\n                console.log(DataTabular);\n\n                _this2.setState({\n                  dictButtons: DataTabular\n                });\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 9:\n              console.log(this.state.dictButtons);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getDropdownList\",\n    value: function getDropdownList() {\n      var _this3 = this;\n\n      var accesstoken, raceID;\n      return _regeneratorRuntime.async(function getDropdownList$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('accesstoken'));\n\n            case 2:\n              accesstoken = _context3.sent;\n              _context3.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('raceID'));\n\n            case 5:\n              raceID = _context3.sent;\n              console.log(raceID);\n              _context3.next = 9;\n              return _regeneratorRuntime.awrap(getDropdown(accesstoken, raceID).then(function (DataTabular) {\n                console.log(DataTabular);\n\n                _this3.setState({\n                  listDropdown: DataTabular\n                });\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 9:\n              console.log(this.state.listDropdown);\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"sendNewRaceRequest\",\n    value: function sendNewRaceRequest(type, place, date) {\n      var _this4 = this;\n\n      return _regeneratorRuntime.async(function sendNewRaceRequest$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              timeoutPromise(2000, fetch('https://api.race24.cloud/race/create', {\n                method: 'POST',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  type: type,\n                  place: place,\n                  date: date\n                })\n              })).then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                if (data[1] == 200) {\n                  AsyncStorage.setItem(\"raceIDNewRace\", data[0].id);\n                  console.log(\"changeNav\");\n\n                  _this4.props.navigation.replace(\"Race\");\n\n                  return parseInt(data[0].id);\n                } else {\n                  console.log(\"failed\");\n                }\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"secondsToTime\",\n    value: function secondsToTime(secs) {\n      var hours = Math.floor(secs / (60 * 60));\n      var divisor_for_minutes = secs % (60 * 60);\n      var minutes = Math.floor(divisor_for_minutes / 60);\n      var divisor_for_seconds = divisor_for_minutes % 60;\n      var seconds = Math.ceil(divisor_for_seconds);\n      var obj = {\n        \"h\": hours,\n        \"m\": minutes,\n        \"s\": seconds\n      };\n      return obj;\n    }\n  }, {\n    key: \"startTimer\",\n    value: function startTimer() {\n      var hour = 0;\n      var minute = 0;\n      var second = 0;\n      var atime = this.state.timervalue.split(':');\n\n      if (atime[0].length > 0) {\n        hour = parseInt(atime[0]);\n      }\n\n      if (atime[1].length > 0) {\n        minute = parseInt(atime[1]);\n      }\n\n      if (atime[2].length > 0) {\n        second = parseInt(atime[2]);\n      }\n\n      this.state.seconds = stunde * 3600 + minute * 60 + sekunde;\n\n      if (this.state.seconds > 0) {\n        this.timer = setInterval(this.countDown, this.state.seconds);\n      }\n    }\n  }, {\n    key: \"countDown\",\n    value: function countDown() {\n      var seconds = this.state.seconds - 1;\n      this.setState({\n        time: this.secondsToTime(seconds),\n        seconds: seconds\n      });\n\n      if (seconds == 0) {\n        clearInterval(this.timer);\n      }\n    }\n  }, {\n    key: \"getTime\",\n    value: function getTime() {\n      var today = new Date();\n      var h = today.getHours();\n      var m = today.getMinutes();\n      return h + \":\" + m;\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm() {\n      return this.state.tyretype.length > 0 && this.state.tyremix.length > 0 && this.state.number.length > 0 && this.state.orderdate.length > 0 && this.state.ordertime.length > 0 && this.state.pickuptime.length > 0;\n    }\n  }, {\n    key: \"validateForm1\",\n    value: function validateForm1() {\n      return this.state.timervalue.length > 0;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var optionTemplate = this.state.raceList.map(function (v) {\n        return React.createElement(\"option\", {\n          value: v.id,\n          key: v.id\n        }, v.name);\n      });\n      var List_free = this.state.listDropdown;\n      var optionTemplate1 = this.state.raceList.map(function (v) {\n        return React.createElement(\"option\", {\n          value: v.id,\n          key: v.id\n        }, v.name);\n      });\n      return React.createElement(View, {\n        style: container2\n      }, React.createElement(View, {\n        style: container3\n      }, React.createElement(View, {\n        style: container5\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 40,\n          fontWeight: 'bold',\n          textAlign: 'center'\n        }\n      }, \"Neue Reifenbestellung anlegen\")), React.createElement(View, {\n        style: container4\n      }, React.createElement(Button, {\n        title: \"Slicks Cold\",\n        onPress: this.handleSubmitButton1\n      }), React.createElement(Button, {\n        title: \"Slicks Medium\",\n        onPress: this.handleSubmitButton2\n      }), React.createElement(Button, {\n        title: \"Slicks Hot\",\n        onPress: this.handleSubmitButton3\n      }), React.createElement(Button, {\n        title: \"Inters Intermediate\",\n        onPress: this.handleSubmitButton4\n      }), React.createElement(Button, {\n        title: \"Rain Dry Wet\",\n        onPress: this.handleSubmitButton5\n      }), React.createElement(Button, {\n        title: \"Rain Heavy Wet\",\n        onPress: this.handleSubmitButton6\n      }))), React.createElement(View, {\n        style: container1\n      }, React.createElement(View, {\n        style: {\n          justifyContent: 'flex-start'\n        }\n      }, React.createElement(Text, {\n        style: {\n          height: 10\n        }\n      }, \" \"), React.createElement(\"table\", null, React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Reifenart: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, React.createElement(TextInput, {\n        value: this.state.tyretype,\n        onChangeText: function onChangeText(text) {\n          return _this5.setState({\n            tyretype: text\n          });\n        }\n      }))), React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Mischung: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, \" \", React.createElement(TextInput, {\n        value: this.state.tyremix,\n        onChangeText: function onChangeText(text) {\n          return _this5.setState({\n            tyremix: text\n          });\n        }\n      }))), React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Bezeichnung: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, React.createElement(TextInput, {\n        value: this.state.term,\n        onChangeText: function onChangeText(text) {\n          return _this5.setState({\n            term: text\n          });\n        }\n      }))), React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Bearbeitungsvariante: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, React.createElement(TextInput, {\n        value: this.state.variant,\n        onChangeText: function onChangeText(text) {\n          return _this5.setState({\n            variant: text\n          });\n        }\n      }))), React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Bestelldatum: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, \" \", React.createElement(TextInput, {\n        value: this.state.orderdate,\n        placeholder: \"TT.MM.JJJJ\",\n        onChangeText: function onChangeText(date) {\n          return _this5.setState({\n            orderdate: date\n          });\n        }\n      }))), React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Bestellzeit: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, \" \", React.createElement(TextInput, {\n        value: this.state.ordertime,\n        placeholder: \"SS:MM\",\n        onChangeText: function onChangeText(time) {\n          return _this5.setState({\n            ordertime: time\n          });\n        }\n      })))), React.createElement(Text, null, \" \"), React.createElement(Button, {\n        disabled: !this.validateForm(),\n        title: \"Reifenbestellung best\\xE4tigen\",\n        onPress: this.handleSubmit\n      }), React.createElement(Text, null, \" \"), React.createElement(Button, {\n        title: \"zur\\xFCck\",\n        onPress: this.changeRace\n      })), React.createElement(View, {\n        style: {\n          justifyContent: 'flex-start'\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 30,\n          fontWeight: 'bold',\n          textAlign: 'center'\n        }\n      }, \"Reifensatz aktuell in Bearbeitung\"), React.createElement(\"table\", null, React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Reifenart: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, this.state.tyretype1)), React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Mischung: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, this.state.tyremix1)), React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Bearbeitungsvariante: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, this.state.variant1)), React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Bestellzeit: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, this.state.ordertime1))), React.createElement(Text, {\n        style: {\n          height: '10'\n        }\n      }), React.createElement(Text, {\n        style: bigStyle\n      }, \"Timer\"), React.createElement(Text, {\n        style: orderHeaderStyle\n      }, \" Reifenbestellung abholbereit in: \"), React.createElement(TextInput, {\n        style: orderTextStyle,\n        placeholder: \" SS:MM:SS\",\n        onChangeText: function onChangeText(time) {\n          return _this5.setState({\n            timervalue: time\n          });\n        }\n      }), React.createElement(\"button\", {\n        style: {\n          width: 300\n        },\n        disabled: !this.validateForm1(),\n        onClick: this.startTimer\n      }, \"Start\"), React.createElement(Text, {\n        style: orderFeedbackStyle\n      }, \"Stunden: \", this.state.time.h, \" Minuten: \", this.state.time.m, \" Sekunden: \", this.state.time.s, \" \"))));\n    }\n  }]);\n\n  return NewOrderScreen;\n}(React.Component);\n\nexport { NewOrderScreen as default };\nvar bigStyle = {\n  color: 'black',\n  fontSize: 30,\n  fontWeight: 'bold'\n};\nvar subStyle = {\n  fontSize: 20,\n  height: 40\n};\nvar emptylineStyle = {\n  height: 20\n};\nvar orderHeaderStyle = {\n  height: 40,\n  width: 300,\n  margin: 3,\n  borderWidth: 1,\n  padding: 10,\n  backgroundColor: '#696969',\n  color: '#ffffff',\n  fontweight: 'bold',\n  fontSize: 16,\n  lineHeight: 16,\n  fontfamily: 'arial'\n};\nvar orderTextStyle = {\n  height: 30,\n  width: 300,\n  margin: 3,\n  borderWidth: 1,\n  padding: 10,\n  backgroundColor: '#d3d3d3',\n  fontSize: 14,\n  fontfamily: 'arial'\n};\nvar orderFeedbackStyle = {\n  height: 40,\n  width: 300,\n  margin: 3,\n  textAlign: 'center',\n  borderWidth: 1,\n  padding: 10,\n  backgroundColor: '#d3d3d3',\n  fontSize: 14\n};\nvar container1 = {\n  padding: '50px',\n  flexDirection: 'row',\n  justifyContent: 'space-around'\n};\nvar container2 = {};\nvar container3 = {};\nvar container4 = {\n  flexDirection: 'row',\n  justifyContent: 'space-evenly'\n};\nvar container5 = {\n  textAlign: 'center',\n  padding: '20px'\n};","map":{"version":3,"sources":["/home/toni/PycharmProjects/PropraSource/frontend/NewOrder.js"],"names":["React","styles","AsyncStorage","timeoutPromise","refreshToken","getRaceList","getRaceDetails_by_ID","getWheelsList","getWeatherTab","get_Dict_WheelOrder","getDropdown","Table","NewOrderScreen","props","getRaceID","event","id","target","value","setItem","saveRaceIDinState","changeRace","preventDefault","navigation","replace","handleSubmit","sendNewRaceRequest","state","raceid","tyretype","tyremix","term","variant","number","orderdate","ordertime","pickuptime","handleSubmitButton1","setState","handleSubmitButton2","handleSubmitButton3","handleSubmitButton4","handleSubmitButton5","handleSubmitButton6","tyretype1","tyremix1","variant1","ordertime1","raceList","listDropdown","dictButtons","time","seconds","timervalue","timer","startTimer","bind","countDown","getWheelDict","getDropdownList","getItem","accesstoken","raceID","console","log","then","DataTabular","catch","error","type","place","date","fetch","method","headers","body","JSON","stringify","response","json","data","parseInt","secs","hours","Math","floor","divisor_for_minutes","minutes","divisor_for_seconds","ceil","obj","hour","minute","second","atime","split","length","stunde","sekunde","setInterval","secondsToTime","clearInterval","today","Date","h","getHours","m","getMinutes","optionTemplate","map","v","name","List_free","optionTemplate1","container2","container3","container5","fontSize","fontWeight","textAlign","container4","container1","justifyContent","height","padding","color","fontFamily","border","borderColor","width","text","validateForm","bigStyle","orderHeaderStyle","orderTextStyle","validateForm1","orderFeedbackStyle","s","Component","subStyle","emptylineStyle","margin","borderWidth","backgroundColor","fontweight","lineHeight","fontfamily","flexDirection"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Button, Text, TextInput, ToastAndroid, View} from \"react-native\";\nimport {styles} from \"./styles\"\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport {timeoutPromise, refreshToken, getRaceList, getRaceDetails_by_ID, getWheelsList, getWeatherTab} from \"./tools\";\nimport {get_Dict_WheelOrder,getDropdown} from \"./tools_get_wheels\";\nimport Table from \"./TableWheels\";\n\nexport default class NewOrderScreen extends React.Component {\n   constructor(props) {\n        super(props);\n        this.state = {\n            raceid: 0,\n            tyretype: '',\n            tyremix: '',\n            term: '',\n            variant: '',\n            tyretype1: '',\n            tyremix1: '',\n            variant1: '',\n            number: '',\n            orderdate: '',\n            ordertime: '',\n            ordertime1: '',\n            pickuptime: '',\n            raceList: [],\n            listDropdown:[],\n            dictButtons:[],\n            time: {},\n            seconds: 1800,\n            timervalue: \"\",\n        }\n        this.timer = 0;\n        this.startTimer = this.startTimer.bind(this);\n        this.countDown = this.countDown.bind(this);\n    }\n\n    // get Data\n    async componentDidMount(){\n        this.getWheelDict();\n        this.getDropdownList();\n    }\n\n    //get Weather Data, it will be used in getRaceID\n    async getWheelDict(){\n       const accesstoken = await AsyncStorage.getItem('accesstoken');\n       const raceID = await AsyncStorage.getItem('raceID');\n       //const raceID = await AsyncStorage.getItem('raceID');\n       console.log(raceID)\n       await get_Dict_WheelOrder(accesstoken, raceID).then(DataTabular => {\n                console.log(DataTabular);\n                this.setState({dictButtons: DataTabular});\n            }).catch(function (error) {\n                console.log(error);\n            })\n        console.log(this.state.dictButtons)\n    }\n\n    async getDropdownList(){\n       const accesstoken = await AsyncStorage.getItem('accesstoken');\n       const raceID = await AsyncStorage.getItem('raceID');\n       //const raceID = await AsyncStorage.getItem('raceID');\n       console.log(raceID)\n       await getDropdown(accesstoken, raceID).then(DataTabular => {\n                console.log(DataTabular);\n                this.setState({listDropdown: DataTabular});\n            }).catch(function (error) {\n                console.log(error);\n            })\n        console.log(this.state.listDropdown)\n    }\n\n\n\n\n    getRaceID = event => {\n        const id = event.target.value;\n        AsyncStorage.setItem(\"raceIDHelper\", event.target.value);\n        this.saveRaceIDinState();\n    }\n\n    changeRace = event => {\n        event.preventDefault();\n        this.props.navigation.replace('Race');\n    }\n     handleSubmit = event => {\n        event.preventDefault();\n        this.sendNewRaceRequest(this.state.raceid, this.state.tyretype, this.state.tyremix, this.state.term,\n            this.state.variant, this.state.number, this.state.orderdate, this.state.ordertime, this.state.pickuptime);\n    }\n     handleSubmitButton1 = event => {\n        event.preventDefault();\n        this.setState({tyretype: \"Slicks\"});\n        this.setState({tyremix: \"Cold\"});\n    }\n    handleSubmitButton1 = event => {\n        event.preventDefault();\n        this.setState({tyretype: \"Slicks\"});\n        this.setState({tyremix: \"Cold\"});\n    }\n    handleSubmitButton2 = event => {\n        event.preventDefault();\n        this.setState({tyretype: \"Slicks\"});\n        this.setState({tyremix: \"Medium\"});\n    }\n    handleSubmitButton3 = event => {\n        event.preventDefault();\n        this.setState({tyretype: \"Slicks\"});\n        this.setState({tyremix: \"Hot\"});\n    }\n    handleSubmitButton4 = event => {\n        event.preventDefault();\n        this.setState({tyretype: \"Inters\"});\n        this.setState({tyremix: \"Intermediate\"});\n    }\n    handleSubmitButton5 = event => {\n        event.preventDefault();\n        this.setState({tyretype: \"Rain\"});\n        this.setState({tyremix: \"Dry Wet\"});\n    }\n    handleSubmitButton6 = event => {\n        event.preventDefault();\n        this.setState({tyretype: \"Rain\"});\n        this.setState({tyremix: \"Heavy Wet\"});\n    }\n\n     async sendNewRaceRequest(type,place,date) {\n       timeoutPromise(2000, fetch(\n            'https://api.race24.cloud/race/create', {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    type:type,\n                    place:place,\n                    date:date,\n                })\n            })\n            ).then(response => response.json()).then(data => {\n                if (data[1]==200) {\n                    AsyncStorage.setItem(\"raceIDNewRace\",data[0].id)\n                    console.log(\"changeNav\")\n                    this.props.navigation.replace(\"Race\");//replace('Race');\n                    return parseInt(data[0].id)\n                }\n                else {\n                    console.log(\"failed\")\n                }\n            }).catch(function (error) {\n                console.log(error);\n            })\n    }\n\n\n\n\n\n\n        secondsToTime(secs)\n        {\n            let hours = Math.floor(secs / (60 * 60));\n            let divisor_for_minutes = secs % (60 * 60);\n            let minutes = Math.floor(divisor_for_minutes / 60);\n            let divisor_for_seconds = divisor_for_minutes % 60;\n            let seconds = Math.ceil(divisor_for_seconds);\n            let obj = {\n                \"h\": hours,\n                \"m\": minutes,\n                \"s\": seconds\n            };\n            return obj;\n        }\n\n        startTimer()\n        {\n            var hour = 0;\n            var minute = 0;\n            var second = 0;\n            var atime = this.state.timervalue.split(':');\n            if (atime[0].length > 0) {\n                hour = parseInt(atime[0]);\n            }\n            if (atime[1].length > 0) {\n                minute = parseInt(atime[1]);\n            }\n            if (atime[2].length > 0) {\n                second = parseInt(atime[2]);\n            }\n            this.state.seconds = stunde * 3600 + minute * 60 + sekunde;\n\n            if (this.state.seconds > 0) {\n                this.timer = setInterval(this.countDown, this.state.seconds);\n            }\n        }\n\n        countDown()\n        {\n            let seconds = this.state.seconds - 1;\n            this.setState({\n                time: this.secondsToTime(seconds),\n                seconds: seconds,\n            });\n            // Check if  zero.\n            if (seconds == 0) {\n                clearInterval(this.timer);\n            }\n        }\n\n        getTime()\n        {\n            var today = new Date();\n            var h = today.getHours();\n            var m = today.getMinutes();\n            return h + \":\" + m;\n        }\n\n        validateForm()\n        {\n            return this.state.tyretype.length > 0 && this.state.tyremix.length > 0 && this.state.number.length > 0 && this.state.orderdate.length > 0 && this.state.ordertime.length > 0 && this.state.pickuptime.length > 0;\n        }\n\n\n        validateForm1()\n        {\n            return this.state.timervalue.length > 0;\n        }\n\n        render()\n        {\n            let optionTemplate = this.state.raceList.map(v => (\n            <option value={v.id} key={v.id}>{v.name}</option>\n            ));\n            // dropdown list used\n            let List_free = this.state.listDropdown\n            let optionTemplate1 = this.state.raceList.map(v => (\n            <option value={v.id} key={v.id}>{v.name}</option>\n        ));\n\n\n            return (\n                <View style={container2}>\n                    <View style={container3}>\n                        <View style={container5}>\n                        <Text style={{fontSize: 40, fontWeight: 'bold', textAlign: 'center'}}>\n                        Neue Reifenbestellung anlegen\n                    </Text>\n                        </View>\n                        <View style={container4}>\n                            <Button\n                            //disabled={!this.validateFormButton1()}\n                            title=\"Slicks Cold\"\n                            onPress={this.handleSubmitButton1}\n                        />\n                        <Button\n                            //disabled={!this.validateFormButton2()}\n                            title=\"Slicks Medium\"\n                            onPress={this.handleSubmitButton2}\n                        />\n                        <Button\n                            //disabled={!this.validateFormButton3()}\n                            title=\"Slicks Hot\"\n                            onPress={this.handleSubmitButton3}\n                        />\n                        <Button\n                            //disabled={!this.validateFormButton4()}\n                            title=\"Inters Intermediate\"\n                            onPress={this.handleSubmitButton4}\n                        />\n                        <Button\n                            //disabled={!this.validateFormButton5()}\n                            title=\"Rain Dry Wet\"\n                            onPress={this.handleSubmitButton5}\n                        />\n                        <Button\n                            //disabled={!this.validateFormButton6()}\n                            title=\"Rain Heavy Wet\"\n                            onPress={this.handleSubmitButton6}\n                        />\n\n                        </View>\n                    </View>\n                <View style={container1}>\n                <View style={{justifyContent: 'flex-start'}}>\n                    <Text style={{height: 10}}> </Text>\n                    <table >\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Reifenart: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}><TextInput value={this.state.tyretype}\n                                   onChangeText={(text) => this.setState({tyretype: text})}/></td>\n                    </tr>\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Mischung: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}> <TextInput value={this.state.tyremix}\n                                    onChangeText={(text) => this.setState({tyremix: text})}/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Bezeichnung: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}><TextInput value={this.state.term}\n                                  onChangeText={(text) => this.setState({term: text})}/></td>\n                    </tr>\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Bearbeitungsvariante: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}><TextInput value={this.state.variant}\n                                   onChangeText={(text) => this.setState({variant: text})}/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Bestelldatum: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}> <TextInput value={this.state.orderdate}\n                                   placeholder='TT.MM.JJJJ' onChangeText={(date) => this.setState({orderdate: date})}/></td>\n                    </tr>\n                   <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Bestellzeit: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}> <TextInput value={this.state.ordertime}\n                                   placeholder='SS:MM' onChangeText={(time) => this.setState({ordertime: time})}/></td>\n                    </tr>\n                </table>\n                        <Text> </Text>\n                        <Button\n                            disabled={!this.validateForm()}\n                            title=\"Reifenbestellung bestätigen\"\n                            onPress={this.handleSubmit}\n                        />\n                        <Text> </Text>\n                        <Button\n                            title=\"zurück\"\n                            onPress={this.changeRace}\n                            />\n                    </View>\n                <View style={{justifyContent: 'flex-start'}}>\n                    <Text style={{fontSize: 30, fontWeight: 'bold', textAlign: 'center'}}>\n                        Reifensatz aktuell in Bearbeitung\n                    </Text>\n                     <table>\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Reifenart: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}>{this.state.tyretype1}</td>\n                    </tr>\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Mischung: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}>{this.state.tyremix1}</td>\n                    </tr>\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Bearbeitungsvariante: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}>{this.state.variant1}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Bestellzeit: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}>{this.state.ordertime1}\n                        </td>\n                    </tr>\n                     </table>\n                    <Text style={{height: '10'}}></Text>\n                    <Text style={bigStyle}>\n                        Timer\n                    </Text>\n                        <Text style={orderHeaderStyle}> Reifenbestellung abholbereit in: </Text>\n                        <TextInput\n                            style={orderTextStyle}\n                            placeholder=\" SS:MM:SS\"\n                            onChangeText={(time) => this.setState({timervalue: time})}\n                        />\n                        <button style={{width:300}}\n\n                            disabled={!this.validateForm1()}\n                            onClick={this.startTimer}>Start\n                        </button>\n                        <Text style={orderFeedbackStyle}>\n                            Stunden: {this.state.time.h} Minuten: {this.state.time.m} Sekunden: {this.state.time.s} </Text>\n                    </View>\n            </View>\n\n        </View>\n            );\n        }\n    }\n\n\n    const\n    bigStyle = {\n        color: 'black',\n        fontSize: 30,\n        fontWeight: 'bold'\n    }\n\n    const\n    subStyle = {\n        fontSize: 20,\n        height: 40\n    }\n\n    const\n    emptylineStyle = {\n        height: 20,\n    }\n\n    const\n    orderHeaderStyle = {\n        height: 40,\n        width: 300,\n        margin: 3,\n        borderWidth: 1,\n        padding: 10,\n        backgroundColor: '#696969',\n        color: '#ffffff',\n        fontweight: 'bold',\n        fontSize: 16,\n        lineHeight: 16,\n        fontfamily: 'arial'\n    };\n\n    const\n    orderTextStyle = {\n        height: 30,\n        width: 300,\n        margin: 3,\n        borderWidth: 1,\n        padding: 10,\n        backgroundColor: '#d3d3d3',\n        fontSize: 14,\n        fontfamily: 'arial'\n    };\n\n    const\n    orderFeedbackStyle = {\n        height: 40,\n        width: 300,\n        margin: 3,\n        textAlign: 'center',\n        borderWidth: 1,\n        padding: 10,\n        backgroundColor: '#d3d3d3',\n        fontSize: 14\n    };\n    const container1 ={\n        padding: '50px',\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n    };\n    const container2={\n\n    };\n    const container3={\n\n\n    };\n    const container4={\n        flexDirection: 'row',\n        justifyContent: 'space-evenly',\n\n    };\n    const container5={\n        textAlign: 'center',\n        padding: '20px',\n\n    };"]},"metadata":{},"sourceType":"module"}