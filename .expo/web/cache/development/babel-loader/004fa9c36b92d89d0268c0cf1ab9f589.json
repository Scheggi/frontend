{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { styles } from \"./styles\";\nimport { getRaceList, timeoutPromise } from \"./tools\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport Button from \"react-native-web/dist/exports/Button\";\n\nvar RaceScreen = function (_React$Component) {\n  _inherits(RaceScreen, _React$Component);\n\n  var _super = _createSuper(RaceScreen);\n\n  function RaceScreen(props) {\n    var _this;\n\n    _classCallCheck(this, RaceScreen);\n\n    _this = _super.call(this, props);\n\n    _this.changeLogout = function (event) {\n      event.preventDefault();\n\n      _this.props.navigation.replace('Logout');\n    };\n\n    _this.changeNewRace = function (event) {\n      event.preventDefault();\n\n      _this.props.navigation.replace('NewRace');\n    };\n\n    _this.changeNewUser = function (event) {\n      event.preventDefault();\n\n      _this.props.navigation.replace('NewUser');\n    };\n\n    _this.changeFormel = function (event) {\n      event.preventDefault();\n\n      _this.props.navigation.push('Formel');\n    };\n\n    _this.changeNewOrder = function (event) {\n      event.preventDefault();\n\n      _this.props.navigation.push('NewOrder');\n    };\n\n    _this.changeAstrid = function (event) {\n      event.preventDefault();\n\n      _this.props.navigation.push('Astrid');\n    };\n\n    _this.state = {\n      dataRace: [],\n      dataWeather: [],\n      raceID: 0,\n      raceList: []\n    };\n    return _this;\n  }\n\n  _createClass(RaceScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var accesstoken;\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('accesstoken'));\n\n            case 2:\n              accesstoken = _context.sent;\n              getRaceList(accesstoken).then(function (racelistDropdown) {\n                console.log(racelistDropdown);\n\n                _this2.setState({\n                  raceList: racelistDropdown\n                });\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"getRaceID\",\n    value: function getRaceID(event) {\n      var id;\n      return _regeneratorRuntime.async(function getRaceID$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              AsyncStorage.setItem(\"raceID\", event.target.value);\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"raceID\"));\n\n            case 3:\n              id = _context2.sent;\n              console.log(id);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var optionTemplate = this.state.raceList.map(function (v) {\n        return React.createElement(\"option\", {\n          value: v.id,\n          key: v.id\n        }, v.name);\n      });\n      return React.createElement(View, {\n        style: styles.viewStyles\n      }, React.createElement(Text, {\n        style: styles.textStyles\n      }, \"24 Stunden Rennen\"), React.createElement(Button, {\n        title: \"Neues Rennen anlegen\",\n        onPress: this.changeNewRace\n      }), React.createElement(Text, null), React.createElement(Button, {\n        title: \"Neues Mitglied anlegen\",\n        onPress: this.changeNewUser\n      }), React.createElement(Text, null), React.createElement(Button, {\n        title: \"Screen Formel\",\n        onPress: this.changeFormel\n      }), React.createElement(Text, null), React.createElement(Button, {\n        title: \"Neue Reifenbestellung anlegen\",\n        onPress: this.changeNewOrder\n      }), React.createElement(Text, null), React.createElement(Button, {\n        title: \"Screen Astrid\",\n        onPress: this.changeAstrid\n      }), React.createElement(\"label\", null, \"W\\xE4hle das gew\\xFCnschte Rennen aus:\", React.createElement(\"select\", {\n        value: this.state.id,\n        onChange: this.getRaceID\n      }, optionTemplate)), React.createElement(Button, {\n        title: \"Logout\",\n        onPress: this.changeLogout\n      }));\n    }\n  }]);\n\n  return RaceScreen;\n}(React.Component);\n\nexport { RaceScreen as default };","map":{"version":3,"sources":["/home/toni/PycharmProjects/PropraSource/frontend/RaceScreen.js"],"names":["React","styles","getRaceList","timeoutPromise","AsyncStorage","Icon","RaceScreen","props","changeLogout","event","preventDefault","navigation","replace","changeNewRace","changeNewUser","changeFormel","push","changeNewOrder","changeAstrid","state","dataRace","dataWeather","raceID","raceList","getItem","accesstoken","then","racelistDropdown","console","log","setState","catch","error","setItem","target","value","id","optionTemplate","map","v","name","viewStyles","textStyles","getRaceID","Component"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;;AAWA,SAAQC,MAAR;AACA,SAAQC,WAAR,EAAqBC,cAArB;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,IAAP;;;IAGqBC,U;;;;;AACjB,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,UAqBnBC,YArBmB,GAqBJ,UAAAC,KAAK,EAAI;AACpBA,MAAAA,KAAK,CAACC,cAAN;;AACA,YAAKH,KAAL,CAAWI,UAAX,CAAsBC,OAAtB,CAA8B,QAA9B;AACH,KAxBkB;;AAAA,UA0BnBC,aA1BmB,GA0BH,UAAAJ,KAAK,EAAI;AACrBA,MAAAA,KAAK,CAACC,cAAN;;AACA,YAAKH,KAAL,CAAWI,UAAX,CAAsBC,OAAtB,CAA8B,SAA9B;AACH,KA7BkB;;AAAA,UA+BlBE,aA/BkB,GA+BF,UAAAL,KAAK,EAAI;AACtBA,MAAAA,KAAK,CAACC,cAAN;;AACA,YAAKH,KAAL,CAAWI,UAAX,CAAsBC,OAAtB,CAA8B,SAA9B;AACH,KAlCkB;;AAAA,UAoClBG,YApCkB,GAoCH,UAAAN,KAAK,EAAI;AACrBA,MAAAA,KAAK,CAACC,cAAN;;AACA,YAAKH,KAAL,CAAWI,UAAX,CAAsBK,IAAtB,CAA2B,QAA3B;AACH,KAvCkB;;AAAA,UAyCnBC,cAzCmB,GAyCF,UAAAR,KAAK,EAAI;AACtBA,MAAAA,KAAK,CAACC,cAAN;;AACA,YAAKH,KAAL,CAAWI,UAAX,CAAsBK,IAAtB,CAA2B,UAA3B;AACH,KA5CkB;;AAAA,UA+ClBE,YA/CkB,GA+CH,UAAAT,KAAK,EAAI;AACrBA,MAAAA,KAAK,CAACC,cAAN;;AACA,YAAKH,KAAL,CAAWI,UAAX,CAAsBK,IAAtB,CAA2B,QAA3B;AACH,KAlDkB;;AAEf,UAAKG,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,WAAW,EAAC,EAFH;AAGTC,MAAAA,MAAM,EAAE,CAHC;AAITC,MAAAA,QAAQ,EAAC;AAJA,KAAb;AAFe;AAQlB;;;;WAED;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAC8BnB,YAAY,CAACoB,OAAb,CAAqB,YAArB,CAD9B;;AAAA;AACUC,cAAAA,WADV;AAEIvB,cAAAA,WAAW,CAACuB,WAAD,CAAX,CAAyBC,IAAzB,CAA8B,UAAAC,gBAAgB,EAAI;AAC9CC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,gBAAZ;;AACA,gBAAA,MAAI,CAACG,QAAL,CAAc;AAACP,kBAAAA,QAAQ,EAAEI;AAAX,iBAAd;AACH,eAHD,EAGGI,KAHH,CAGS,UAAUC,KAAV,EAAiB;AACtBJ,gBAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACH,eALD;;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;WA6CC,mBAAgBvB,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACGL,cAAAA,YAAY,CAAC6B,OAAb,CAAqB,QAArB,EAA8BxB,KAAK,CAACyB,MAAN,CAAaC,KAA3C;AADH;AAAA,+CAEoB/B,YAAY,CAACoB,OAAb,CAAqB,QAArB,CAFpB;;AAAA;AAESY,cAAAA,EAFT;AAGGR,cAAAA,OAAO,CAACC,GAAR,CAAYO,EAAZ;;AAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;WAOD,kBAAS;AACL,UAAIC,cAAc,GAAG,KAAKlB,KAAL,CAAWI,QAAX,CAAoBe,GAApB,CAAwB,UAAAC,CAAC;AAAA,eAC1C;AAAQ,UAAA,KAAK,EAAEA,CAAC,CAACH,EAAjB;AAAqB,UAAA,GAAG,EAAEG,CAAC,CAACH;AAA5B,WAAiCG,CAAC,CAACC,IAAnC,CAD0C;AAAA,OAAzB,CAArB;AAGA,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEvC,MAAM,CAACwC;AAApB,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAExC,MAAM,CAACyC;AAApB,6BADJ,EAKI,oBAAC,MAAD;AACI,QAAA,KAAK,EAAC,sBADV;AAEI,QAAA,OAAO,EAAE,KAAK7B;AAFlB,QALJ,EAUI,oBAAC,IAAD,OAVJ,EAaI,oBAAC,MAAD;AACI,QAAA,KAAK,EAAC,wBADV;AAEI,QAAA,OAAO,EAAE,KAAKC;AAFlB,QAbJ,EAkBI,oBAAC,IAAD,OAlBJ,EAqBI,oBAAC,MAAD;AACI,QAAA,KAAK,EAAC,eADV;AAEI,QAAA,OAAO,EAAE,KAAKC;AAFlB,QArBJ,EA0BI,oBAAC,IAAD,OA1BJ,EA6BI,oBAAC,MAAD;AACI,QAAA,KAAK,EAAC,+BADV;AAEI,QAAA,OAAO,EAAE,KAAKE;AAFlB,QA7BJ,EAkCI,oBAAC,IAAD,OAlCJ,EAqCI,oBAAC,MAAD;AACI,QAAA,KAAK,EAAC,eADV;AAEI,QAAA,OAAO,EAAE,KAAKC;AAFlB,QArCJ,EA2CI,6EAEA;AAAQ,QAAA,KAAK,EAAE,KAAKC,KAAL,CAAWiB,EAA1B;AAA8B,QAAA,QAAQ,EAAE,KAAKO;AAA7C,SACGN,cADH,CAFA,CA3CJ,EAmDI,oBAAC,MAAD;AACI,QAAA,KAAK,EAAC,QADV;AAEI,QAAA,OAAO,EAAE,KAAK7B;AAFlB,QAnDJ,CADJ;AA6DH;;;;EAhImCR,KAAK,CAAC4C,S;;SAAzBtC,U","sourcesContent":["import React from \"react\";\nimport {\n    View,\n    Text,\n    StyleSheet,\n    Image,\n    TextInput,\n    TouchableHighlight,\n    SectionList,\n    TouchableOpacity\n} from 'react-native';\nimport {styles} from \"./styles\"\nimport {getRaceList, timeoutPromise} from \"./tools\"\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport {Button} from \"react-native-web\";\n\nexport default class RaceScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dataRace: [],\n            dataWeather:[],\n            raceID :0,\n            raceList:[]\n        }\n    }\n\n    async componentDidMount() {\n        const accesstoken = await AsyncStorage.getItem('accesstoken');\n        getRaceList(accesstoken).then(racelistDropdown => {\n            console.log(racelistDropdown);\n            this.setState({raceList: racelistDropdown});\n        }).catch(function (error) {\n            console.log(error);\n        })\n\n    }\n\n    changeLogout = event => {\n        event.preventDefault();\n        this.props.navigation.replace('Logout');\n    }\n\n    changeNewRace = event => {\n        event.preventDefault();\n        this.props.navigation.replace('NewRace');\n    }\n\n     changeNewUser = event => {\n        event.preventDefault();\n        this.props.navigation.replace('NewUser');\n    }\n\n     changeFormel = event => {\n        event.preventDefault();\n        this.props.navigation.push('Formel');\n    }\n\n    changeNewOrder = event => {\n        event.preventDefault();\n        this.props.navigation.push('NewOrder');\n    }\n\n\n     changeAstrid = event => {\n        event.preventDefault();\n        this.props.navigation.push('Astrid');\n    }\n\n\n\n\n     async getRaceID(event){\n        AsyncStorage.setItem(\"raceID\",event.target.value);\n        const id = await AsyncStorage.getItem(\"raceID\");\n        console.log(id);\n    }\n\n\n    render() {\n        let optionTemplate = this.state.raceList.map(v => (\n            <option value={v.id} key={v.id}>{v.name}</option>\n        ));\n        return (\n            <View style={styles.viewStyles}>\n                <Text style={styles.textStyles}>\n                    24 Stunden Rennen\n                </Text>\n\n                <Button\n                    title=\"Neues Rennen anlegen\"\n                    onPress={this.changeNewRace}\n                />\n\n                <Text >\n                </Text>\n\n                <Button\n                    title=\"Neues Mitglied anlegen\"\n                    onPress={this.changeNewUser}\n                />\n\n                <Text >\n                </Text>\n\n                <Button\n                    title=\"Screen Formel\"\n                    onPress={this.changeFormel}\n                />\n\n                <Text >\n                </Text>\n\n                <Button\n                    title=\"Neue Reifenbestellung anlegen\"\n                    onPress={this.changeNewOrder}\n                />\n\n                <Text >\n                </Text>\n\n                <Button\n                    title=\"Screen Astrid\"\n                    onPress={this.changeAstrid}\n                />\n\n\n                <label>\n                Wähle das gewünschte Rennen aus:\n                <select value={this.state.id} onChange={this.getRaceID}>\n                  {optionTemplate}\n                </select>\n\n                </label>\n\n                <Button\n                    title=\"Logout\"\n                    onPress={this.changeLogout}\n                />\n\n\n\n            </View>\n        );\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}