{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { styles } from \"./styles\";\nimport { getRaceList, getWeatherTab, timeoutPromise, getWheelsList, getRaceDetails_by_ID } from \"./tools\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Table from \"./Table\";\n\nvar WeatherScreen = function (_React$Component) {\n  _inherits(WeatherScreen, _React$Component);\n\n  var _super = _createSuper(WeatherScreen);\n\n  function WeatherScreen(props) {\n    var _this;\n\n    _classCallCheck(this, WeatherScreen);\n\n    _this = _super.call(this, props);\n\n    _this.changeRace = function (event) {\n      event.preventDefault();\n\n      _this.props.navigation.goBack();\n    };\n\n    _this.state = {\n      dataRace: [],\n      raceID: 0,\n      raceList: [],\n      dataWeather: [],\n      listWheelStart: [],\n      RaceDetails: []\n    };\n    return _this;\n  }\n\n  _createClass(WeatherScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.getWeatherData();\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getRaceDetails\",\n    value: function getRaceDetails() {\n      var _this2 = this;\n\n      var accesstoken, raceID;\n      return _regeneratorRuntime.async(function getRaceDetails$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('accesstoken'));\n\n            case 2:\n              accesstoken = _context2.sent;\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('raceID'));\n\n            case 5:\n              raceID = _context2.sent;\n              getRaceDetails_by_ID(accesstoken, raceID).then(function (liste) {\n                console.log(liste);\n\n                _this2.setState({\n                  RaceDetails: liste\n                });\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"getWheelsStart\",\n    value: function getWheelsStart() {\n      var _this3 = this;\n\n      var accesstoken, raceID;\n      return _regeneratorRuntime.async(function getWheelsStart$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('accesstoken'));\n\n            case 2:\n              accesstoken = _context3.sent;\n              _context3.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('raceID'));\n\n            case 5:\n              raceID = _context3.sent;\n              getWheelsList(accesstoken, raceID).then(function (liste) {\n                console.log(liste);\n\n                _this3.setState({\n                  listWheelStart: liste\n                });\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"getWeatherData\",\n    value: function getWeatherData() {\n      var _this4 = this;\n\n      var accesstoken, raceID;\n      return _regeneratorRuntime.async(function getWeatherData$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('accesstoken'));\n\n            case 2:\n              accesstoken = _context4.sent;\n              _context4.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('raceID'));\n\n            case 5:\n              raceID = _context4.sent;\n              console.log(raceID);\n              getWeatherTab(accesstoken, raceID).then(function (DataTabular) {\n                console.log(DataTabular);\n\n                _this4.setState({\n                  dataWeather: DataTabular\n                });\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 8:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"renderTableData\",\n    value: function renderTableData() {\n      console.log(this.state.dataWeather);\n      return this.state.dataWeather.map(function (dataWeather, index) {\n        var temp_ground = dataWeather.temp_ground,\n            temp_air = dataWeather.temp_air,\n            datetime = dataWeather.datetime,\n            weather_des = dataWeather.weather_des;\n        return React.createElement(\"tr\", {\n          bgcolor: \"#d3d3d3\",\n          style: {\n            textAlign: \"left\",\n            padding: '8px',\n            fontFamily: 'arial'\n          },\n          key: temp_ground\n        }, React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'grey',\n            height: 15,\n            width: 150,\n            padding: '8px'\n          }\n        }, datetime), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'grey',\n            height: 20,\n            width: 150,\n            padding: '8px',\n            textAlign: 'center'\n          }\n        }, temp_air), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'grey',\n            height: 20,\n            width: 150,\n            padding: '8px',\n            textAlign: 'center'\n          }\n        }, temp_ground), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'grey',\n            height: 20,\n            width: 150,\n            padding: '8px',\n            textAlign: 'center'\n          }\n        }, weather_des));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: viewStyles1\n      }, React.createElement(\"div\", null, React.createElement(\"h1\", {\n        style: {\n          fontSize: 30,\n          marginRight: 'auto',\n          marginLeft: 'auto',\n          textAlign: 'center'\n        },\n        id: \"title\"\n      }, \"Wetterdaten\"), React.createElement(\"table\", {\n        style: {\n          overflowY: 'scroll'\n        },\n        id: \"list_formel\"\n      }, React.createElement(\"tr\", {\n        bgcolor: \"#808080\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"th\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'grey',\n          height: 25,\n          width: 150,\n          padding: '8px',\n          textAlign: 'center'\n        }\n      }, \"Zeitstempel\"), React.createElement(\"th\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'grey',\n          height: 20,\n          width: 150,\n          padding: '8px',\n          textAlign: 'center'\n        }\n      }, \"Lufttemperatur\"), React.createElement(\"th\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'grey',\n          height: 20,\n          width: 150,\n          padding: '8px',\n          textAlign: 'center'\n        }\n      }, \"Streckentemperatur\"), React.createElement(\"th\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'grey',\n          height: 20,\n          width: 150,\n          padding: '8px',\n          textAlign: 'center'\n        }\n      }, \"Streckenverh\\xE4ltnis\")), React.createElement(\"tbody\", null, this.renderTableData()))), React.createElement(View, {\n        style: {\n          width: 200\n        }\n      }, React.createElement(Text, {\n        style: {\n          height: 20\n        }\n      }), React.createElement(Button, {\n        title: \"zur\\xFCck\",\n        onPress: this.changeRace\n      })));\n    }\n  }]);\n\n  return WeatherScreen;\n}(React.Component);\n\nexport { WeatherScreen as default };\nvar viewStyles1 = {\n  flex: 1,\n  alignItems: 'center',\n  justifyContent: 'center',\n  fontFamily: 'arial',\n  overflowY: 'scroll'\n};","map":{"version":3,"sources":["C:/Users/Niklas/Documents/RepoForMasterChanges/frontend/WeatherScreen.js"],"names":["React","styles","getRaceList","getWeatherTab","timeoutPromise","getWheelsList","getRaceDetails_by_ID","AsyncStorage","Icon","Table","WeatherScreen","props","changeRace","event","preventDefault","navigation","goBack","state","dataRace","raceID","raceList","dataWeather","listWheelStart","RaceDetails","getWeatherData","getItem","accesstoken","then","liste","console","log","setState","catch","error","DataTabular","map","index","temp_ground","temp_air","datetime","weather_des","textAlign","padding","fontFamily","border","borderColor","height","width","viewStyles1","fontSize","marginRight","marginLeft","overflowY","color","renderTableData","Component","flex","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n    View,\r\n    Text,\r\n    StyleSheet,\r\n    Image,\r\n    TextInput,\r\n    TouchableHighlight,\r\n    SectionList,\r\n    TouchableOpacity,\r\n    ScrollView,\r\n} from 'react-native';\r\nimport {styles} from \"./styles\"\r\nimport {getRaceList, getWeatherTab, timeoutPromise,getWheelsList,getRaceDetails_by_ID} from \"./tools\"\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport {Button} from \"react-native-web\";\r\nimport Table from \"./Table\";\r\n\r\nexport default class WeatherScreen extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataRace: [],\r\n            raceID :0,\r\n            raceList:[],\r\n            dataWeather: [],\r\n            listWheelStart:[],\r\n            RaceDetails:[],\r\n        }\r\n    }\r\n\r\n    // navigate to Main Menue\r\n     changeRace = event => {\r\n        event.preventDefault();\r\n        this.props.navigation.goBack();\r\n    }\r\n\r\n    async componentDidMount(){\r\n        this.getWeatherData();\r\n    }\r\n\r\n\r\n    //get RaceDetails by RaceID\r\n    async getRaceDetails(){\r\n        const accesstoken = await AsyncStorage.getItem('accesstoken');\r\n        const raceID = await AsyncStorage.getItem('raceID');\r\n        getRaceDetails_by_ID(accesstoken,raceID).then(liste => {\r\n            console.log(liste);\r\n            this.setState({RaceDetails: liste});\r\n        }).catch(function (error) {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    //get ReifenData\r\n    async getWheelsStart(){\r\n        const accesstoken = await AsyncStorage.getItem('accesstoken');\r\n        const raceID = await AsyncStorage.getItem('raceID');\r\n        getWheelsList(accesstoken,raceID).then(liste => {\r\n            console.log(liste);\r\n            this.setState({listWheelStart: liste});\r\n        }).catch(function (error) {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n\r\n    //get Weather Data, it will be used in getRaceID\r\n    async getWeatherData(){\r\n       const accesstoken = await AsyncStorage.getItem('accesstoken');\r\n       const raceID = await AsyncStorage.getItem('raceID');\r\n       //const raceID = await AsyncStorage.getItem('raceID');\r\n       console.log(raceID)\r\n       getWeatherTab(accesstoken, raceID).then(DataTabular => {\r\n                console.log(DataTabular);\r\n                this.setState({dataWeather: DataTabular});\r\n            }).catch(function (error) {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n\r\n    /*\r\n    renderTableData() {\r\n        console.log(this.state.dataWeather)\r\n        return this.state.dataWeather.map((dataWeather, index) => {\r\n            const { temp_ground,temp_air,datetime,weather_des } =dataWeather //destructuring\r\n            return (\r\n            <tr key={datetime}>\r\n               <td>{datetime}</td>\r\n               <td>{temp_ground}</td>\r\n                <td>{temp_air}</td>\r\n                <td>{weather_des}</td>\r\n            </tr>\r\n         )\r\n      })\r\n   }\r\n     */\r\n\r\n    //Tabular Weather Data\r\n    renderTableData() {\r\n        console.log(this.state.dataWeather)\r\n        return this.state.dataWeather.map((dataWeather, index) => {\r\n            const { temp_ground,temp_air,datetime,weather_des } =dataWeather //destructuring\r\n            return (\r\n            <tr bgcolor='#d3d3d3' style={{textAlign: \"left\", padding: '8px', fontFamily: 'arial'}} key={temp_ground}>\r\n               <td style={{border: \"solid\", borderColor: 'grey', height: 15, width: 150, padding: '8px'}} >{datetime}</td>\r\n               <td style={{border: \"solid\", borderColor: 'grey', height: 20, width: 150, padding: '8px', textAlign: 'center'}} >{temp_air}</td>\r\n                <td style={{border: \"solid\", borderColor: 'grey', height: 20, width: 150, padding: '8px', textAlign: 'center'}} >{temp_ground}</td>\r\n                <td style={{border: \"solid\", borderColor: 'grey', height: 20, width: 150, padding: '8px', textAlign: 'center'}} >{weather_des}</td>\r\n            </tr>\r\n         )\r\n      })\r\n   }\r\n\r\n    render() {\r\n        return (\r\n            <View style={viewStyles1}>\r\n                <div >\r\n                <h1 style={{fontSize: 30, marginRight: 'auto', marginLeft: 'auto', textAlign: 'center'}} id='title'>Wetterdaten</h1>\r\n                <table style={{overflowY: 'scroll'}} id='list_formel'>\r\n                    <tr bgcolor='#808080' style={{textAlign: \"left\", padding: '8px', color: 'white', fontFamily: 'arial'}} >\r\n                    <th style={{border: \"solid\", borderColor: 'grey', height: 25, width: 150, padding: '8px',textAlign: 'center'}} >Zeitstempel</th>\r\n                    <th style={{border: \"solid\", borderColor: 'grey', height: 20, width: 150, padding: '8px', textAlign: 'center'}} >Lufttemperatur</th>\r\n                    <th style={{border: \"solid\", borderColor: 'grey', height: 20, width: 150, padding: '8px', textAlign: 'center'}} >Streckentemperatur</th>\r\n                    <th style={{border: \"solid\", borderColor: 'grey', height: 20, width: 150, padding: '8px', textAlign: 'center'}} >Streckenverhältnis</th>\r\n                    </tr>\r\n                   <tbody>\r\n                      {this.renderTableData()}\r\n                   </tbody>\r\n                </table>\r\n                </div>\r\n                <View  style={{width: 200}}>\r\n                <Text style={{height: 20}}></Text>\r\n                <Button\r\n                        title=\"zurück\"\r\n                        onPress={this.changeRace}\r\n                />\r\n                    </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\nconst viewStyles1= {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        fontFamily: 'arial',\r\n        overflowY: 'scroll',\r\n    };\r\n"]},"metadata":{},"sourceType":"module"}