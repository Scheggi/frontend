{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nfunction sendNewRaceRequest(id, temp_air, temp_ground, weather_des) {\n  return _regeneratorRuntime.async(function sendNewRaceRequest$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          timeoutPromise(2000, fetch('https://api.race24.cloud/user/weather/create', {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              raceID: AsyncStorage.getItem(\"raceID\"),\n              temp_air: temp_air,\n              temp_ground: temp_ground,\n              weather_des: weather_des\n            })\n          })).then(function (response) {\n            return response.json();\n          }).then().catch(function (error) {\n            console.log(error);\n          });\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction timeoutPromise(ms, promise) {\n  return new Promise(function (resolve, reject) {\n    var timeoutId = setTimeout(function () {\n      reject(new Error(\"promise timeout\"));\n    }, ms);\n    promise.then(function (res) {\n      clearTimeout(timeoutId);\n      resolve(res);\n    }, function (err) {\n      clearTimeout(timeoutId);\n      reject(err);\n    });\n  });\n}\n\nfunction getRaceList(accesstoken) {\n  return timeoutPromise(2000, fetch(\"https://api.race24.cloud/user/race/get\", {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      access_token: accesstoken\n    })\n  })).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    console.log(data);\n\n    if (\"msg\" in data) {\n      if (data[\"msg\"] === \"Token has expired\") {\n        refreshToken().then(function (token) {\n          getRaceList(token);\n        }).catch(function (error) {\n          console.log(\"Refresh failed\");\n          console.log(error);\n        });\n        return [];\n      }\n    } else {\n      console.log(\"Return Data\");\n      console.log(data[0].data);\n      return data[0].data;\n    }\n\n    return [];\n  }).catch(function (error) {\n    console.log(error);\n    return [];\n  });\n}\n\nfunction getRaceDetails_by_ID(accesstoken, raceid) {\n  return timeoutPromise(2000, fetch(\"https://api.race24.cloud/user/raceDetails/get\", {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      access_token: accesstoken,\n      raceID: raceid\n    })\n  })).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    console.log(data);\n\n    if (\"msg\" in data) {\n      if (data[\"msg\"] === \"Token has expired\") {\n        refreshToken().then(function (token) {\n          getRaceDetails_by_ID(token, raceid);\n          console.log([token, raceid]);\n        }).catch(function (error) {\n          console.log(\"Refresh failed\");\n          console.log(error);\n        });\n        return [];\n      }\n    } else {\n      console.log(\"Return Data\");\n      console.log(data[0].data);\n      return data[0].data;\n    }\n\n    return [];\n  }).catch(function (error) {\n    console.log(error);\n    return [];\n  });\n}\n\nfunction getWeatherTab(accesstoken, raceID) {\n  console.log(raceID);\n  return timeoutPromise(2000, fetch(\"https://api.race24.cloud/user/weather/getlast10\", {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      access_token: accesstoken,\n      raceID: raceID\n    })\n  })).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    console.log(data);\n\n    if (\"msg\" in data) {\n      if (data[\"msg\"] === \"Token has expired\") {\n        refreshToken().then(function (token) {\n          getWeatherTab(token, raceID);\n        }).catch(function (error) {\n          console.log(\"Refresh failed\");\n          console.log(error);\n        });\n        return [];\n      }\n    } else {\n      console.log(\"Return Data\");\n      console.log(data[0].data);\n      return data[0].data;\n    }\n\n    return [];\n  }).catch(function (error) {\n    console.log(error);\n    return [];\n  });\n}\n\nfunction getWheelsList(accesstoken, raceid) {\n  console.log([raceid]);\n  return timeoutPromise(2000, fetch(\"https://api.race24.cloud/wheels_start/get\", {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      access_token: accesstoken,\n      racID: raceid\n    })\n  })).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    console.log(data);\n\n    if (\"msg\" in data) {\n      if (data[\"msg\"] === \"Token has expired\") {\n        refreshToken().then(function (token) {\n          getWheelsList(token, raceid);\n        }).catch(function (error) {\n          console.log(\"Refresh failed\");\n          console.log(error);\n        });\n        return [];\n      }\n    } else {\n      console.log(\"Return Data\");\n      console.log(data[0].data);\n      return data[0].data;\n    }\n\n    return [];\n  }).catch(function (error) {\n    console.log(error);\n    return [];\n  });\n}\n\nfunction getFormelList(accesstoken) {\n  return timeoutPromise(2000, fetch(\"https://api.race24.cloud/formel/get\", {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      access_token: accesstoken\n    })\n  })).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    console.log(data);\n\n    if (\"msg\" in data) {\n      if (data[\"msg\"] === \"Token has expired\") {\n        refreshToken().then(function (token) {\n          getFormelList(token);\n        }).catch(function (error) {\n          console.log(\"Refresh failed\");\n          console.log(error);\n        });\n        return [];\n      }\n    } else {\n      console.log(\"Return Data\");\n      console.log(data[0].data);\n      return data[0].data;\n    }\n\n    return [];\n  }).catch(function (error) {\n    console.log(error);\n    return [];\n  });\n}\n\nfunction refreshToken() {\n  var accesstoken, refreshtoken;\n  return _regeneratorRuntime.async(function refreshToken$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('accesstoken'));\n\n        case 2:\n          accesstoken = _context2.sent;\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('refreshtoken'));\n\n        case 5:\n          refreshtoken = _context2.sent;\n          _context2.next = 8;\n          return _regeneratorRuntime.awrap(timeoutPromise(2000, fetch('https://api.race24.cloud/user/auth/refresh', {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              access_token: accesstoken,\n              refresh_token: refreshtoken\n            })\n          })).then(function (response) {\n            return response.json();\n          }).then(function (data) {\n            AsyncStorage.setItem('accesstoken', String(data.access_token));\n          }));\n\n        case 8:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction TableNiklas(list) {\n  var colNames = ['Zeitstempel', 'Lufttemperatur', 'Streckentemperatur', 'StreckenverhÃ¤ltnis'];\n  var number = 920;\n  return React.createElement(\"div\", null, list.length > 0 && React.createElement(\"table\", {\n    cellSpacing: \"0\",\n    style: {\n      width: width,\n      height: \"auto\",\n      margin: 15,\n      borderWidth: 1\n    }\n  }, React.createElement(\"thead\", null, React.createElement(\"tr\", null, colNames.map(function (headerItem, index) {\n    return React.createElement(\"th\", {\n      style: {\n        borderStyle: 'solid',\n        borderWidth: 1\n      },\n      key: index\n    }, headerItem);\n  }))), React.createElement(\"tbody\", null, Object.values(list).map(function (obj, index) {\n    return React.createElement(\"tr\", {\n      key: index\n    }, Object.values(obj).map(function (value, index2) {\n      return React.createElement(\"td\", {\n        style: {\n          borderStyle: 'solid',\n          borderWidth: 1\n        },\n        key: index2\n      }, value);\n    }));\n  }))));\n}\n\nexport { getWeatherTab, timeoutPromise, refreshToken, getRaceList, getFormelList, TableNiklas, getWheelsList, getRaceDetails_by_ID };","map":{"version":3,"sources":["/home/toni/PycharmProjects/PropraSource/frontend/tools.js"],"names":["AsyncStorage","sendNewRaceRequest","id","temp_air","temp_ground","weather_des","timeoutPromise","fetch","method","headers","body","JSON","stringify","raceID","getItem","then","response","json","catch","error","console","log","ms","promise","Promise","resolve","reject","timeoutId","setTimeout","Error","res","clearTimeout","err","getRaceList","accesstoken","access_token","data","refreshToken","token","getRaceDetails_by_ID","raceid","getWeatherTab","getWheelsList","racID","getFormelList","refreshtoken","refresh_token","setItem","String","TableNiklas","list","colNames","number","length","width","height","margin","borderWidth","map","headerItem","index","borderStyle","Object","values","obj","value","index2"],"mappings":"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","sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\n\n\nasync function sendNewRaceRequest(id,temp_air,temp_ground,weather_des) {\n   timeoutPromise(2000, fetch(\n        'https://api.race24.cloud/user/weather/create', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                raceID: AsyncStorage.getItem(\"raceID\"),\n                temp_air:temp_air,\n                temp_ground:temp_ground,\n                weather_des:weather_des,\n            })\n        })\n        ).then(response => response.json()).then(\n            //timer von 30 min neu startem\n            ).catch(function (error) {\n            console.log(error);\n        })\n}\n\n\n\nfunction timeoutPromise(ms, promise) {\n  return new Promise((resolve, reject) => {\n    const timeoutId = setTimeout(() => {\n      reject(new Error(\"promise timeout\"))\n    }, ms);\n    promise.then(\n      (res) => {\n        clearTimeout(timeoutId);\n        resolve(res);\n      },\n      (err) => {\n        clearTimeout(timeoutId);\n        reject(err);\n      }\n    );\n  })\n}\n\n//get Race List\nfunction getRaceList(accesstoken) {\n  //const accesstoken = AsyncStorage.getItem('accesstoken');\n  return timeoutPromise(2000, fetch(\"https://api.race24.cloud/user/race/get\", {\n      method: 'POST',\n      headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n          access_token: accesstoken,\n      })\n      })).then(response => response.json()).then(data => {\n              console.log(data);\n              if (\"msg\" in data){\n                            if (data[\"msg\"] === \"Token has expired\"){\n                                refreshToken().then( token => {\n                                        getRaceList(token);\n                                    }\n                                ).catch( function (error) {\n                                        console.log(\"Refresh failed\");\n                                        console.log(error);\n                                    }\n                                );\n                                return [];\n                            }\n                        }\n              else{\n                  console.log(\"Return Data\");\n                  console.log(data[0].data);\n                  return data[0].data;\n              }\n              return [];\n      }).catch(function (error) {\n            console.log(error);\n            return [];\n        })\n}\n\n// get RaceDetails od RaceID\nfunction getRaceDetails_by_ID(accesstoken,raceid) {\n  //const accesstoken = AsyncStorage.getItem('accesstoken');\n  return timeoutPromise(2000, fetch(\"https://api.race24.cloud/user/raceDetails/get\", {\n      method: 'POST',\n      headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n          access_token: accesstoken,\n          raceID:raceid,\n      })\n      })).then(response => response.json()).then(data => {\n              console.log(data);\n              if (\"msg\" in data){\n                            if (data[\"msg\"] === \"Token has expired\"){\n                                refreshToken().then( token => {\n                                        getRaceDetails_by_ID(token,raceid);\n                                        console.log([token,raceid])\n                                    }\n                                ).catch( function (error) {\n                                        console.log(\"Refresh failed\");\n                                        console.log(error);\n                                    }\n                                );\n                                return [];\n                            }\n                        }\n              else{\n                  console.log(\"Return Data\");\n                  console.log(data[0].data);\n                  return data[0].data;\n              }\n              return [];\n      }).catch(function (error) {\n            console.log(error);\n            return [];\n        })\n}\n\n\n\n\n///user/weather/getlast10\n//get Weather Tab\nfunction getWeatherTab(accesstoken,raceID) {\n    console.log(raceID)\n  return timeoutPromise(2000, fetch(\"https://api.race24.cloud/user/weather/getlast10\", {\n      method: 'POST',\n      headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n          access_token: accesstoken,\n          raceID : raceID,\n      })\n      })).then(response => response.json()).then(data => {\n              console.log(data);\n              if (\"msg\" in data){\n                            if (data[\"msg\"] === \"Token has expired\"){\n                                refreshToken().then( token => {\n                                        getWeatherTab(token,raceID);\n                                    }\n                                ).catch( function (error) {\n                                        console.log(\"Refresh failed\");\n                                        console.log(error);\n                                    }\n                                );\n                                return [];\n                            }\n                        }\n              else{\n                  console.log(\"Return Data\");\n                  console.log(data[0].data);\n                  return data[0].data;\n              }\n              return [];\n      }).catch(function (error) {\n            console.log(error);\n            return [];\n        })\n}\n\n\n//get Wheels\nfunction getWheelsList(accesstoken,raceid) {\n  //const accesstoken = AsyncStorage.getItem('accesstoken');\n    console.log([raceid])\n  return timeoutPromise(2000, fetch(\"https://api.race24.cloud/wheels_start/get\", {\n      method: 'POST',\n      headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n          access_token: accesstoken,\n          racID:raceid\n      })\n      })).then(response => response.json()).then(data => {\n              console.log(data);\n              if (\"msg\" in data){\n                            if (data[\"msg\"] === \"Token has expired\"){\n                                refreshToken().then( token => {\n                                        getWheelsList(token,raceid);\n                                    }\n                                ).catch( function (error) {\n                                        console.log(\"Refresh failed\");\n                                        console.log(error);\n                                    }\n                                );\n                                return [];\n                            }\n                        }\n              else{\n                  console.log(\"Return Data\");\n                  console.log(data[0].data);\n                  return data[0].data;\n              }\n              return [];\n      }).catch(function (error) {\n            console.log(error);\n            return [];\n        })\n}\n\n\n\n\n\nfunction getFormelList(accesstoken) {\n  //const accesstoken = AsyncStorage.getItem('accesstoken');\n  return timeoutPromise(2000, fetch(\"https://api.race24.cloud/formel/get\", {\n      method: 'POST',\n      headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n          access_token: accesstoken,\n      })\n      })).then(response => response.json()).then(data => {\n              console.log(data);\n              if (\"msg\" in data){\n                            if (data[\"msg\"] === \"Token has expired\"){\n                                refreshToken().then( token => {\n                                        getFormelList(token);\n                                    }\n                                ).catch( function (error) {\n                                        console.log(\"Refresh failed\");\n                                        console.log(error);\n                                    }\n                                );\n                                return [];\n                            }\n                        }\n              else{\n                  console.log(\"Return Data\");\n                  console.log(data[0].data);\n                  return data[0].data;\n              }\n              return [];\n      }).catch(function (error) {\n            console.log(error);\n            return [];\n        })\n}\n\n\n\nasync function refreshToken() {\n  let accesstoken = await AsyncStorage.getItem('accesstoken');\n  let refreshtoken = await AsyncStorage.getItem('refreshtoken');\n  await timeoutPromise(2000, fetch(\n      'https://api.race24.cloud/user/auth/refresh', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          access_token: accesstoken,\n          refresh_token: refreshtoken,\n        })\n      }\n  )).then(\n      response => response.json()\n  ).then(\n      data => {\n        AsyncStorage.setItem('accesstoken', String(data.access_token));\n      }\n  )\n}\n\nfunction TableNiklas(list) {\n    const colNames = ['Zeitstempel', 'Lufttemperatur', 'Streckentemperatur', 'StreckenverhÃ¤ltnis' ];\n    const number = 920 ;\n    return (\n        <div>\n          {list.length > 0 && (\n            <table\n              cellSpacing='0'\n              style={{\n              \twidth: width,\n              \theight: \"auto\",\n              \tmargin: 15,\n              \tborderWidth: 1,\n\n              }}>\n\n                <thead >\n                  <tr>\n                    {colNames.map((headerItem, index) => (\n                      <th style={{borderStyle: 'solid',  borderWidth: 1}} key={index}>{headerItem}</th>\n                    ))}\n                  </tr>\n                </thead>\n\n                <tbody>\n                  {Object.values(list).map((obj, index) => (\n                    <tr key={index}>\n                      {Object.values(obj).map((value, index2) => (\n                        <td style={{borderStyle: 'solid',  borderWidth: 1}} key={index2}>{value}</td>\n                      ))}\n                    </tr>\n                  ))}\n                </tbody>\n            </table>\n          )}\n        </div>\n        )\n    }\n\n\n\n\nexport {getWeatherTab,timeoutPromise, refreshToken,getRaceList,getFormelList,TableNiklas,getWheelsList,getRaceDetails_by_ID}\n\n"]},"metadata":{},"sourceType":"module"}