{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { styles } from \"./styles\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { timeoutPromise } from \"./tools\";\nimport Text from \"react-native-web/dist/vendor/react-native/Animated/components/AnimatedText\";\n\nvar LogoutScreen = function (_React$Component) {\n  _inherits(LogoutScreen, _React$Component);\n\n  var _super = _createSuper(LogoutScreen);\n\n  function LogoutScreen(props) {\n    var _this;\n\n    _classCallCheck(this, LogoutScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      username: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(LogoutScreen, [{\n    key: \"sendLogoutRequest\",\n    value: function sendLogoutRequest() {\n      var _this2 = this;\n\n      var accesstoken;\n      return _regeneratorRuntime.async(function sendLogoutRequest$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"Logout\");\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('accesstoken'));\n\n            case 3:\n              accesstoken = _context.sent;\n              timeoutPromise(2000, fetch('https://api.race24.cloud/user/auth/logout', {\n                method: 'POST',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  access_token: accesstoken\n                })\n              })).then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                if (data[1] == 200) {\n                  AsyncStorage.clear();\n\n                  _this2.props.navigation.navigate('AppNavigator', {\n                    screen: \"Splash\"\n                  });\n                } else {\n                  console.log(\"Logout failed\");\n                }\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.sendLogoutRequest();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.viewStyles\n      }, React.createElement(Text, {\n        style: styles.textStyles\n      }, \" Sie wurden erfolgreich ausgeloggt!\"));\n    }\n  }]);\n\n  return LogoutScreen;\n}(React.Component);\n\nexport { LogoutScreen as default };","map":{"version":3,"sources":["C:/Users/Niklas/Documents/RepoForMasterChanges/frontend/LogoutScreen.js"],"names":["React","styles","AsyncStorage","timeoutPromise","Text","LogoutScreen","props","state","username","console","log","getItem","accesstoken","fetch","method","headers","body","JSON","stringify","access_token","then","response","json","data","clear","navigation","navigate","screen","catch","error","sendLogoutRequest","viewStyles","textStyles","Component"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAAQC,MAAR;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,SAAQC,cAAR;AACA,OAAOC,IAAP,MAAiB,4EAAjB;;IAIqBC,Y;;;;;AACjB,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAFe;AAKlB;;;;WAED;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACIC,cAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AADJ;AAAA,+CAE8BR,YAAY,CAACS,OAAb,CAAqB,YAArB,CAF9B;;AAAA;AAEUC,cAAAA,WAFV;AAGGT,cAAAA,cAAc,CAAC,IAAD,EAAOU,KAAK,CACrB,2CADqB,EACwB;AACzCC,gBAAAA,MAAM,EAAE,MADiC;AAEzCC,gBAAAA,OAAO,EAAE;AACL,4BAAU,kBADL;AAEL,kCAAgB;AAFX,iBAFgC;AAM1CC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,kBAAAA,YAAY,EAAEP;AADG,iBAAf;AANoC,eADxB,CAAZ,CAAd,CAWOQ,IAXP,CAWY,UAAAC,QAAQ;AAAA,uBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,eAXpB,EAWyCF,IAXzC,CAW8C,UAAAG,IAAI,EAAI;AAC7C,oBAAIA,IAAI,CAAC,CAAD,CAAJ,IAAS,GAAb,EAAkB;AACdrB,kBAAAA,YAAY,CAACsB,KAAb;;AACA,kBAAA,MAAI,CAAClB,KAAL,CAAWmB,UAAX,CAAsBC,QAAtB,CAA+B,cAA/B,EAA8C;AAACC,oBAAAA,MAAM,EAAE;AAAT,mBAA9C;AAEH,iBAJD,MAKK;AACDlB,kBAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAGH;AACJ,eAtBN,EAsBQkB,KAtBR,CAsBc,UAAUC,KAAV,EAAiB;AACtBpB,gBAAAA,OAAO,CAACC,GAAR,CAAYmB,KAAZ;AACH,eAxBN;;AAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;WA8BA,6BAAoB;AAChB,WAAKC,iBAAL;AACH;;;WAED,kBAAS;AACL,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE7B,MAAM,CAAC8B;AAApB,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE9B,MAAM,CAAC+B;AAApB,+CADJ,CADJ;AAKH;;;;EAhDqChC,KAAK,CAACiC,S;;SAA3B5B,Y","sourcesContent":["import React from \"react\";\r\nimport {TextInput, Button, View} from \"react-native\";\r\nimport {styles} from \"./styles\"\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport {timeoutPromise} from \"./tools\"\r\nimport Text from \"react-native-web/dist/vendor/react-native/Animated/components/AnimatedText\";\r\n\r\n\r\n\r\nexport default class LogoutScreen extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n        };\r\n    }\r\n\r\n    async sendLogoutRequest() {\r\n        console.log(\"Logout\")\r\n        const accesstoken = await AsyncStorage.getItem('accesstoken');\r\n       timeoutPromise(2000, fetch(\r\n            'https://api.race24.cloud/user/auth/logout', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n               body: JSON.stringify({\r\n                   access_token: accesstoken,\r\n               })\r\n            })\r\n            ).then(response => response.json()).then(data => {\r\n                if (data[1]==200) {\r\n                    AsyncStorage.clear()\r\n                    this.props.navigation.navigate('AppNavigator',{screen: \"Splash\"});\r\n\r\n                }\r\n                else {\r\n                    console.log(\"Logout failed\")\r\n                    //AsyncStorage.clear()\r\n                    //this.props.navigation.replace(\"Race\")\r\n                }\r\n            }).catch(function (error) {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.sendLogoutRequest()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <View style={styles.viewStyles}>\r\n                <Text style={styles.textStyles}> Sie wurden erfolgreich ausgeloggt!</Text>\r\n            </View>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}